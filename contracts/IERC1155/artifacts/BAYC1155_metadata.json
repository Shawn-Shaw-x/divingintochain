{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					}
				],
				"name": "TransferBatch",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "TransferSingle",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "value",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "URI",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "accounts",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "balanceOfBatch",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"name": "mintBatch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeBatchTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "uri",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"ApprovalForAll(address,address,bool)": {
					"details": "批量授权事件 当`account`将所有代币授权给`operator`时释放"
				},
				"TransferBatch(address,address,address,uint256[],uint256[])": {
					"details": "多类代币转账事件 ids和values为转账的代币种类和数量数组"
				},
				"TransferSingle(address,address,address,uint256,uint256)": {
					"details": "单类代币转账事件 当`value`个`id`种类的代币被`operator`从`from`转账到`to`时释放."
				},
				"URI(string,uint256)": {
					"details": "当`id`种类的代币的URI发生变化时释放，`value`为新的URI"
				}
			},
			"kind": "dev",
			"methods": {
				"balanceOf(address,uint256)": {
					"details": "持仓查询 实现IERC1155的balanceOf，返回account地址的id种类代币持仓量。"
				},
				"balanceOfBatch(address[],uint256[])": {
					"details": "批量持仓查询 要求: - `accounts` 和 `ids` 数组长度相等."
				},
				"isApprovedForAll(address,address)": {
					"details": "查询批量授权."
				},
				"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
					"details": "批量安全转账，将`amounts`数组单位的`ids`数组种类代币从`from`转账到`to` 释放 {TransferSingle} 事件. 要求: - to 不能是0地址. - from拥有足够的持仓量，且调用者拥有授权 - 如果 to 是智能合约, 他必须支持 IERC1155Receiver-onERC1155BatchReceived. - ids和amounts数组长度相等"
				},
				"safeTransferFrom(address,address,uint256,uint256,bytes)": {
					"details": "安全转账，将`amount`单位的`id`种类代币从`from`转账到`to` 释放 {TransferSingle} 事件. 要求: - to 不能是0地址. - from拥有足够的持仓量，且调用者拥有授权 - 如果 to 是智能合约, 他必须支持 IERC1155Receiver-onERC1155Received."
				},
				"setApprovalForAll(address,bool)": {
					"details": "批量授权，调用者授权operator使用其所有代币 释放{ApprovalForAll}事件 条件：msg.sender != operator"
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"uri(uint256)": {
					"details": "返回ERC1155的id种类代币的uri，存储metadata，类似ERC721的tokenURI."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "implement a BAYC *",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/IERC1155/BAYC1155.sol": "BAYC1155"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/IERC1155/Address.sol": {
			"keccak256": "0xe32cc9cb04b1ebf90edd10cda3b6102665726c110fd805acf068ccf06086ddf3",
			"license": "MIT",
			"urls": [
				"bzz-raw://29b33fc399751be9af8a0d75ad58f9cdd61f80c3919f67eba10bc54b2a055f10",
				"dweb:/ipfs/QmTDLSVGMugTSLAAgYz3pq5YTgTggHk6XnYASAHq1bqMvh"
			]
		},
		"contracts/IERC1155/BAYC1155.sol": {
			"keccak256": "0x4c838ef4b47dab10dfeeb101c1cc92e01b02baf55f1745fb59205e24572c655a",
			"license": "MIT",
			"urls": [
				"bzz-raw://33e6942633ad4b8a636d903923ccf565b6ad57c61f34b097a67e2caf36b0bdf5",
				"dweb:/ipfs/QmTvkRMwAjPBHJunTdojdc9fwsCH23HDX2pE9QNrj6gRoN"
			]
		},
		"contracts/IERC1155/ERC1155.sol": {
			"keccak256": "0xd6b51941d3e530cd2db2acf8e89c7cc86594646d1a385daca3f454720a776c89",
			"license": "MIT",
			"urls": [
				"bzz-raw://059d1a759ece742aa29b7e71a6ddd66e86787534a9263a39e33ddc389b62f42a",
				"dweb:/ipfs/QmNg5mvjqAtRqpnaiwq7vAumUxf6pj72kWQea86hwqD63J"
			]
		},
		"contracts/IERC1155/IERC1155.sol": {
			"keccak256": "0xe6538c950a711318d6bffa7de688cff664990f1fcc6fa5b3a0f8d70937d80dc4",
			"license": "MIT",
			"urls": [
				"bzz-raw://315079978fca11dc75459d9f8edb072228824882e19fbfe2c6d464d26058a857",
				"dweb:/ipfs/Qmbed1ejUFnx5cgantMZWUVhCzDLPdc4GCU7r6DHGQAsV4"
			]
		},
		"contracts/IERC1155/IERC1155MetadataURI.sol": {
			"keccak256": "0x67d97b034e1805a92054cef4730baa6d6dcc4fb6c65236ee03421e05c5b74a16",
			"license": "MIT",
			"urls": [
				"bzz-raw://4e0880bf748818722e712ac781e4cae6fdde68bac2e23b39adb5d6d2e541ff51",
				"dweb:/ipfs/QmauftMDH2yv7J4rbgWRNoFkErvx6359bmpiKyP65rmPko"
			]
		},
		"contracts/IERC1155/IERC1155Receiver.sol": {
			"keccak256": "0xcb23664a71dd327dde138bf32c1d1c9fc6a04747e7c040561cafff0ef00f1f50",
			"license": "MIT",
			"urls": [
				"bzz-raw://411ba5eaf5df5f6a8b46453c07ead6479797dfafb2d7cb2741eb04bb45ca963b",
				"dweb:/ipfs/QmVDGCizQEhTovdquh57gGFfb4myL1HbyK8n7WaWrGsM5F"
			]
		},
		"contracts/IERC721/IERC165.sol": {
			"keccak256": "0x8f1405053180e54a54ceef00410704135364bed7d84060e99f623dfb1e93e2dc",
			"license": "MIT",
			"urls": [
				"bzz-raw://1c50d54cfb8f0e89947fc4d92c33f6d52551bc45fb9119a0814b04a0e180eefe",
				"dweb:/ipfs/QmRrjCtAzHybRruHLZRXYGqs5txvvomcHxiftp5PpW6aMy"
			]
		},
		"contracts/IERC721/String.sol": {
			"keccak256": "0x660e02ca4f221fef9e504dcbbb436559e16d85be6a5c570d870d700f3df4d0cf",
			"license": "MIT",
			"urls": [
				"bzz-raw://f22a0497813d3e29e534e5c2ce309f1cf65056eca3313a920bab0309bb50cfe1",
				"dweb:/ipfs/QmXDMWNMWw4P8xzS29LR3anbGxLXiZfKi4JLaSgU6mdytr"
			]
		}
	},
	"version": 1
}