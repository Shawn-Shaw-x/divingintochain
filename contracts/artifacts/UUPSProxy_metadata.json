{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_implementation",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "words",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "What is UUPS UUPS is universal upgradeable proxy standard What is different between UUPS and normal upgrade proxy standard        upgrade function location       is selector conflict?       disavantage upgradeable         proxy                               yes                 selector conflict transparent         proxy                               no                  too much gas UUPS                logic                               no                  more complex How to write a UUPS We put the upgrade function on logic contract because of the logic function have the contex of proxy. So the changed of state variable on logic contract means the changed of the state variable of proxy contract; delegateCall: -----             -----------                     ----------- |userA| --call--> | contractB |  --delegateCall-->| contractC | -----             -----------                     ----------- contex: B                         contex: B msg.sender: A                     msg.sender: A msg.value: A                      msg.value: A Note: We have to make sure we offer a right logic address to upgrate Or else we will no be able to upgrade anymore.*",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/UUPS.sol": "UUPSProxy"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/UUPS.sol": {
			"keccak256": "0xbff9fd5e1eeb87c5c087644e6a5ebd5bfcbcebcd2d66c87927972354eef10e2a",
			"license": "MIT",
			"urls": [
				"bzz-raw://f76113c43e6169c618b993df44dd27eaef262a9ccef5cb43dc05663b0c49df2c",
				"dweb:/ipfs/QmPV7294xDwoZn6H666w7mjoGVJ44kGgvdY2MvvN6nsYy3"
			]
		}
	},
	"version": 1
}