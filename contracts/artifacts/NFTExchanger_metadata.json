{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "nftAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "List",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "nftAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "Purchase",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "nftAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Revoke",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "nftAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newPrice",
						"type": "uint256"
					}
				],
				"name": "Update",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					}
				],
				"name": "list",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "nftList",
				"outputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "onERC721Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "purchase",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "revoke",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_newPrice",
						"type": "uint256"
					}
				],
				"name": "update",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"list(address,uint256,uint256)": {
					"notice": "Seller create NFT and create order , emit List event. NFT will transfer from seller to NFTExchanger contract.*"
				},
				"purchase(address,uint256)": {
					"notice": "Purchase: buyer purchase NFT, emit Purchase event. The NFT will be transferd from contract to buyer*"
				},
				"revoke(address,uint256)": {
					"notice": "Seller cancel the list, emit revoke event. Transfer NFT from contract to buyer*"
				},
				"update(address,uint256,uint256)": {
					"notice": "Update list price by seller*"
				}
			},
			"notice": "NFT exchanger implementation 1. Buyer: purchase() 2. Seller: list()/ revoke()/ update() 3. Order: one tokenId == one order. An order includes price and owner. it will be null when the order purchase() or revoke().*",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/NFTExchanger.sol": "NFTExchanger"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/IERC721/ERC721.sol": {
			"keccak256": "0x2c65ed044ea6637b04317c7dcb4998e1d8cfec65c892ba5f3e20ea2009b818f7",
			"license": "MIT",
			"urls": [
				"bzz-raw://ddb0fee94d03a62e1c17d71473197833f9b3ad2a1b52308667b60197d8cbc97d",
				"dweb:/ipfs/QmQuj5zHEZCHpjqTFDJDcvuNzx1oeXsn3SQDVkP26MeAsg"
			]
		},
		"contracts/IERC721/IERC165.sol": {
			"keccak256": "0x8f1405053180e54a54ceef00410704135364bed7d84060e99f623dfb1e93e2dc",
			"license": "MIT",
			"urls": [
				"bzz-raw://1c50d54cfb8f0e89947fc4d92c33f6d52551bc45fb9119a0814b04a0e180eefe",
				"dweb:/ipfs/QmRrjCtAzHybRruHLZRXYGqs5txvvomcHxiftp5PpW6aMy"
			]
		},
		"contracts/IERC721/IERC721.sol": {
			"keccak256": "0x900b080a7ec3eea3ab58a99b77b326de284adefc694720ff2a1970c409add465",
			"license": "MIT",
			"urls": [
				"bzz-raw://fbc2b92ea80e49b70175baa96bbb9100e711b54431f28cdd35a07a84c158f596",
				"dweb:/ipfs/QmcLjH7rYNja6M8dKraCUrL2FapfbfAdGTipDHEp1ZeShN"
			]
		},
		"contracts/IERC721/IERC721Metadata.sol": {
			"keccak256": "0xcf6c01c9aa849597e91f0c2e8263f3124a4cf9883d32568579b1dcc704175bc3",
			"license": "MIT",
			"urls": [
				"bzz-raw://f3abdefaebb80b978349929ccf09fe7e70bb97e6abe6ebdb3aef920af738ca88",
				"dweb:/ipfs/QmbWss9tvkQhe2rhQqRbAXQHLktSC6SJHiJynnswH9vLNh"
			]
		},
		"contracts/IERC721/IERC721Receiver.sol": {
			"keccak256": "0x8d773ce8a111a5eacca6113339e0677b6723ece54b17ed4386844abc230e51a5",
			"license": "MIT",
			"urls": [
				"bzz-raw://9aceaabbd3be854a568fe85c2bac2c03c8d950def4433cce2e2a5687b0165be5",
				"dweb:/ipfs/QmR7pNX9UGbVFZp7w11RXWNcSi67uqMR7vCYeStHceyFaj"
			]
		},
		"contracts/IERC721/String.sol": {
			"keccak256": "0x660e02ca4f221fef9e504dcbbb436559e16d85be6a5c570d870d700f3df4d0cf",
			"license": "MIT",
			"urls": [
				"bzz-raw://f22a0497813d3e29e534e5c2ce309f1cf65056eca3313a920bab0309bb50cfe1",
				"dweb:/ipfs/QmXDMWNMWw4P8xzS29LR3anbGxLXiZfKi4JLaSgU6mdytr"
			]
		},
		"contracts/IERC721/WTFApe.sol": {
			"keccak256": "0xb395f62db81b650b418f97ce025829cb235213b173436124e772e7840637320f",
			"license": "MIT",
			"urls": [
				"bzz-raw://44c8f63af74bb078a7688e225e76a0343ce077aa5c08dc1440c521d5cfd92f6c",
				"dweb:/ipfs/QmVQhJj4ueXobxJH1VMtMpssGPqV3MuWN1gGAdWZt2aHTX"
			]
		},
		"contracts/NFTExchanger.sol": {
			"keccak256": "0xd3db1204a0a69650eb976476396066d3f7c8a538c223346a2e4faf093f0e9606",
			"license": "MIT",
			"urls": [
				"bzz-raw://c63d3f6880be15297f7cce5789e697b724025e8d330ea958ba6a775f31d32d2a",
				"dweb:/ipfs/QmPtiszL9cZkN7WGJ2uQW7HMHEM1zqpiiSRSekh6kdhai1"
			]
		}
	},
	"version": 1
}