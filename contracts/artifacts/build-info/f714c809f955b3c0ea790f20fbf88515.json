{
	"id": "f714c809f955b3c0ea790f20fbf88515",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/linerRelease.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n\r\n/**\r\n    In financial field, some companies will give token to their employees.\r\n    But there are some issues in it whitch is employees may chose to sell all of  their tokens.\r\n    That will drop the price of the token.\r\nWhat is liner release?\r\n    Liner release means tokens will be released slowly.\r\n    project owner will make rule about the vesting.\r\nWhat rules?\r\n    - the project owner stipulates the start time, durations and beneficiary of release.\r\n    - the project owner transfers the locked ERC20 tokens to the TokenVesting contract.\r\n    - beneficiary can call the release() function to gain their tokens.\r\n **/\r\ncontract TokenVasting{\r\n    // event\r\n    event ERC20Released(address indexed token, uint256 amount);\r\n\r\n    mapping(address => uint256) public erc20Released; // token address => released amount\r\n    address public immutable beneficiary; // beneficiary address\r\n    uint256 public immutable start; // start timestamp\r\n    uint256 public immutable duration; // duration\r\n\r\n    /**\r\n        initialize the address of beneficiary, duration, and start timestamp\r\n    **/\r\n    constructor(\r\n        address beneficiaryAddress,\r\n        uint256 durationSeconds\r\n    ){\r\n        require(beneficiary != address(0),\"VestingWallet: beneficiary is 0 address\");\r\n        beneficiary = beneficiaryAddress;\r\n        start = block.timestamp;\r\n        duration = durationSeconds;\r\n    }\r\n\r\n    /**\r\n        Beneficiary call this function to gain their token\r\n    **/\r\n    function release(address token) public {\r\n        // call vestedAmount() to calculate the amount of token\r\n        uint256 releasable = vestedAmount(token, uint256(block.timestamp)) - erc20Released[token];\r\n        // update the amount of token\r\n        erc20Released[token] += releasable;\r\n        // transer to beneficiary\r\n        emit ERC20Released(token, releasable  );\r\n        IERC20(token).transfer(beneficiary, releasable );\r\n    }\r\n\r\n    /**\r\n        calculate the amount of token using the liner release algorithm\r\n    **/\r\n    function vestedAmount(address token, uint256 timestamp) public view returns(uint256){\r\n        // the amount of received token of this contract (nowAmount + alreadyReleased)\r\n        uint256 totalAllocation = IERC20(token).balanceOf(address(this)) + erc20Released[token];\r\n        // calculate the released amount of token using liner release algorithm\r\n        if(timestamp < start){\r\n            return 0;\r\n        }else if (timestamp > start + duration){\r\n            return totalAllocation;\r\n        } else {\r\n            // core algorithm\r\n            return (totalAllocation * (timestamp - start)) / duration;\r\n        }\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/linerRelease.sol": {
				"TokenVasting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiaryAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "durationSeconds",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Released",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "erc20Released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/linerRelease.sol\":748:2781  contract TokenVasting{... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/linerRelease.sol\":1220:1518  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/linerRelease.sol\":1351:1352  0 */\n  0x00\n    /* \"contracts/linerRelease.sol\":1328:1353  beneficiary != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/linerRelease.sol\":1328:1339  beneficiary */\n  mload(0x80)\n    /* \"contracts/linerRelease.sol\":1328:1353  beneficiary != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/linerRelease.sol\":1320:1396  require(beneficiary != address(0),\"VestingWallet: beneficiary is 0 address\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/linerRelease.sol\":1421:1439  beneficiaryAddress */\n  dup2\n    /* \"contracts/linerRelease.sol\":1407:1439  beneficiary = beneficiaryAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/linerRelease.sol\":1458:1473  block.timestamp */\n  timestamp\n    /* \"contracts/linerRelease.sol\":1450:1473  start = block.timestamp */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/linerRelease.sol\":1495:1510  durationSeconds */\n  dup1\n    /* \"contracts/linerRelease.sol\":1484:1510  duration = durationSeconds */\n  0xc0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/linerRelease.sol\":1220:1518  constructor(... */\n  pop\n  pop\n    /* \"contracts/linerRelease.sol\":748:2781  contract TokenVasting{... */\n  jump(tag_9)\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_13:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_14:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_15:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_16:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_17:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_18:\n    /* \"#utility.yul\":1001:1025   */\n  tag_37\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_17\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_38:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_19:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_40\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_18\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_43\n  tag_11\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1309:1428   */\ntag_42:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_44\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_16\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_45\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_19\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1887   */\ntag_20:\n    /* \"#utility.yul\":1802:1813   */\n  0x00\n    /* \"#utility.yul\":1836:1842   */\n  dup3\n    /* \"#utility.yul\":1831:1834   */\n  dup3\n    /* \"#utility.yul\":1824:1843   */\n  mstore\n    /* \"#utility.yul\":1876:1880   */\n  0x20\n    /* \"#utility.yul\":1871:1874   */\n  dup3\n    /* \"#utility.yul\":1867:1881   */\n  add\n    /* \"#utility.yul\":1852:1881   */\n  swap1\n  pop\n    /* \"#utility.yul\":1718:1887   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1893:2119   */\ntag_21:\n    /* \"#utility.yul\":2033:2067   */\n  0x56657374696e6757616c6c65743a2062656e6566696369617279206973203020\n    /* \"#utility.yul\":2029:2030   */\n  0x00\n    /* \"#utility.yul\":2021:2027   */\n  dup3\n    /* \"#utility.yul\":2017:2031   */\n  add\n    /* \"#utility.yul\":2010:2068   */\n  mstore\n    /* \"#utility.yul\":2102:2111   */\n  0x6164647265737300000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2097:2099   */\n  0x20\n    /* \"#utility.yul\":2089:2095   */\n  dup3\n    /* \"#utility.yul\":2085:2100   */\n  add\n    /* \"#utility.yul\":2078:2112   */\n  mstore\n    /* \"#utility.yul\":1893:2119   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2125:2491   */\ntag_22:\n    /* \"#utility.yul\":2267:2270   */\n  0x00\n    /* \"#utility.yul\":2288:2355   */\n  tag_49\n    /* \"#utility.yul\":2352:2354   */\n  0x27\n    /* \"#utility.yul\":2347:2350   */\n  dup4\n    /* \"#utility.yul\":2288:2355   */\n  tag_20\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":2281:2355   */\n  swap2\n  pop\n    /* \"#utility.yul\":2364:2457   */\n  tag_50\n    /* \"#utility.yul\":2453:2456   */\n  dup3\n    /* \"#utility.yul\":2364:2457   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2482:2484   */\n  0x40\n    /* \"#utility.yul\":2477:2480   */\n  dup3\n    /* \"#utility.yul\":2473:2485   */\n  add\n    /* \"#utility.yul\":2466:2485   */\n  swap1\n  pop\n    /* \"#utility.yul\":2125:2491   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2497:2916   */\ntag_8:\n    /* \"#utility.yul\":2663:2667   */\n  0x00\n    /* \"#utility.yul\":2701:2703   */\n  0x20\n    /* \"#utility.yul\":2690:2699   */\n  dup3\n    /* \"#utility.yul\":2686:2704   */\n  add\n    /* \"#utility.yul\":2678:2704   */\n  swap1\n  pop\n    /* \"#utility.yul\":2750:2759   */\n  dup2\n    /* \"#utility.yul\":2744:2748   */\n  dup2\n    /* \"#utility.yul\":2740:2760   */\n  sub\n    /* \"#utility.yul\":2736:2737   */\n  0x00\n    /* \"#utility.yul\":2725:2734   */\n  dup4\n    /* \"#utility.yul\":2721:2738   */\n  add\n    /* \"#utility.yul\":2714:2761   */\n  mstore\n    /* \"#utility.yul\":2778:2909   */\n  tag_52\n    /* \"#utility.yul\":2904:2908   */\n  dup2\n    /* \"#utility.yul\":2778:2909   */\n  tag_22\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2770:2909   */\n  swap1\n  pop\n    /* \"#utility.yul\":2497:2916   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/linerRelease.sol\":748:2781  contract TokenVasting{... */\ntag_9:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1ed0da71ba0dee17902b8fa286483d740a24413c3c7caa0c3f6d1af833725a06\")\n  0x00\n  assignImmutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n  0x00\n  assignImmutable(\"0xf945bcfaa2d256e0b31bacbd29e634fc5be38c54dfffe1d2846dd5a25365d7b9\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/linerRelease.sol\":748:2781  contract TokenVasting{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x17cf5391\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xbbc702c6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/linerRelease.sol\":1070:1103  uint256 public immutable duration */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/linerRelease.sol\":2143:2776  function vestedAmount(address token, uint256 timestamp) public view returns(uint256){... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/linerRelease.sol\":1604:2044  function release(address token) public {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/linerRelease.sol\":948:984  address public immutable beneficiary */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/linerRelease.sol\":857:905  mapping(address => uint256) public erc20Released */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/linerRelease.sol\":1014:1044  uint256 public immutable start */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/linerRelease.sol\":1070:1103  uint256 public immutable duration */\n    tag_10:\n      immutable(\"0x1ed0da71ba0dee17902b8fa286483d740a24413c3c7caa0c3f6d1af833725a06\")\n      dup2\n      jump\t// out\n        /* \"contracts/linerRelease.sol\":2143:2776  function vestedAmount(address token, uint256 timestamp) public view returns(uint256){... */\n    tag_16:\n        /* \"contracts/linerRelease.sol\":2219:2226  uint256 */\n      0x00\n        /* \"contracts/linerRelease.sol\":2326:2349  uint256 totalAllocation */\n      dup1\n        /* \"contracts/linerRelease.sol\":2393:2406  erc20Released */\n      0x00\n        /* \"contracts/linerRelease.sol\":2393:2413  erc20Released[token] */\n      dup1\n        /* \"contracts/linerRelease.sol\":2407:2412  token */\n      dup6\n        /* \"contracts/linerRelease.sol\":2393:2413  erc20Released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/linerRelease.sol\":2359:2364  token */\n      dup5\n        /* \"contracts/linerRelease.sol\":2352:2375  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/linerRelease.sol\":2384:2388  this */\n      address\n        /* \"contracts/linerRelease.sol\":2352:2390  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/linerRelease.sol\":2352:2413  IERC20(token).balanceOf(address(this)) + erc20Released[token] */\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"contracts/linerRelease.sol\":2326:2413  uint256 totalAllocation = IERC20(token).balanceOf(address(this)) + erc20Released[token] */\n      swap1\n      pop\n        /* \"contracts/linerRelease.sol\":2520:2525  start */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"contracts/linerRelease.sol\":2508:2517  timestamp */\n      dup4\n        /* \"contracts/linerRelease.sol\":2508:2525  timestamp < start */\n      lt\n        /* \"contracts/linerRelease.sol\":2505:2769  if(timestamp < start){... */\n      iszero\n      tag_41\n      jumpi\n        /* \"contracts/linerRelease.sol\":2548:2549  0 */\n      0x00\n        /* \"contracts/linerRelease.sol\":2541:2549  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_33)\n        /* \"contracts/linerRelease.sol\":2505:2769  if(timestamp < start){... */\n    tag_41:\n        /* \"contracts/linerRelease.sol\":2590:2598  duration */\n      immutable(\"0x1ed0da71ba0dee17902b8fa286483d740a24413c3c7caa0c3f6d1af833725a06\")\n        /* \"contracts/linerRelease.sol\":2582:2587  start */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"contracts/linerRelease.sol\":2582:2598  start + duration */\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n        /* \"contracts/linerRelease.sol\":2570:2579  timestamp */\n      dup4\n        /* \"contracts/linerRelease.sol\":2570:2598  timestamp > start + duration */\n      gt\n        /* \"contracts/linerRelease.sol\":2566:2769  if (timestamp > start + duration){... */\n      iszero\n      tag_44\n      jumpi\n        /* \"contracts/linerRelease.sol\":2621:2636  totalAllocation */\n      dup1\n        /* \"contracts/linerRelease.sol\":2614:2636  return totalAllocation */\n      swap2\n      pop\n      pop\n      jump(tag_33)\n        /* \"contracts/linerRelease.sol\":2566:2769  if (timestamp > start + duration){... */\n    tag_44:\n        /* \"contracts/linerRelease.sol\":2749:2757  duration */\n      immutable(\"0x1ed0da71ba0dee17902b8fa286483d740a24413c3c7caa0c3f6d1af833725a06\")\n        /* \"contracts/linerRelease.sol\":2739:2744  start */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"contracts/linerRelease.sol\":2727:2736  timestamp */\n      dup5\n        /* \"contracts/linerRelease.sol\":2727:2744  timestamp - start */\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"contracts/linerRelease.sol\":2708:2723  totalAllocation */\n      dup3\n        /* \"contracts/linerRelease.sol\":2708:2745  totalAllocation * (timestamp - start) */\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"contracts/linerRelease.sol\":2707:2757  (totalAllocation * (timestamp - start)) / duration */\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"contracts/linerRelease.sol\":2700:2757  return (totalAllocation * (timestamp - start)) / duration */\n      swap2\n      pop\n      pop\n        /* \"contracts/linerRelease.sol\":2143:2776  function vestedAmount(address token, uint256 timestamp) public view returns(uint256){... */\n    tag_33:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/linerRelease.sol\":1604:2044  function release(address token) public {... */\n    tag_21:\n        /* \"contracts/linerRelease.sol\":1719:1737  uint256 releasable */\n      0x00\n        /* \"contracts/linerRelease.sol\":1788:1801  erc20Released */\n      dup1\n        /* \"contracts/linerRelease.sol\":1788:1808  erc20Released[token] */\n      0x00\n        /* \"contracts/linerRelease.sol\":1802:1807  token */\n      dup4\n        /* \"contracts/linerRelease.sol\":1788:1808  erc20Released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/linerRelease.sol\":1740:1785  vestedAmount(token, uint256(block.timestamp)) */\n      tag_53\n        /* \"contracts/linerRelease.sol\":1753:1758  token */\n      dup4\n        /* \"contracts/linerRelease.sol\":1768:1783  block.timestamp */\n      timestamp\n        /* \"contracts/linerRelease.sol\":1740:1752  vestedAmount */\n      tag_16\n        /* \"contracts/linerRelease.sol\":1740:1785  vestedAmount(token, uint256(block.timestamp)) */\n      jump\t// in\n    tag_53:\n        /* \"contracts/linerRelease.sol\":1740:1808  vestedAmount(token, uint256(block.timestamp)) - erc20Released[token] */\n      tag_54\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_54:\n        /* \"contracts/linerRelease.sol\":1719:1808  uint256 releasable = vestedAmount(token, uint256(block.timestamp)) - erc20Released[token] */\n      swap1\n      pop\n        /* \"contracts/linerRelease.sol\":1882:1892  releasable */\n      dup1\n        /* \"contracts/linerRelease.sol\":1858:1871  erc20Released */\n      0x00\n        /* \"contracts/linerRelease.sol\":1858:1878  erc20Released[token] */\n      dup1\n        /* \"contracts/linerRelease.sol\":1872:1877  token */\n      dup5\n        /* \"contracts/linerRelease.sol\":1858:1878  erc20Released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/linerRelease.sol\":1858:1892  erc20Released[token] += releasable */\n      dup3\n      dup3\n      sload\n      tag_55\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_55:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/linerRelease.sol\":1957:1962  token */\n      dup2\n        /* \"contracts/linerRelease.sol\":1943:1977  ERC20Released(token, releasable  ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b\n        /* \"contracts/linerRelease.sol\":1964:1974  releasable */\n      dup3\n        /* \"contracts/linerRelease.sol\":1943:1977  ERC20Released(token, releasable  ) */\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/linerRelease.sol\":1995:2000  token */\n      dup2\n        /* \"contracts/linerRelease.sol\":1988:2010  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/linerRelease.sol\":2011:2022  beneficiary */\n      immutable(\"0xf945bcfaa2d256e0b31bacbd29e634fc5be38c54dfffe1d2846dd5a25365d7b9\")\n        /* \"contracts/linerRelease.sol\":2024:2034  releasable */\n      dup4\n        /* \"contracts/linerRelease.sol\":1988:2036  IERC20(token).transfer(beneficiary, releasable ) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      pop\n        /* \"contracts/linerRelease.sol\":1643:2044  {... */\n      pop\n        /* \"contracts/linerRelease.sol\":1604:2044  function release(address token) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/linerRelease.sol\":948:984  address public immutable beneficiary */\n    tag_23:\n      immutable(\"0xf945bcfaa2d256e0b31bacbd29e634fc5be38c54dfffe1d2846dd5a25365d7b9\")\n      dup2\n      jump\t// out\n        /* \"contracts/linerRelease.sol\":857:905  mapping(address => uint256) public erc20Released */\n    tag_28:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/linerRelease.sol\":1014:1044  uint256 public immutable start */\n    tag_31:\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_63:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_64:\n        /* \"#utility.yul\":177:201   */\n      tag_84\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_63\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_12:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_86\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_64\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_66:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_68:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_69:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_92\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_68\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_70:\n        /* \"#utility.yul\":1076:1100   */\n      tag_94\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_69\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_95:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_71:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_97\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_70\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_72:\n        /* \"#utility.yul\":1349:1373   */\n      tag_99\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_63\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_100:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_73:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_102\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_72\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2023   */\n    tag_15:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1625:1631   */\n      dup1\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1660   */\n      dup6\n        /* \"#utility.yul\":1649:1672   */\n      sub\n        /* \"#utility.yul\":1645:1677   */\n      slt\n        /* \"#utility.yul\":1642:1761   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":1680:1759   */\n      tag_105\n      tag_66\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1642:1761   */\n    tag_104:\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1825:1878   */\n      tag_106\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_71\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1953:2006   */\n      tag_107\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_73\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1549:2023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_20:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_110\n      tag_66\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2105:2224   */\n    tag_109:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_111\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_71\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2482   */\n    tag_74:\n        /* \"#utility.yul\":2451:2475   */\n      tag_113\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2451:2475   */\n      tag_69\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2446:2449   */\n      dup3\n        /* \"#utility.yul\":2439:2476   */\n      mstore\n        /* \"#utility.yul\":2364:2482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2488:2710   */\n    tag_25:\n        /* \"#utility.yul\":2581:2585   */\n      0x00\n        /* \"#utility.yul\":2619:2621   */\n      0x20\n        /* \"#utility.yul\":2608:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2622   */\n      add\n        /* \"#utility.yul\":2596:2622   */\n      swap1\n      pop\n        /* \"#utility.yul\":2632:2703   */\n      tag_115\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2689:2698   */\n      dup4\n        /* \"#utility.yul\":2685:2702   */\n      add\n        /* \"#utility.yul\":2676:2682   */\n      dup5\n        /* \"#utility.yul\":2632:2703   */\n      tag_74\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2488:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:2859   */\n    tag_75:\n        /* \"#utility.yul\":2773:2778   */\n      0x00\n        /* \"#utility.yul\":2804:2810   */\n      dup2\n        /* \"#utility.yul\":2798:2811   */\n      mload\n        /* \"#utility.yul\":2789:2811   */\n      swap1\n      pop\n        /* \"#utility.yul\":2820:2853   */\n      tag_117\n        /* \"#utility.yul\":2847:2852   */\n      dup2\n        /* \"#utility.yul\":2820:2853   */\n      tag_72\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2716:2859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2865:3216   */\n    tag_38:\n        /* \"#utility.yul\":2935:2941   */\n      0x00\n        /* \"#utility.yul\":2984:2986   */\n      0x20\n        /* \"#utility.yul\":2972:2981   */\n      dup3\n        /* \"#utility.yul\":2963:2970   */\n      dup5\n        /* \"#utility.yul\":2959:2982   */\n      sub\n        /* \"#utility.yul\":2955:2987   */\n      slt\n        /* \"#utility.yul\":2952:3071   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":2990:3069   */\n      tag_120\n      tag_66\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2952:3071   */\n    tag_119:\n        /* \"#utility.yul\":3110:3111   */\n      0x00\n        /* \"#utility.yul\":3135:3199   */\n      tag_121\n        /* \"#utility.yul\":3191:3198   */\n      dup5\n        /* \"#utility.yul\":3182:3188   */\n      dup3\n        /* \"#utility.yul\":3171:3180   */\n      dup6\n        /* \"#utility.yul\":3167:3189   */\n      add\n        /* \"#utility.yul\":3135:3199   */\n      tag_75\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3125:3199   */\n      swap2\n      pop\n        /* \"#utility.yul\":3081:3209   */\n      pop\n        /* \"#utility.yul\":2865:3216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3402   */\n    tag_76:\n        /* \"#utility.yul\":3270:3347   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3267:3268   */\n      0x00\n        /* \"#utility.yul\":3260:3348   */\n      mstore\n        /* \"#utility.yul\":3367:3371   */\n      0x11\n        /* \"#utility.yul\":3364:3365   */\n      0x04\n        /* \"#utility.yul\":3357:3372   */\n      mstore\n        /* \"#utility.yul\":3391:3395   */\n      0x24\n        /* \"#utility.yul\":3388:3389   */\n      0x00\n        /* \"#utility.yul\":3381:3396   */\n      revert\n        /* \"#utility.yul\":3408:3599   */\n    tag_40:\n        /* \"#utility.yul\":3448:3451   */\n      0x00\n        /* \"#utility.yul\":3467:3487   */\n      tag_124\n        /* \"#utility.yul\":3485:3486   */\n      dup3\n        /* \"#utility.yul\":3467:3487   */\n      tag_63\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3462:3487   */\n      swap2\n      pop\n        /* \"#utility.yul\":3501:3521   */\n      tag_125\n        /* \"#utility.yul\":3519:3520   */\n      dup4\n        /* \"#utility.yul\":3501:3521   */\n      tag_63\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3496:3521   */\n      swap3\n      pop\n        /* \"#utility.yul\":3544:3545   */\n      dup3\n        /* \"#utility.yul\":3541:3542   */\n      dup3\n        /* \"#utility.yul\":3537:3546   */\n      add\n        /* \"#utility.yul\":3530:3546   */\n      swap1\n      pop\n        /* \"#utility.yul\":3565:3568   */\n      dup1\n        /* \"#utility.yul\":3562:3563   */\n      dup3\n        /* \"#utility.yul\":3559:3569   */\n      gt\n        /* \"#utility.yul\":3556:3592   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":3572:3590   */\n      tag_127\n      tag_76\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3556:3592   */\n    tag_126:\n        /* \"#utility.yul\":3408:3599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3605:3799   */\n    tag_47:\n        /* \"#utility.yul\":3645:3649   */\n      0x00\n        /* \"#utility.yul\":3665:3685   */\n      tag_129\n        /* \"#utility.yul\":3683:3684   */\n      dup3\n        /* \"#utility.yul\":3665:3685   */\n      tag_63\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3660:3685   */\n      swap2\n      pop\n        /* \"#utility.yul\":3699:3719   */\n      tag_130\n        /* \"#utility.yul\":3717:3718   */\n      dup4\n        /* \"#utility.yul\":3699:3719   */\n      tag_63\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3694:3719   */\n      swap3\n      pop\n        /* \"#utility.yul\":3743:3744   */\n      dup3\n        /* \"#utility.yul\":3740:3741   */\n      dup3\n        /* \"#utility.yul\":3736:3745   */\n      sub\n        /* \"#utility.yul\":3728:3745   */\n      swap1\n      pop\n        /* \"#utility.yul\":3767:3768   */\n      dup2\n        /* \"#utility.yul\":3761:3765   */\n      dup2\n        /* \"#utility.yul\":3758:3769   */\n      gt\n        /* \"#utility.yul\":3755:3792   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":3772:3790   */\n      tag_132\n      tag_76\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3755:3792   */\n    tag_131:\n        /* \"#utility.yul\":3605:3799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3805:4215   */\n    tag_49:\n        /* \"#utility.yul\":3845:3852   */\n      0x00\n        /* \"#utility.yul\":3868:3888   */\n      tag_134\n        /* \"#utility.yul\":3886:3887   */\n      dup3\n        /* \"#utility.yul\":3868:3888   */\n      tag_63\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3863:3888   */\n      swap2\n      pop\n        /* \"#utility.yul\":3902:3922   */\n      tag_135\n        /* \"#utility.yul\":3920:3921   */\n      dup4\n        /* \"#utility.yul\":3902:3922   */\n      tag_63\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3897:3922   */\n      swap3\n      pop\n        /* \"#utility.yul\":3957:3958   */\n      dup3\n        /* \"#utility.yul\":3954:3955   */\n      dup3\n        /* \"#utility.yul\":3950:3959   */\n      mul\n        /* \"#utility.yul\":3979:4009   */\n      tag_136\n        /* \"#utility.yul\":3997:4008   */\n      dup2\n        /* \"#utility.yul\":3979:4009   */\n      tag_63\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3968:4009   */\n      swap2\n      pop\n        /* \"#utility.yul\":4158:4159   */\n      dup3\n        /* \"#utility.yul\":4149:4156   */\n      dup3\n        /* \"#utility.yul\":4145:4160   */\n      div\n        /* \"#utility.yul\":4142:4143   */\n      dup5\n        /* \"#utility.yul\":4139:4161   */\n      eq\n        /* \"#utility.yul\":4119:4120   */\n      dup4\n        /* \"#utility.yul\":4112:4121   */\n      iszero\n        /* \"#utility.yul\":4092:4175   */\n      or\n        /* \"#utility.yul\":4069:4208   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":4188:4206   */\n      tag_138\n      tag_76\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4069:4208   */\n    tag_137:\n        /* \"#utility.yul\":3853:4215   */\n      pop\n        /* \"#utility.yul\":3805:4215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4221:4401   */\n    tag_77:\n        /* \"#utility.yul\":4269:4346   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4266:4267   */\n      0x00\n        /* \"#utility.yul\":4259:4347   */\n      mstore\n        /* \"#utility.yul\":4366:4370   */\n      0x12\n        /* \"#utility.yul\":4363:4364   */\n      0x04\n        /* \"#utility.yul\":4356:4371   */\n      mstore\n        /* \"#utility.yul\":4390:4394   */\n      0x24\n        /* \"#utility.yul\":4387:4388   */\n      0x00\n        /* \"#utility.yul\":4380:4395   */\n      revert\n        /* \"#utility.yul\":4407:4592   */\n    tag_51:\n        /* \"#utility.yul\":4447:4448   */\n      0x00\n        /* \"#utility.yul\":4464:4484   */\n      tag_141\n        /* \"#utility.yul\":4482:4483   */\n      dup3\n        /* \"#utility.yul\":4464:4484   */\n      tag_63\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4459:4484   */\n      swap2\n      pop\n        /* \"#utility.yul\":4498:4518   */\n      tag_142\n        /* \"#utility.yul\":4516:4517   */\n      dup4\n        /* \"#utility.yul\":4498:4518   */\n      tag_63\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4493:4518   */\n      swap3\n      pop\n        /* \"#utility.yul\":4537:4538   */\n      dup3\n        /* \"#utility.yul\":4527:4562   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":4542:4560   */\n      tag_144\n      tag_77\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4527:4562   */\n    tag_143:\n        /* \"#utility.yul\":4584:4585   */\n      dup3\n        /* \"#utility.yul\":4581:4582   */\n      dup3\n        /* \"#utility.yul\":4577:4586   */\n      div\n        /* \"#utility.yul\":4572:4586   */\n      swap1\n      pop\n        /* \"#utility.yul\":4407:4592   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4598:4930   */\n    tag_58:\n        /* \"#utility.yul\":4719:4723   */\n      0x00\n        /* \"#utility.yul\":4757:4759   */\n      0x40\n        /* \"#utility.yul\":4746:4755   */\n      dup3\n        /* \"#utility.yul\":4742:4760   */\n      add\n        /* \"#utility.yul\":4734:4760   */\n      swap1\n      pop\n        /* \"#utility.yul\":4770:4841   */\n      tag_146\n        /* \"#utility.yul\":4838:4839   */\n      0x00\n        /* \"#utility.yul\":4827:4836   */\n      dup4\n        /* \"#utility.yul\":4823:4840   */\n      add\n        /* \"#utility.yul\":4814:4820   */\n      dup6\n        /* \"#utility.yul\":4770:4841   */\n      tag_74\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4851:4923   */\n      tag_147\n        /* \"#utility.yul\":4919:4921   */\n      0x20\n        /* \"#utility.yul\":4908:4917   */\n      dup4\n        /* \"#utility.yul\":4904:4922   */\n      add\n        /* \"#utility.yul\":4895:4901   */\n      dup5\n        /* \"#utility.yul\":4851:4923   */\n      tag_64\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4598:4930   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5026   */\n    tag_78:\n        /* \"#utility.yul\":4970:4977   */\n      0x00\n        /* \"#utility.yul\":5013:5018   */\n      dup2\n        /* \"#utility.yul\":5006:5019   */\n      iszero\n        /* \"#utility.yul\":4999:5020   */\n      iszero\n        /* \"#utility.yul\":4988:5020   */\n      swap1\n      pop\n        /* \"#utility.yul\":4936:5026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5032:5148   */\n    tag_79:\n        /* \"#utility.yul\":5102:5123   */\n      tag_150\n        /* \"#utility.yul\":5117:5122   */\n      dup2\n        /* \"#utility.yul\":5102:5123   */\n      tag_78\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5095:5100   */\n      dup2\n        /* \"#utility.yul\":5092:5124   */\n      eq\n        /* \"#utility.yul\":5082:5142   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":5138:5139   */\n      0x00\n        /* \"#utility.yul\":5135:5136   */\n      dup1\n        /* \"#utility.yul\":5128:5140   */\n      revert\n        /* \"#utility.yul\":5082:5142   */\n    tag_151:\n        /* \"#utility.yul\":5032:5148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5154:5291   */\n    tag_80:\n        /* \"#utility.yul\":5208:5213   */\n      0x00\n        /* \"#utility.yul\":5239:5245   */\n      dup2\n        /* \"#utility.yul\":5233:5246   */\n      mload\n        /* \"#utility.yul\":5224:5246   */\n      swap1\n      pop\n        /* \"#utility.yul\":5255:5285   */\n      tag_153\n        /* \"#utility.yul\":5279:5284   */\n      dup2\n        /* \"#utility.yul\":5255:5285   */\n      tag_79\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5154:5291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5297:5642   */\n    tag_62:\n        /* \"#utility.yul\":5364:5370   */\n      0x00\n        /* \"#utility.yul\":5413:5415   */\n      0x20\n        /* \"#utility.yul\":5401:5410   */\n      dup3\n        /* \"#utility.yul\":5392:5399   */\n      dup5\n        /* \"#utility.yul\":5388:5411   */\n      sub\n        /* \"#utility.yul\":5384:5416   */\n      slt\n        /* \"#utility.yul\":5381:5500   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":5419:5498   */\n      tag_156\n      tag_66\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5381:5500   */\n    tag_155:\n        /* \"#utility.yul\":5539:5540   */\n      0x00\n        /* \"#utility.yul\":5564:5625   */\n      tag_157\n        /* \"#utility.yul\":5617:5624   */\n      dup5\n        /* \"#utility.yul\":5608:5614   */\n      dup3\n        /* \"#utility.yul\":5597:5606   */\n      dup6\n        /* \"#utility.yul\":5593:5615   */\n      add\n        /* \"#utility.yul\":5564:5625   */\n      tag_80\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5554:5625   */\n      swap2\n      pop\n        /* \"#utility.yul\":5510:5635   */\n      pop\n        /* \"#utility.yul\":5297:5642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122083fab34f93571866279cdb29734d933e1af2a157b855af6071f74850c938dc6064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_837": {
									"entryPoint": null,
									"id": 837,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2919:6",
										"nodeType": "YulBlock",
										"src": "0:2919:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "890:32:6",
													"nodeType": "YulBlock",
													"src": "890:32:6",
													"statements": [
														{
															"nativeSrc": "900:16:6",
															"nodeType": "YulAssignment",
															"src": "900:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:6",
																"nodeType": "YulIdentifier",
																"src": "911:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:6",
														"nodeType": "YulTypedName",
														"src": "872:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:6",
														"nodeType": "YulTypedName",
														"src": "882:7:6",
														"type": ""
													}
												],
												"src": "845:77:6"
											},
											{
												"body": {
													"nativeSrc": "971:79:6",
													"nodeType": "YulBlock",
													"src": "971:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:6",
																"nodeType": "YulBlock",
																"src": "1028:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:6"
																			},
																			"nativeSrc": "1030:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:6"
																		},
																		"nativeSrc": "1030:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:6"
																				},
																				"nativeSrc": "1001:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:6"
																		},
																		"nativeSrc": "991:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:6"
																},
																"nativeSrc": "984:43:6",
																"nodeType": "YulFunctionCall",
																"src": "984:43:6"
															},
															"nativeSrc": "981:63:6",
															"nodeType": "YulIf",
															"src": "981:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:6",
														"nodeType": "YulTypedName",
														"src": "964:5:6",
														"type": ""
													}
												],
												"src": "928:122:6"
											},
											{
												"body": {
													"nativeSrc": "1119:80:6",
													"nodeType": "YulBlock",
													"src": "1119:80:6",
													"statements": [
														{
															"nativeSrc": "1129:22:6",
															"nodeType": "YulAssignment",
															"src": "1129:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:6"
																},
																"nativeSrc": "1138:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:6"
																},
																"nativeSrc": "1160:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:6"
															},
															"nativeSrc": "1160:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:6",
														"nodeType": "YulTypedName",
														"src": "1097:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:6",
														"nodeType": "YulTypedName",
														"src": "1105:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:6",
														"nodeType": "YulTypedName",
														"src": "1113:5:6",
														"type": ""
													}
												],
												"src": "1056:143:6"
											},
											{
												"body": {
													"nativeSrc": "1299:413:6",
													"nodeType": "YulBlock",
													"src": "1299:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:6",
																"nodeType": "YulBlock",
																"src": "1345:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:6"
																			},
																			"nativeSrc": "1347:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:6"
																		},
																		"nativeSrc": "1347:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:6"
																		},
																		"nativeSrc": "1316:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:6"
																},
																"nativeSrc": "1312:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:6"
															},
															"nativeSrc": "1309:119:6",
															"nodeType": "YulIf",
															"src": "1309:119:6"
														},
														{
															"nativeSrc": "1438:128:6",
															"nodeType": "YulBlock",
															"src": "1438:128:6",
															"statements": [
																{
																	"nativeSrc": "1453:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:6"
																				},
																				"nativeSrc": "1524:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1492:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:6"
																		},
																		"nativeSrc": "1492:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:6",
															"nodeType": "YulBlock",
															"src": "1576:129:6",
															"statements": [
																{
																	"nativeSrc": "1591:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:6"
																				},
																				"nativeSrc": "1663:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1631:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:6"
																		},
																		"nativeSrc": "1631:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:6",
														"nodeType": "YulTypedName",
														"src": "1261:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:6",
														"nodeType": "YulTypedName",
														"src": "1272:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:6",
														"nodeType": "YulTypedName",
														"src": "1284:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:6",
														"nodeType": "YulTypedName",
														"src": "1292:6:6",
														"type": ""
													}
												],
												"src": "1205:507:6"
											},
											{
												"body": {
													"nativeSrc": "1814:73:6",
													"nodeType": "YulBlock",
													"src": "1814:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1831:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1831:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1836:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1836:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1824:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:6"
																},
																"nativeSrc": "1824:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1824:19:6"
															},
															"nativeSrc": "1824:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1824:19:6"
														},
														{
															"nativeSrc": "1852:29:6",
															"nodeType": "YulAssignment",
															"src": "1852:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1871:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1871:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1876:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1876:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1867:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:6"
																},
																"nativeSrc": "1867:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1867:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1852:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "1852:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1718:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1786:3:6",
														"nodeType": "YulTypedName",
														"src": "1786:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1791:6:6",
														"nodeType": "YulTypedName",
														"src": "1791:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1802:11:6",
														"nodeType": "YulTypedName",
														"src": "1802:11:6",
														"type": ""
													}
												],
												"src": "1718:169:6"
											},
											{
												"body": {
													"nativeSrc": "1999:120:6",
													"nodeType": "YulBlock",
													"src": "1999:120:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2021:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2021:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2029:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2029:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2017:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2017:3:6"
																		},
																		"nativeSrc": "2017:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2017:14:6"
																	},
																	{
																		"hexValue": "56657374696e6757616c6c65743a2062656e6566696369617279206973203020",
																		"kind": "string",
																		"nativeSrc": "2033:34:6",
																		"nodeType": "YulLiteral",
																		"src": "2033:34:6",
																		"type": "",
																		"value": "VestingWallet: beneficiary is 0 "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2010:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2010:6:6"
																},
																"nativeSrc": "2010:58:6",
																"nodeType": "YulFunctionCall",
																"src": "2010:58:6"
															},
															"nativeSrc": "2010:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "2010:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2089:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2089:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2097:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2097:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2085:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2085:3:6"
																		},
																		"nativeSrc": "2085:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2085:15:6"
																	},
																	{
																		"hexValue": "61646472657373",
																		"kind": "string",
																		"nativeSrc": "2102:9:6",
																		"nodeType": "YulLiteral",
																		"src": "2102:9:6",
																		"type": "",
																		"value": "address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2078:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2078:6:6"
																},
																"nativeSrc": "2078:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2078:34:6"
															},
															"nativeSrc": "2078:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2078:34:6"
														}
													]
												},
												"name": "store_literal_in_memory_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c",
												"nativeSrc": "1893:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1991:6:6",
														"nodeType": "YulTypedName",
														"src": "1991:6:6",
														"type": ""
													}
												],
												"src": "1893:226:6"
											},
											{
												"body": {
													"nativeSrc": "2271:220:6",
													"nodeType": "YulBlock",
													"src": "2271:220:6",
													"statements": [
														{
															"nativeSrc": "2281:74:6",
															"nodeType": "YulAssignment",
															"src": "2281:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2347:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2347:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2352:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2352:2:6",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2288:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2288:58:6"
																},
																"nativeSrc": "2288:67:6",
																"nodeType": "YulFunctionCall",
																"src": "2288:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2281:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2281:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2453:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2453:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c",
																	"nativeSrc": "2364:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "2364:88:6"
																},
																"nativeSrc": "2364:93:6",
																"nodeType": "YulFunctionCall",
																"src": "2364:93:6"
															},
															"nativeSrc": "2364:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "2364:93:6"
														},
														{
															"nativeSrc": "2466:19:6",
															"nodeType": "YulAssignment",
															"src": "2466:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2477:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2477:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2482:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2482:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2473:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:6"
																},
																"nativeSrc": "2473:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2473:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2466:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2125:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2259:3:6",
														"nodeType": "YulTypedName",
														"src": "2259:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2267:3:6",
														"nodeType": "YulTypedName",
														"src": "2267:3:6",
														"type": ""
													}
												],
												"src": "2125:366:6"
											},
											{
												"body": {
													"nativeSrc": "2668:248:6",
													"nodeType": "YulBlock",
													"src": "2668:248:6",
													"statements": [
														{
															"nativeSrc": "2678:26:6",
															"nodeType": "YulAssignment",
															"src": "2678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2690:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2690:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2701:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2686:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:6"
																},
																"nativeSrc": "2686:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2678:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2725:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2725:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2736:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2736:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2721:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2721:3:6"
																		},
																		"nativeSrc": "2721:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2721:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2744:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2744:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2750:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2750:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2740:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2740:3:6"
																		},
																		"nativeSrc": "2740:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2740:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2714:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2714:6:6"
																},
																"nativeSrc": "2714:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2714:47:6"
															},
															"nativeSrc": "2714:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2714:47:6"
														},
														{
															"nativeSrc": "2770:139:6",
															"nodeType": "YulAssignment",
															"src": "2770:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2904:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2904:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2778:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "2778:124:6"
																},
																"nativeSrc": "2778:131:6",
																"nodeType": "YulFunctionCall",
																"src": "2778:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2770:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2770:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2497:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2648:9:6",
														"nodeType": "YulTypedName",
														"src": "2648:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2663:4:6",
														"nodeType": "YulTypedName",
														"src": "2663:4:6",
														"type": ""
													}
												],
												"src": "2497:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c(memPtr) {\n\n        mstore(add(memPtr, 0), \"VestingWallet: beneficiary is 0 \")\n\n        mstore(add(memPtr, 32), \"address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e060405234801561000f575f80fd5b50604051610b2e380380610b2e8339818101604052810190610031919061017d565b5f73ffffffffffffffffffffffffffffffffffffffff1660805173ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100989061023b565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250504260a081815250508060c081815250505050610259565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610119826100f0565b9050919050565b6101298161010f565b8114610133575f80fd5b50565b5f8151905061014481610120565b92915050565b5f819050919050565b61015c8161014a565b8114610166575f80fd5b50565b5f8151905061017781610153565b92915050565b5f8060408385031215610193576101926100ec565b5b5f6101a085828601610136565b92505060206101b185828601610169565b9150509250929050565b5f82825260208201905092915050565b7f56657374696e6757616c6c65743a2062656e65666963696172792069732030205f8201527f6164647265737300000000000000000000000000000000000000000000000000602082015250565b5f6102256027836101bb565b9150610230826101cb565b604082019050919050565b5f6020820190508181035f83015261025281610219565b9050919050565b60805160a05160c0516108816102ad5f395f818161013c0152818161025401526102b001525f818161022301528181610275015281816102d101526104e801525f818161042c01526104b001526108815ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80630fb5a6b41461006457806317cf53911461008257806319165587146100b257806338af3eed146100ce578063bbc702c6146100ec578063be9a65551461011c575b5f80fd5b61006c61013a565b6040516100799190610522565b60405180910390f35b61009c600480360381019061009791906105c3565b61015e565b6040516100a99190610522565b60405180910390f35b6100cc60048036038101906100c79190610601565b61031a565b005b6100d66104ae565b6040516100e3919061063b565b60405180910390f35b61010660048036038101906101019190610601565b6104d2565b6040516101139190610522565b60405180910390f35b6101246104e6565b6040516101319190610522565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101d6919061063b565b602060405180830381865afa1580156101f1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102159190610668565b61021f91906106c0565b90507f0000000000000000000000000000000000000000000000000000000000000000831015610252575f915050610314565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061029e91906106c0565b8311156102ae5780915050610314565b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846102fb91906106f3565b826103069190610726565b6103109190610794565b9150505b92915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610362834261015e565b61036c91906106f3565b9050805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103b991906106c0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516104069190610522565b60405180910390a28173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b81526004016104699291906107c4565b6020604051808303815f875af1158015610485573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a99190610820565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f819050919050565b61051c8161050a565b82525050565b5f6020820190506105355f830184610513565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105688261053f565b9050919050565b6105788161055e565b8114610582575f80fd5b50565b5f813590506105938161056f565b92915050565b6105a28161050a565b81146105ac575f80fd5b50565b5f813590506105bd81610599565b92915050565b5f80604083850312156105d9576105d861053b565b5b5f6105e685828601610585565b92505060206105f7858286016105af565b9150509250929050565b5f602082840312156106165761061561053b565b5b5f61062384828501610585565b91505092915050565b6106358161055e565b82525050565b5f60208201905061064e5f83018461062c565b92915050565b5f8151905061066281610599565b92915050565b5f6020828403121561067d5761067c61053b565b5b5f61068a84828501610654565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106ca8261050a565b91506106d58361050a565b92508282019050808211156106ed576106ec610693565b5b92915050565b5f6106fd8261050a565b91506107088361050a565b92508282039050818111156107205761071f610693565b5b92915050565b5f6107308261050a565b915061073b8361050a565b92508282026107498161050a565b915082820484148315176107605761075f610693565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61079e8261050a565b91506107a98361050a565b9250826107b9576107b8610767565b5b828204905092915050565b5f6040820190506107d75f83018561062c565b6107e46020830184610513565b9392505050565b5f8115159050919050565b6107ff816107eb565b8114610809575f80fd5b50565b5f8151905061081a816107f6565b92915050565b5f602082840312156108355761083461053b565b5b5f6108428482850161080c565b9150509291505056fea264697066735822122083fab34f93571866279cdb29734d933e1af2a157b855af6071f74850c938dc6064736f6c634300081a0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB2E CODESIZE SUB DUP1 PUSH2 0xB2E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x17D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP1 PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP TIMESTAMP PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP POP POP PUSH2 0x259 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x119 DUP3 PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129 DUP2 PUSH2 0x10F JUMP JUMPDEST DUP2 EQ PUSH2 0x133 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x144 DUP2 PUSH2 0x120 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C DUP2 PUSH2 0x14A JUMP JUMPDEST DUP2 EQ PUSH2 0x166 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x177 DUP2 PUSH2 0x153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x193 JUMPI PUSH2 0x192 PUSH2 0xEC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A0 DUP6 DUP3 DUP7 ADD PUSH2 0x136 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B1 DUP6 DUP3 DUP7 ADD PUSH2 0x169 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56657374696E6757616C6C65743A2062656E6566696369617279206973203020 PUSH0 DUP3 ADD MSTORE PUSH32 0x6164647265737300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x225 PUSH1 0x27 DUP4 PUSH2 0x1BB JUMP JUMPDEST SWAP2 POP PUSH2 0x230 DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x252 DUP2 PUSH2 0x219 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x881 PUSH2 0x2AD PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x13C ADD MSTORE DUP2 DUP2 PUSH2 0x254 ADD MSTORE PUSH2 0x2B0 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x223 ADD MSTORE DUP2 DUP2 PUSH2 0x275 ADD MSTORE DUP2 DUP2 PUSH2 0x2D1 ADD MSTORE PUSH2 0x4E8 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x42C ADD MSTORE PUSH2 0x4B0 ADD MSTORE PUSH2 0x881 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x17CF5391 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xBBC702C6 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP4 LT ISZERO PUSH2 0x252 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x314 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x2AE JUMPI DUP1 SWAP2 POP POP PUSH2 0x314 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST DUP3 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x794 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x362 DUP4 TIMESTAMP PUSH2 0x15E JUMP JUMPDEST PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x469 SWAP3 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x485 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x51C DUP2 PUSH2 0x50A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x535 PUSH0 DUP4 ADD DUP5 PUSH2 0x513 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x568 DUP3 PUSH2 0x53F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x578 DUP2 PUSH2 0x55E JUMP JUMPDEST DUP2 EQ PUSH2 0x582 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x593 DUP2 PUSH2 0x56F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A2 DUP2 PUSH2 0x50A JUMP JUMPDEST DUP2 EQ PUSH2 0x5AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5BD DUP2 PUSH2 0x599 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x5D8 PUSH2 0x53B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5E6 DUP6 DUP3 DUP7 ADD PUSH2 0x585 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5F7 DUP6 DUP3 DUP7 ADD PUSH2 0x5AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH2 0x615 PUSH2 0x53B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x623 DUP5 DUP3 DUP6 ADD PUSH2 0x585 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x635 DUP2 PUSH2 0x55E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x64E PUSH0 DUP4 ADD DUP5 PUSH2 0x62C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x662 DUP2 PUSH2 0x599 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67D JUMPI PUSH2 0x67C PUSH2 0x53B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x68A DUP5 DUP3 DUP6 ADD PUSH2 0x654 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6CA DUP3 PUSH2 0x50A JUMP JUMPDEST SWAP2 POP PUSH2 0x6D5 DUP4 PUSH2 0x50A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6ED JUMPI PUSH2 0x6EC PUSH2 0x693 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6FD DUP3 PUSH2 0x50A JUMP JUMPDEST SWAP2 POP PUSH2 0x708 DUP4 PUSH2 0x50A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x720 JUMPI PUSH2 0x71F PUSH2 0x693 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x730 DUP3 PUSH2 0x50A JUMP JUMPDEST SWAP2 POP PUSH2 0x73B DUP4 PUSH2 0x50A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x749 DUP2 PUSH2 0x50A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x693 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x79E DUP3 PUSH2 0x50A JUMP JUMPDEST SWAP2 POP PUSH2 0x7A9 DUP4 PUSH2 0x50A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x7B9 JUMPI PUSH2 0x7B8 PUSH2 0x767 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7D7 PUSH0 DUP4 ADD DUP6 PUSH2 0x62C JUMP JUMPDEST PUSH2 0x7E4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x513 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FF DUP2 PUSH2 0x7EB JUMP JUMPDEST DUP2 EQ PUSH2 0x809 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x81A DUP2 PUSH2 0x7F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x835 JUMPI PUSH2 0x834 PUSH2 0x53B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x842 DUP5 DUP3 DUP6 ADD PUSH2 0x80C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 STATICCALL 0xB3 0x4F SWAP4 JUMPI XOR PUSH7 0x279CDB29734D93 RETURNDATACOPY BYTE CALLCODE LOG1 JUMPI 0xB8 SSTORE 0xAF PUSH1 0x71 0xF7 BASEFEE POP 0xC9 CODESIZE 0xDC PUSH1 0x64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "748:2033:5:-:0;;;1220:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1351:1;1328:25;;:11;;:25;;;1320:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;1421:18;1407:32;;;;;;;;;;1458:15;1450:23;;;;;;1495:15;1484:26;;;;;;1220:298;;748:2033;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:169::-;1802:11;1836:6;1831:3;1824:19;1876:4;1871:3;1867:14;1852:29;;1718:169;;;;:::o;1893:226::-;2033:34;2029:1;2021:6;2017:14;2010:58;2102:9;2097:2;2089:6;2085:15;2078:34;1893:226;:::o;2125:366::-;2267:3;2288:67;2352:2;2347:3;2288:67;:::i;:::-;2281:74;;2364:93;2453:3;2364:93;:::i;:::-;2482:2;2477:3;2473:12;2466:19;;2125:366;;;:::o;2497:419::-;2663:4;2701:2;2690:9;2686:18;2678:26;;2750:9;2744:4;2740:20;2736:1;2725:9;2721:17;2714:47;2778:131;2904:4;2778:131;:::i;:::-;2770:139;;2497:419;;;:::o;748:2033:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@beneficiary_801": {
									"entryPoint": 1198,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@duration_805": {
									"entryPoint": 314,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20Released_799": {
									"entryPoint": 1234,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@release_878": {
									"entryPoint": 794,
									"id": 878,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@start_803": {
									"entryPoint": 1254,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestedAmount_932": {
									"entryPoint": 350,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5645:6",
										"nodeType": "YulBlock",
										"src": "0:5645:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:6",
													"nodeType": "YulBlock",
													"src": "52:32:6",
													"statements": [
														{
															"nativeSrc": "62:16:6",
															"nodeType": "YulAssignment",
															"src": "62:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:6",
																"nodeType": "YulIdentifier",
																"src": "73:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:77:6"
											},
											{
												"body": {
													"nativeSrc": "155:53:6",
													"nodeType": "YulBlock",
													"src": "155:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:6"
																		},
																		"nativeSrc": "177:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:6"
																},
																"nativeSrc": "165:37:6",
																"nodeType": "YulFunctionCall",
																"src": "165:37:6"
															},
															"nativeSrc": "165:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:6",
														"nodeType": "YulTypedName",
														"src": "143:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:6",
														"nodeType": "YulTypedName",
														"src": "150:3:6",
														"type": ""
													}
												],
												"src": "90:118:6"
											},
											{
												"body": {
													"nativeSrc": "312:124:6",
													"nodeType": "YulBlock",
													"src": "312:124:6",
													"statements": [
														{
															"nativeSrc": "322:26:6",
															"nodeType": "YulAssignment",
															"src": "322:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:6",
																		"nodeType": "YulLiteral",
																		"src": "345:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:6"
																},
																"nativeSrc": "330:18:6",
																"nodeType": "YulFunctionCall",
																"src": "330:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:6",
																				"nodeType": "YulLiteral",
																				"src": "426:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:6"
																		},
																		"nativeSrc": "411:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:6"
																},
																"nativeSrc": "358:71:6",
																"nodeType": "YulFunctionCall",
																"src": "358:71:6"
															},
															"nativeSrc": "358:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:6",
														"nodeType": "YulTypedName",
														"src": "284:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:6",
														"nodeType": "YulTypedName",
														"src": "296:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:6",
														"nodeType": "YulTypedName",
														"src": "307:4:6",
														"type": ""
													}
												],
												"src": "214:222:6"
											},
											{
												"body": {
													"nativeSrc": "482:35:6",
													"nodeType": "YulBlock",
													"src": "482:35:6",
													"statements": [
														{
															"nativeSrc": "492:19:6",
															"nodeType": "YulAssignment",
															"src": "492:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:6",
																		"nodeType": "YulLiteral",
																		"src": "508:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:6"
																},
																"nativeSrc": "502:9:6",
																"nodeType": "YulFunctionCall",
																"src": "502:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:6",
														"nodeType": "YulTypedName",
														"src": "475:6:6",
														"type": ""
													}
												],
												"src": "442:75:6"
											},
											{
												"body": {
													"nativeSrc": "612:28:6",
													"nodeType": "YulBlock",
													"src": "612:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:6",
																		"nodeType": "YulLiteral",
																		"src": "629:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:6",
																		"nodeType": "YulLiteral",
																		"src": "632:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:6"
																},
																"nativeSrc": "622:12:6",
																"nodeType": "YulFunctionCall",
																"src": "622:12:6"
															},
															"nativeSrc": "622:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:6"
											},
											{
												"body": {
													"nativeSrc": "735:28:6",
													"nodeType": "YulBlock",
													"src": "735:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:6",
																		"nodeType": "YulLiteral",
																		"src": "752:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:6",
																		"nodeType": "YulLiteral",
																		"src": "755:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:6"
																},
																"nativeSrc": "745:12:6",
																"nodeType": "YulFunctionCall",
																"src": "745:12:6"
															},
															"nativeSrc": "745:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:6"
											},
											{
												"body": {
													"nativeSrc": "814:81:6",
													"nodeType": "YulBlock",
													"src": "814:81:6",
													"statements": [
														{
															"nativeSrc": "824:65:6",
															"nodeType": "YulAssignment",
															"src": "824:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:6",
																		"nodeType": "YulLiteral",
																		"src": "846:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:6"
																},
																"nativeSrc": "835:54:6",
																"nodeType": "YulFunctionCall",
																"src": "835:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:6",
														"nodeType": "YulTypedName",
														"src": "796:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:6",
														"nodeType": "YulTypedName",
														"src": "806:7:6",
														"type": ""
													}
												],
												"src": "769:126:6"
											},
											{
												"body": {
													"nativeSrc": "946:51:6",
													"nodeType": "YulBlock",
													"src": "946:51:6",
													"statements": [
														{
															"nativeSrc": "956:35:6",
															"nodeType": "YulAssignment",
															"src": "956:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:6"
																},
																"nativeSrc": "967:24:6",
																"nodeType": "YulFunctionCall",
																"src": "967:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:6",
														"nodeType": "YulTypedName",
														"src": "928:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:6",
														"nodeType": "YulTypedName",
														"src": "938:7:6",
														"type": ""
													}
												],
												"src": "901:96:6"
											},
											{
												"body": {
													"nativeSrc": "1046:79:6",
													"nodeType": "YulBlock",
													"src": "1046:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:6",
																"nodeType": "YulBlock",
																"src": "1103:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:6"
																			},
																			"nativeSrc": "1105:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:6"
																		},
																		"nativeSrc": "1105:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:6"
																				},
																				"nativeSrc": "1076:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:6"
																		},
																		"nativeSrc": "1066:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:6"
																},
																"nativeSrc": "1059:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:6"
															},
															"nativeSrc": "1056:63:6",
															"nodeType": "YulIf",
															"src": "1056:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:6",
														"nodeType": "YulTypedName",
														"src": "1039:5:6",
														"type": ""
													}
												],
												"src": "1003:122:6"
											},
											{
												"body": {
													"nativeSrc": "1183:87:6",
													"nodeType": "YulBlock",
													"src": "1183:87:6",
													"statements": [
														{
															"nativeSrc": "1193:29:6",
															"nodeType": "YulAssignment",
															"src": "1193:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:6"
																},
																"nativeSrc": "1202:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:6"
																},
																"nativeSrc": "1231:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:6"
															},
															"nativeSrc": "1231:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:6",
														"nodeType": "YulTypedName",
														"src": "1161:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:6",
														"nodeType": "YulTypedName",
														"src": "1169:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:6",
														"nodeType": "YulTypedName",
														"src": "1177:5:6",
														"type": ""
													}
												],
												"src": "1131:139:6"
											},
											{
												"body": {
													"nativeSrc": "1319:79:6",
													"nodeType": "YulBlock",
													"src": "1319:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:6",
																"nodeType": "YulBlock",
																"src": "1376:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:6"
																			},
																			"nativeSrc": "1378:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:6"
																		},
																		"nativeSrc": "1378:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1342:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1367:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1349:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:6"
																				},
																				"nativeSrc": "1349:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1339:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:6"
																		},
																		"nativeSrc": "1339:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1332:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:6"
																},
																"nativeSrc": "1332:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1332:43:6"
															},
															"nativeSrc": "1329:63:6",
															"nodeType": "YulIf",
															"src": "1329:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1276:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:6",
														"nodeType": "YulTypedName",
														"src": "1312:5:6",
														"type": ""
													}
												],
												"src": "1276:122:6"
											},
											{
												"body": {
													"nativeSrc": "1456:87:6",
													"nodeType": "YulBlock",
													"src": "1456:87:6",
													"statements": [
														{
															"nativeSrc": "1466:29:6",
															"nodeType": "YulAssignment",
															"src": "1466:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1488:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1475:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:6"
																},
																"nativeSrc": "1475:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1475:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1466:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1531:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1504:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:6"
																},
																"nativeSrc": "1504:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1504:33:6"
															},
															"nativeSrc": "1504:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1404:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1434:6:6",
														"nodeType": "YulTypedName",
														"src": "1434:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1442:3:6",
														"nodeType": "YulTypedName",
														"src": "1442:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1450:5:6",
														"nodeType": "YulTypedName",
														"src": "1450:5:6",
														"type": ""
													}
												],
												"src": "1404:139:6"
											},
											{
												"body": {
													"nativeSrc": "1632:391:6",
													"nodeType": "YulBlock",
													"src": "1632:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1678:83:6",
																"nodeType": "YulBlock",
																"src": "1678:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1680:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1680:77:6"
																			},
																			"nativeSrc": "1680:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1680:79:6"
																		},
																		"nativeSrc": "1680:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1653:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1662:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1649:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:6"
																		},
																		"nativeSrc": "1649:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1649:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1674:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1645:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:6"
																},
																"nativeSrc": "1645:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1645:32:6"
															},
															"nativeSrc": "1642:119:6",
															"nodeType": "YulIf",
															"src": "1642:119:6"
														},
														{
															"nativeSrc": "1771:117:6",
															"nodeType": "YulBlock",
															"src": "1771:117:6",
															"statements": [
																{
																	"nativeSrc": "1786:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1800:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1790:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1815:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1815:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1850:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1861:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1846:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:6"
																				},
																				"nativeSrc": "1846:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1870:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1825:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:6"
																		},
																		"nativeSrc": "1825:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1815:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1898:118:6",
															"nodeType": "YulBlock",
															"src": "1898:118:6",
															"statements": [
																{
																	"nativeSrc": "1913:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1927:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1917:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1943:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1943:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1978:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1989:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1974:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:6"
																				},
																				"nativeSrc": "1974:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1998:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1953:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:6"
																		},
																		"nativeSrc": "1953:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1943:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1549:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1594:9:6",
														"nodeType": "YulTypedName",
														"src": "1594:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1605:7:6",
														"nodeType": "YulTypedName",
														"src": "1605:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1617:6:6",
														"nodeType": "YulTypedName",
														"src": "1617:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1625:6:6",
														"nodeType": "YulTypedName",
														"src": "1625:6:6",
														"type": ""
													}
												],
												"src": "1549:474:6"
											},
											{
												"body": {
													"nativeSrc": "2095:263:6",
													"nodeType": "YulBlock",
													"src": "2095:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:83:6",
																"nodeType": "YulBlock",
																"src": "2141:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2143:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:6"
																			},
																			"nativeSrc": "2143:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:6"
																		},
																		"nativeSrc": "2143:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2116:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2125:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2112:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:6"
																		},
																		"nativeSrc": "2112:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2108:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:6"
																},
																"nativeSrc": "2108:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2108:32:6"
															},
															"nativeSrc": "2105:119:6",
															"nodeType": "YulIf",
															"src": "2105:119:6"
														},
														{
															"nativeSrc": "2234:117:6",
															"nodeType": "YulBlock",
															"src": "2234:117:6",
															"statements": [
																{
																	"nativeSrc": "2249:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2263:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2253:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:6"
																				},
																				"nativeSrc": "2309:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2288:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:6"
																		},
																		"nativeSrc": "2288:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2278:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2029:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2065:9:6",
														"nodeType": "YulTypedName",
														"src": "2065:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2076:7:6",
														"nodeType": "YulTypedName",
														"src": "2076:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2088:6:6",
														"nodeType": "YulTypedName",
														"src": "2088:6:6",
														"type": ""
													}
												],
												"src": "2029:329:6"
											},
											{
												"body": {
													"nativeSrc": "2429:53:6",
													"nodeType": "YulBlock",
													"src": "2429:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2446:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2469:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2469:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2451:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2451:17:6"
																		},
																		"nativeSrc": "2451:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2439:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:6"
																},
																"nativeSrc": "2439:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2439:37:6"
															},
															"nativeSrc": "2439:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2439:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2364:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2417:5:6",
														"nodeType": "YulTypedName",
														"src": "2417:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2424:3:6",
														"nodeType": "YulTypedName",
														"src": "2424:3:6",
														"type": ""
													}
												],
												"src": "2364:118:6"
											},
											{
												"body": {
													"nativeSrc": "2586:124:6",
													"nodeType": "YulBlock",
													"src": "2586:124:6",
													"statements": [
														{
															"nativeSrc": "2596:26:6",
															"nodeType": "YulAssignment",
															"src": "2596:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2608:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2608:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2619:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2619:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2604:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:6"
																},
																"nativeSrc": "2604:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2604:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2596:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2596:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2676:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2689:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2700:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2700:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2685:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:6"
																		},
																		"nativeSrc": "2685:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2685:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2632:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2632:43:6"
																},
																"nativeSrc": "2632:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2632:71:6"
															},
															"nativeSrc": "2632:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2632:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2488:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2558:9:6",
														"nodeType": "YulTypedName",
														"src": "2558:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2570:6:6",
														"nodeType": "YulTypedName",
														"src": "2570:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2581:4:6",
														"nodeType": "YulTypedName",
														"src": "2581:4:6",
														"type": ""
													}
												],
												"src": "2488:222:6"
											},
											{
												"body": {
													"nativeSrc": "2779:80:6",
													"nodeType": "YulBlock",
													"src": "2779:80:6",
													"statements": [
														{
															"nativeSrc": "2789:22:6",
															"nodeType": "YulAssignment",
															"src": "2789:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2804:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2804:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2798:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2798:5:6"
																},
																"nativeSrc": "2798:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2798:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2789:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2789:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2847:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2847:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2820:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2820:26:6"
																},
																"nativeSrc": "2820:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2820:33:6"
															},
															"nativeSrc": "2820:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2820:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2716:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2757:6:6",
														"nodeType": "YulTypedName",
														"src": "2757:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2765:3:6",
														"nodeType": "YulTypedName",
														"src": "2765:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2773:5:6",
														"nodeType": "YulTypedName",
														"src": "2773:5:6",
														"type": ""
													}
												],
												"src": "2716:143:6"
											},
											{
												"body": {
													"nativeSrc": "2942:274:6",
													"nodeType": "YulBlock",
													"src": "2942:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2988:83:6",
																"nodeType": "YulBlock",
																"src": "2988:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2990:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2990:77:6"
																			},
																			"nativeSrc": "2990:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2990:79:6"
																		},
																		"nativeSrc": "2990:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2990:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2963:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2963:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2972:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2959:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:6"
																		},
																		"nativeSrc": "2959:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2984:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2984:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2955:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:6"
																},
																"nativeSrc": "2955:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2955:32:6"
															},
															"nativeSrc": "2952:119:6",
															"nodeType": "YulIf",
															"src": "2952:119:6"
														},
														{
															"nativeSrc": "3081:128:6",
															"nodeType": "YulBlock",
															"src": "3081:128:6",
															"statements": [
																{
																	"nativeSrc": "3096:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3096:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3110:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3110:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3100:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3100:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3125:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3125:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3171:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3171:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3182:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3182:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3167:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3167:3:6"
																				},
																				"nativeSrc": "3167:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3167:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3191:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3191:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3135:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3135:31:6"
																		},
																		"nativeSrc": "3135:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3135:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3125:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3125:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "2865:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2912:9:6",
														"nodeType": "YulTypedName",
														"src": "2912:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2923:7:6",
														"nodeType": "YulTypedName",
														"src": "2923:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2935:6:6",
														"nodeType": "YulTypedName",
														"src": "2935:6:6",
														"type": ""
													}
												],
												"src": "2865:351:6"
											},
											{
												"body": {
													"nativeSrc": "3250:152:6",
													"nodeType": "YulBlock",
													"src": "3250:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3267:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3267:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3270:77:6",
																		"nodeType": "YulLiteral",
																		"src": "3270:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3260:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3260:6:6"
																},
																"nativeSrc": "3260:88:6",
																"nodeType": "YulFunctionCall",
																"src": "3260:88:6"
															},
															"nativeSrc": "3260:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "3260:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3364:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3364:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3367:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3367:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3357:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3357:6:6"
																},
																"nativeSrc": "3357:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3357:15:6"
															},
															"nativeSrc": "3357:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3357:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3388:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3388:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3391:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3391:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3381:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3381:6:6"
																},
																"nativeSrc": "3381:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3381:15:6"
															},
															"nativeSrc": "3381:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3381:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3222:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3222:180:6"
											},
											{
												"body": {
													"nativeSrc": "3452:147:6",
													"nodeType": "YulBlock",
													"src": "3452:147:6",
													"statements": [
														{
															"nativeSrc": "3462:25:6",
															"nodeType": "YulAssignment",
															"src": "3462:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3485:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3485:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3467:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3467:17:6"
																},
																"nativeSrc": "3467:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3467:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3462:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3462:1:6"
																}
															]
														},
														{
															"nativeSrc": "3496:25:6",
															"nodeType": "YulAssignment",
															"src": "3496:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3519:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3519:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3501:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3501:17:6"
																},
																"nativeSrc": "3501:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3501:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3496:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3496:1:6"
																}
															]
														},
														{
															"nativeSrc": "3530:16:6",
															"nodeType": "YulAssignment",
															"src": "3530:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3541:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3541:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3544:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3544:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3537:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3537:3:6"
																},
																"nativeSrc": "3537:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3537:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3530:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3530:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3570:22:6",
																"nodeType": "YulBlock",
																"src": "3570:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3572:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3572:16:6"
																			},
																			"nativeSrc": "3572:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3572:18:6"
																		},
																		"nativeSrc": "3572:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3572:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3562:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3562:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3565:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3565:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3559:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3559:2:6"
																},
																"nativeSrc": "3559:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3559:10:6"
															},
															"nativeSrc": "3556:36:6",
															"nodeType": "YulIf",
															"src": "3556:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3408:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3439:1:6",
														"nodeType": "YulTypedName",
														"src": "3439:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3442:1:6",
														"nodeType": "YulTypedName",
														"src": "3442:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3448:3:6",
														"nodeType": "YulTypedName",
														"src": "3448:3:6",
														"type": ""
													}
												],
												"src": "3408:191:6"
											},
											{
												"body": {
													"nativeSrc": "3650:149:6",
													"nodeType": "YulBlock",
													"src": "3650:149:6",
													"statements": [
														{
															"nativeSrc": "3660:25:6",
															"nodeType": "YulAssignment",
															"src": "3660:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3683:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3683:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3665:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3665:17:6"
																},
																"nativeSrc": "3665:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3665:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3660:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3660:1:6"
																}
															]
														},
														{
															"nativeSrc": "3694:25:6",
															"nodeType": "YulAssignment",
															"src": "3694:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3717:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3717:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3699:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3699:17:6"
																},
																"nativeSrc": "3699:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3699:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3694:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3694:1:6"
																}
															]
														},
														{
															"nativeSrc": "3728:17:6",
															"nodeType": "YulAssignment",
															"src": "3728:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3740:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3740:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3743:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3743:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3736:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:6"
																},
																"nativeSrc": "3736:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3736:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3728:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3728:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3770:22:6",
																"nodeType": "YulBlock",
																"src": "3770:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3772:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3772:16:6"
																			},
																			"nativeSrc": "3772:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3772:18:6"
																		},
																		"nativeSrc": "3772:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3772:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3761:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3761:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3767:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3767:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3758:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3758:2:6"
																},
																"nativeSrc": "3758:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3758:11:6"
															},
															"nativeSrc": "3755:37:6",
															"nodeType": "YulIf",
															"src": "3755:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3605:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3636:1:6",
														"nodeType": "YulTypedName",
														"src": "3636:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3639:1:6",
														"nodeType": "YulTypedName",
														"src": "3639:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3645:4:6",
														"nodeType": "YulTypedName",
														"src": "3645:4:6",
														"type": ""
													}
												],
												"src": "3605:194:6"
											},
											{
												"body": {
													"nativeSrc": "3853:362:6",
													"nodeType": "YulBlock",
													"src": "3853:362:6",
													"statements": [
														{
															"nativeSrc": "3863:25:6",
															"nodeType": "YulAssignment",
															"src": "3863:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3886:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3886:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3868:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3868:17:6"
																},
																"nativeSrc": "3868:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3868:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3863:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3863:1:6"
																}
															]
														},
														{
															"nativeSrc": "3897:25:6",
															"nodeType": "YulAssignment",
															"src": "3897:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3920:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3920:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3902:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3902:17:6"
																},
																"nativeSrc": "3902:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3902:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3897:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3897:1:6"
																}
															]
														},
														{
															"nativeSrc": "3931:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3931:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3954:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3954:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3957:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3957:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3950:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3950:3:6"
																},
																"nativeSrc": "3950:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3950:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3935:11:6",
																	"nodeType": "YulTypedName",
																	"src": "3935:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3968:41:6",
															"nodeType": "YulAssignment",
															"src": "3968:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "3997:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "3997:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3979:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3979:17:6"
																},
																"nativeSrc": "3979:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3979:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3968:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3968:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4186:22:6",
																"nodeType": "YulBlock",
																"src": "4186:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4188:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4188:16:6"
																			},
																			"nativeSrc": "4188:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4188:18:6"
																		},
																		"nativeSrc": "4188:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4188:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4119:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4119:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4112:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4112:6:6"
																				},
																				"nativeSrc": "4112:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4142:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4142:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4149:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "4149:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4158:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "4158:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4145:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4145:3:6"
																						},
																						"nativeSrc": "4145:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4145:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4139:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4139:2:6"
																				},
																				"nativeSrc": "4139:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4139:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4092:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4092:2:6"
																		},
																		"nativeSrc": "4092:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4092:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4072:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4072:6:6"
																},
																"nativeSrc": "4072:113:6",
																"nodeType": "YulFunctionCall",
																"src": "4072:113:6"
															},
															"nativeSrc": "4069:139:6",
															"nodeType": "YulIf",
															"src": "4069:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3805:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3836:1:6",
														"nodeType": "YulTypedName",
														"src": "3836:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3839:1:6",
														"nodeType": "YulTypedName",
														"src": "3839:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3845:7:6",
														"nodeType": "YulTypedName",
														"src": "3845:7:6",
														"type": ""
													}
												],
												"src": "3805:410:6"
											},
											{
												"body": {
													"nativeSrc": "4249:152:6",
													"nodeType": "YulBlock",
													"src": "4249:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4266:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4266:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4269:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4269:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4259:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4259:6:6"
																},
																"nativeSrc": "4259:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4259:88:6"
															},
															"nativeSrc": "4259:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4259:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4363:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4363:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4366:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4366:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4356:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4356:6:6"
																},
																"nativeSrc": "4356:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4356:15:6"
															},
															"nativeSrc": "4356:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4356:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4387:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4387:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4390:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4390:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4380:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:6:6"
																},
																"nativeSrc": "4380:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:15:6"
															},
															"nativeSrc": "4380:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4380:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4221:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4221:180:6"
											},
											{
												"body": {
													"nativeSrc": "4449:143:6",
													"nodeType": "YulBlock",
													"src": "4449:143:6",
													"statements": [
														{
															"nativeSrc": "4459:25:6",
															"nodeType": "YulAssignment",
															"src": "4459:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4482:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4482:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4464:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4464:17:6"
																},
																"nativeSrc": "4464:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4464:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4459:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4459:1:6"
																}
															]
														},
														{
															"nativeSrc": "4493:25:6",
															"nodeType": "YulAssignment",
															"src": "4493:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4516:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4516:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4498:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4498:17:6"
																},
																"nativeSrc": "4498:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4498:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4493:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4493:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4540:22:6",
																"nodeType": "YulBlock",
																"src": "4540:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "4542:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4542:16:6"
																			},
																			"nativeSrc": "4542:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4542:18:6"
																		},
																		"nativeSrc": "4542:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4542:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4537:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4537:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4530:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4530:6:6"
																},
																"nativeSrc": "4530:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4530:9:6"
															},
															"nativeSrc": "4527:35:6",
															"nodeType": "YulIf",
															"src": "4527:35:6"
														},
														{
															"nativeSrc": "4572:14:6",
															"nodeType": "YulAssignment",
															"src": "4572:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4581:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4581:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4584:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4584:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4577:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4577:3:6"
																},
																"nativeSrc": "4577:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4577:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4572:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4572:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4407:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4438:1:6",
														"nodeType": "YulTypedName",
														"src": "4438:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4441:1:6",
														"nodeType": "YulTypedName",
														"src": "4441:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4447:1:6",
														"nodeType": "YulTypedName",
														"src": "4447:1:6",
														"type": ""
													}
												],
												"src": "4407:185:6"
											},
											{
												"body": {
													"nativeSrc": "4724:206:6",
													"nodeType": "YulBlock",
													"src": "4724:206:6",
													"statements": [
														{
															"nativeSrc": "4734:26:6",
															"nodeType": "YulAssignment",
															"src": "4734:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4746:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4746:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4757:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4757:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4742:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4742:3:6"
																},
																"nativeSrc": "4742:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4742:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4734:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4734:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4814:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4814:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4827:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4827:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4838:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4838:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4823:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4823:3:6"
																		},
																		"nativeSrc": "4823:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4823:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4770:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4770:43:6"
																},
																"nativeSrc": "4770:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4770:71:6"
															},
															"nativeSrc": "4770:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4770:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4895:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4895:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4908:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4908:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4919:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4919:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4904:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4904:3:6"
																		},
																		"nativeSrc": "4904:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4904:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4851:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4851:43:6"
																},
																"nativeSrc": "4851:72:6",
																"nodeType": "YulFunctionCall",
																"src": "4851:72:6"
															},
															"nativeSrc": "4851:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "4851:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4598:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4688:9:6",
														"nodeType": "YulTypedName",
														"src": "4688:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4700:6:6",
														"nodeType": "YulTypedName",
														"src": "4700:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4708:6:6",
														"nodeType": "YulTypedName",
														"src": "4708:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4719:4:6",
														"nodeType": "YulTypedName",
														"src": "4719:4:6",
														"type": ""
													}
												],
												"src": "4598:332:6"
											},
											{
												"body": {
													"nativeSrc": "4978:48:6",
													"nodeType": "YulBlock",
													"src": "4978:48:6",
													"statements": [
														{
															"nativeSrc": "4988:32:6",
															"nodeType": "YulAssignment",
															"src": "4988:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5013:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5013:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5006:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5006:6:6"
																		},
																		"nativeSrc": "5006:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5006:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4999:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4999:6:6"
																},
																"nativeSrc": "4999:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4999:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4988:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4988:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4936:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4960:5:6",
														"nodeType": "YulTypedName",
														"src": "4960:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4970:7:6",
														"nodeType": "YulTypedName",
														"src": "4970:7:6",
														"type": ""
													}
												],
												"src": "4936:90:6"
											},
											{
												"body": {
													"nativeSrc": "5072:76:6",
													"nodeType": "YulBlock",
													"src": "5072:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5126:16:6",
																"nodeType": "YulBlock",
																"src": "5126:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5135:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5135:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5138:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5138:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5128:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5128:6:6"
																			},
																			"nativeSrc": "5128:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5128:12:6"
																		},
																		"nativeSrc": "5128:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5128:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5095:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5095:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5117:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5117:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5102:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "5102:14:6"
																				},
																				"nativeSrc": "5102:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5102:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5092:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5092:2:6"
																		},
																		"nativeSrc": "5092:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5092:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5085:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5085:6:6"
																},
																"nativeSrc": "5085:40:6",
																"nodeType": "YulFunctionCall",
																"src": "5085:40:6"
															},
															"nativeSrc": "5082:60:6",
															"nodeType": "YulIf",
															"src": "5082:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5032:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5065:5:6",
														"nodeType": "YulTypedName",
														"src": "5065:5:6",
														"type": ""
													}
												],
												"src": "5032:116:6"
											},
											{
												"body": {
													"nativeSrc": "5214:77:6",
													"nodeType": "YulBlock",
													"src": "5214:77:6",
													"statements": [
														{
															"nativeSrc": "5224:22:6",
															"nodeType": "YulAssignment",
															"src": "5224:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5239:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5233:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5233:5:6"
																},
																"nativeSrc": "5233:13:6",
																"nodeType": "YulFunctionCall",
																"src": "5233:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5224:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5224:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5279:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5279:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5255:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "5255:23:6"
																},
																"nativeSrc": "5255:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5255:30:6"
															},
															"nativeSrc": "5255:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5255:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5154:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5192:6:6",
														"nodeType": "YulTypedName",
														"src": "5192:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5200:3:6",
														"nodeType": "YulTypedName",
														"src": "5200:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5208:5:6",
														"nodeType": "YulTypedName",
														"src": "5208:5:6",
														"type": ""
													}
												],
												"src": "5154:137:6"
											},
											{
												"body": {
													"nativeSrc": "5371:271:6",
													"nodeType": "YulBlock",
													"src": "5371:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5417:83:6",
																"nodeType": "YulBlock",
																"src": "5417:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5419:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5419:77:6"
																			},
																			"nativeSrc": "5419:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5419:79:6"
																		},
																		"nativeSrc": "5419:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5419:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5392:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5392:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5401:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5401:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5388:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5388:3:6"
																		},
																		"nativeSrc": "5388:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5388:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5413:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5384:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5384:3:6"
																},
																"nativeSrc": "5384:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5384:32:6"
															},
															"nativeSrc": "5381:119:6",
															"nodeType": "YulIf",
															"src": "5381:119:6"
														},
														{
															"nativeSrc": "5510:125:6",
															"nodeType": "YulBlock",
															"src": "5510:125:6",
															"statements": [
																{
																	"nativeSrc": "5525:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5525:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5539:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5539:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5529:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5529:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5554:71:6",
																	"nodeType": "YulAssignment",
																	"src": "5554:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5597:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5597:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5608:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5608:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5593:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5593:3:6"
																				},
																				"nativeSrc": "5593:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5593:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5617:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5617:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5564:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "5564:28:6"
																		},
																		"nativeSrc": "5564:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5564:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5554:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5554:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5297:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5341:9:6",
														"nodeType": "YulTypedName",
														"src": "5341:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5352:7:6",
														"nodeType": "YulTypedName",
														"src": "5352:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5364:6:6",
														"nodeType": "YulTypedName",
														"src": "5364:6:6",
														"type": ""
													}
												],
												"src": "5297:345:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"801": [
									{
										"length": 32,
										"start": 1068
									},
									{
										"length": 32,
										"start": 1200
									}
								],
								"803": [
									{
										"length": 32,
										"start": 547
									},
									{
										"length": 32,
										"start": 629
									},
									{
										"length": 32,
										"start": 721
									},
									{
										"length": 32,
										"start": 1256
									}
								],
								"805": [
									{
										"length": 32,
										"start": 316
									},
									{
										"length": 32,
										"start": 596
									},
									{
										"length": 32,
										"start": 688
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c80630fb5a6b41461006457806317cf53911461008257806319165587146100b257806338af3eed146100ce578063bbc702c6146100ec578063be9a65551461011c575b5f80fd5b61006c61013a565b6040516100799190610522565b60405180910390f35b61009c600480360381019061009791906105c3565b61015e565b6040516100a99190610522565b60405180910390f35b6100cc60048036038101906100c79190610601565b61031a565b005b6100d66104ae565b6040516100e3919061063b565b60405180910390f35b61010660048036038101906101019190610601565b6104d2565b6040516101139190610522565b60405180910390f35b6101246104e6565b6040516101319190610522565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101d6919061063b565b602060405180830381865afa1580156101f1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102159190610668565b61021f91906106c0565b90507f0000000000000000000000000000000000000000000000000000000000000000831015610252575f915050610314565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061029e91906106c0565b8311156102ae5780915050610314565b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846102fb91906106f3565b826103069190610726565b6103109190610794565b9150505b92915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610362834261015e565b61036c91906106f3565b9050805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103b991906106c0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516104069190610522565b60405180910390a28173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b81526004016104699291906107c4565b6020604051808303815f875af1158015610485573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a99190610820565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f819050919050565b61051c8161050a565b82525050565b5f6020820190506105355f830184610513565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105688261053f565b9050919050565b6105788161055e565b8114610582575f80fd5b50565b5f813590506105938161056f565b92915050565b6105a28161050a565b81146105ac575f80fd5b50565b5f813590506105bd81610599565b92915050565b5f80604083850312156105d9576105d861053b565b5b5f6105e685828601610585565b92505060206105f7858286016105af565b9150509250929050565b5f602082840312156106165761061561053b565b5b5f61062384828501610585565b91505092915050565b6106358161055e565b82525050565b5f60208201905061064e5f83018461062c565b92915050565b5f8151905061066281610599565b92915050565b5f6020828403121561067d5761067c61053b565b5b5f61068a84828501610654565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106ca8261050a565b91506106d58361050a565b92508282019050808211156106ed576106ec610693565b5b92915050565b5f6106fd8261050a565b91506107088361050a565b92508282039050818111156107205761071f610693565b5b92915050565b5f6107308261050a565b915061073b8361050a565b92508282026107498161050a565b915082820484148315176107605761075f610693565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61079e8261050a565b91506107a98361050a565b9250826107b9576107b8610767565b5b828204905092915050565b5f6040820190506107d75f83018561062c565b6107e46020830184610513565b9392505050565b5f8115159050919050565b6107ff816107eb565b8114610809575f80fd5b50565b5f8151905061081a816107f6565b92915050565b5f602082840312156108355761083461053b565b5b5f6108428482850161080c565b9150509291505056fea264697066735822122083fab34f93571866279cdb29734d933e1af2a157b855af6071f74850c938dc6064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x17CF5391 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xBBC702C6 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP4 LT ISZERO PUSH2 0x252 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x314 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x2AE JUMPI DUP1 SWAP2 POP POP PUSH2 0x314 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 DUP5 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST DUP3 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x794 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x362 DUP4 TIMESTAMP PUSH2 0x15E JUMP JUMPDEST PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x469 SWAP3 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x485 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x51C DUP2 PUSH2 0x50A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x535 PUSH0 DUP4 ADD DUP5 PUSH2 0x513 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x568 DUP3 PUSH2 0x53F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x578 DUP2 PUSH2 0x55E JUMP JUMPDEST DUP2 EQ PUSH2 0x582 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x593 DUP2 PUSH2 0x56F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A2 DUP2 PUSH2 0x50A JUMP JUMPDEST DUP2 EQ PUSH2 0x5AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5BD DUP2 PUSH2 0x599 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x5D8 PUSH2 0x53B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5E6 DUP6 DUP3 DUP7 ADD PUSH2 0x585 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5F7 DUP6 DUP3 DUP7 ADD PUSH2 0x5AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH2 0x615 PUSH2 0x53B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x623 DUP5 DUP3 DUP6 ADD PUSH2 0x585 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x635 DUP2 PUSH2 0x55E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x64E PUSH0 DUP4 ADD DUP5 PUSH2 0x62C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x662 DUP2 PUSH2 0x599 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67D JUMPI PUSH2 0x67C PUSH2 0x53B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x68A DUP5 DUP3 DUP6 ADD PUSH2 0x654 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6CA DUP3 PUSH2 0x50A JUMP JUMPDEST SWAP2 POP PUSH2 0x6D5 DUP4 PUSH2 0x50A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6ED JUMPI PUSH2 0x6EC PUSH2 0x693 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6FD DUP3 PUSH2 0x50A JUMP JUMPDEST SWAP2 POP PUSH2 0x708 DUP4 PUSH2 0x50A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x720 JUMPI PUSH2 0x71F PUSH2 0x693 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x730 DUP3 PUSH2 0x50A JUMP JUMPDEST SWAP2 POP PUSH2 0x73B DUP4 PUSH2 0x50A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x749 DUP2 PUSH2 0x50A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x693 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x79E DUP3 PUSH2 0x50A JUMP JUMPDEST SWAP2 POP PUSH2 0x7A9 DUP4 PUSH2 0x50A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x7B9 JUMPI PUSH2 0x7B8 PUSH2 0x767 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7D7 PUSH0 DUP4 ADD DUP6 PUSH2 0x62C JUMP JUMPDEST PUSH2 0x7E4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x513 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FF DUP2 PUSH2 0x7EB JUMP JUMPDEST DUP2 EQ PUSH2 0x809 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x81A DUP2 PUSH2 0x7F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x835 JUMPI PUSH2 0x834 PUSH2 0x53B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x842 DUP5 DUP3 DUP6 ADD PUSH2 0x80C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 STATICCALL 0xB3 0x4F SWAP4 JUMPI XOR PUSH7 0x279CDB29734D93 RETURNDATACOPY BYTE CALLCODE LOG1 JUMPI 0xB8 SSTORE 0xAF PUSH1 0x71 0xF7 BASEFEE POP 0xC9 CODESIZE 0xDC PUSH1 0x64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "748:2033:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1070:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2143:633;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1604:440;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;948:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;857:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1014:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1070:33;;;:::o;2143:633::-;2219:7;2326:23;2393:13;:20;2407:5;2393:20;;;;;;;;;;;;;;;;2359:5;2352:23;;;2384:4;2352:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;2326:87;;2520:5;2508:9;:17;2505:264;;;2548:1;2541:8;;;;;2505:264;2590:8;2582:5;:16;;;;:::i;:::-;2570:9;:28;2566:203;;;2621:15;2614:22;;;;;2566:203;2749:8;2739:5;2727:9;:17;;;;:::i;:::-;2708:15;:37;;;;:::i;:::-;2707:50;;;;:::i;:::-;2700:57;;;2143:633;;;;;:::o;1604:440::-;1719:18;1788:13;:20;1802:5;1788:20;;;;;;;;;;;;;;;;1740:45;1753:5;1768:15;1740:12;:45::i;:::-;:68;;;;:::i;:::-;1719:89;;1882:10;1858:13;:20;1872:5;1858:20;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;1957:5;1943:34;;;1964:10;1943:34;;;;;;:::i;:::-;;;;;;;;1995:5;1988:22;;;2011:11;2024:10;1988:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1643:401;1604:440;:::o;948:36::-;;;:::o;857:48::-;;;;;;;;;;;;;;;;;:::o;1014:30::-;;;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:118::-;2451:24;2469:5;2451:24;:::i;:::-;2446:3;2439:37;2364:118;;:::o;2488:222::-;2581:4;2619:2;2608:9;2604:18;2596:26;;2632:71;2700:1;2689:9;2685:17;2676:6;2632:71;:::i;:::-;2488:222;;;;:::o;2716:143::-;2773:5;2804:6;2798:13;2789:22;;2820:33;2847:5;2820:33;:::i;:::-;2716:143;;;;:::o;2865:351::-;2935:6;2984:2;2972:9;2963:7;2959:23;2955:32;2952:119;;;2990:79;;:::i;:::-;2952:119;3110:1;3135:64;3191:7;3182:6;3171:9;3167:22;3135:64;:::i;:::-;3125:74;;3081:128;2865:351;;;;:::o;3222:180::-;3270:77;3267:1;3260:88;3367:4;3364:1;3357:15;3391:4;3388:1;3381:15;3408:191;3448:3;3467:20;3485:1;3467:20;:::i;:::-;3462:25;;3501:20;3519:1;3501:20;:::i;:::-;3496:25;;3544:1;3541;3537:9;3530:16;;3565:3;3562:1;3559:10;3556:36;;;3572:18;;:::i;:::-;3556:36;3408:191;;;;:::o;3605:194::-;3645:4;3665:20;3683:1;3665:20;:::i;:::-;3660:25;;3699:20;3717:1;3699:20;:::i;:::-;3694:25;;3743:1;3740;3736:9;3728:17;;3767:1;3761:4;3758:11;3755:37;;;3772:18;;:::i;:::-;3755:37;3605:194;;;;:::o;3805:410::-;3845:7;3868:20;3886:1;3868:20;:::i;:::-;3863:25;;3902:20;3920:1;3902:20;:::i;:::-;3897:25;;3957:1;3954;3950:9;3979:30;3997:11;3979:30;:::i;:::-;3968:41;;4158:1;4149:7;4145:15;4142:1;4139:22;4119:1;4112:9;4092:83;4069:139;;4188:18;;:::i;:::-;4069:139;3853:362;3805:410;;;;:::o;4221:180::-;4269:77;4266:1;4259:88;4366:4;4363:1;4356:15;4390:4;4387:1;4380:15;4407:185;4447:1;4464:20;4482:1;4464:20;:::i;:::-;4459:25;;4498:20;4516:1;4498:20;:::i;:::-;4493:25;;4537:1;4527:35;;4542:18;;:::i;:::-;4527:35;4584:1;4581;4577:9;4572:14;;4407:185;;;;:::o;4598:332::-;4719:4;4757:2;4746:9;4742:18;4734:26;;4770:71;4838:1;4827:9;4823:17;4814:6;4770:71;:::i;:::-;4851:72;4919:2;4908:9;4904:18;4895:6;4851:72;:::i;:::-;4598:332;;;;;:::o;4936:90::-;4970:7;5013:5;5006:13;4999:21;4988:32;;4936:90;;;:::o;5032:116::-;5102:21;5117:5;5102:21;:::i;:::-;5095:5;5092:32;5082:60;;5138:1;5135;5128:12;5082:60;5032:116;:::o;5154:137::-;5208:5;5239:6;5233:13;5224:22;;5255:30;5279:5;5255:30;:::i;:::-;5154:137;;;;:::o;5297:345::-;5364:6;5413:2;5401:9;5392:7;5388:23;5384:32;5381:119;;;5419:79;;:::i;:::-;5381:119;5539:1;5564:61;5617:7;5608:6;5597:9;5593:22;5564:61;:::i;:::-;5554:71;;5510:125;5297:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "435400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "infinite",
								"duration()": "infinite",
								"erc20Released(address)": "2867",
								"release(address)": "infinite",
								"start()": "infinite",
								"vestedAmount(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1220,
									"end": 1518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1352,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "PUSH",
									"source": 5,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1320,
									"end": 1396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1320,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1421,
									"end": 1439,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1458,
									"end": 1473,
									"name": "TIMESTAMP",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1473,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 1450,
									"end": 1473,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1473,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1473,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1473,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1473,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1495,
									"end": 1510,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1510,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 1484,
									"end": 1510,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1510,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1510,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1510,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1510,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1518,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1834,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1824,
									"end": 1843,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1876,
									"end": 1880,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1871,
									"end": 1874,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1867,
									"end": 1881,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1881,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2119,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1893,
									"end": 2119,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2033,
									"end": 2067,
									"name": "PUSH",
									"source": 6,
									"value": "56657374696E6757616C6C65743A2062656E6566696369617279206973203020"
								},
								{
									"begin": 2029,
									"end": 2030,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2021,
									"end": 2027,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2017,
									"end": 2031,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2068,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2102,
									"end": 2111,
									"name": "PUSH",
									"source": 6,
									"value": "6164647265737300000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2097,
									"end": 2099,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2089,
									"end": 2095,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2100,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2078,
									"end": 2112,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2119,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2119,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2491,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2125,
									"end": 2491,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2267,
									"end": 2270,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2288,
									"end": 2355,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2352,
									"end": 2354,
									"name": "PUSH",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2347,
									"end": 2350,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2288,
									"end": 2355,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2288,
									"end": 2355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2288,
									"end": 2355,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2288,
									"end": 2355,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2281,
									"end": 2355,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2281,
									"end": 2355,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2453,
									"end": 2456,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2364,
									"end": 2457,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2457,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2364,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2482,
									"end": 2484,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2477,
									"end": 2480,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2485,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2466,
									"end": 2485,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2466,
									"end": 2485,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2491,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2491,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2491,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2491,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2916,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2497,
									"end": 2916,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2663,
									"end": 2667,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2701,
									"end": 2703,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2690,
									"end": 2699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2686,
									"end": 2704,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2704,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2750,
									"end": 2759,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2744,
									"end": 2748,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2740,
									"end": 2760,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2736,
									"end": 2737,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2725,
									"end": 2734,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2721,
									"end": 2738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2714,
									"end": 2761,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2778,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2904,
									"end": 2908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2778,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2778,
									"end": 2909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2778,
									"end": 2909,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2778,
									"end": 2909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2770,
									"end": 2909,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2770,
									"end": 2909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2916,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2916,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2916,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "805"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "803"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "801"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 2781,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083fab34f93571866279cdb29734d933e1af2a157b855af6071f74850c938dc6064736f6c634300081a0033",
									".code": [
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "FB5A6B4"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "17CF5391"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "19165587"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "38AF3EED"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "BBC702C6"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "BE9A6555"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 2781,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1070,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1070,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2143,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2143,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2143,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1604,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 948,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 948,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 948,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 948,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 948,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 948,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 948,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 857,
											"end": 905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 857,
											"end": 905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 857,
											"end": 905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1014,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1014,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "805"
										},
										{
											"begin": 1070,
											"end": 1103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2349,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2412,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2375,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2384,
											"end": 2388,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2352,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2352,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2352,
											"end": 2413,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2413,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2352,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2413,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "803"
										},
										{
											"begin": 2508,
											"end": 2517,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2525,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2769,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2505,
											"end": 2769,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2769,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2505,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2598,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "805"
										},
										{
											"begin": 2582,
											"end": 2587,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "803"
										},
										{
											"begin": 2582,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2582,
											"end": 2598,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2598,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2582,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2598,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2769,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2566,
											"end": 2769,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2769,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2566,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2757,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "805"
										},
										{
											"begin": 2739,
											"end": 2744,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "803"
										},
										{
											"begin": 2727,
											"end": 2736,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2727,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2708,
											"end": 2745,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2708,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2745,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2708,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2757,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2707,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2757,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2757,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1801,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1807,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1740,
											"end": 1785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1785,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1740,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1740,
											"end": 1808,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1740,
											"end": 1808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1808,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1740,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1719,
											"end": 1808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1719,
											"end": 1808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 1892,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "C0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
										},
										{
											"begin": 1964,
											"end": 1974,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1943,
											"end": 1977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1977,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1995,
											"end": 2000,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2011,
											"end": 2022,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "801"
										},
										{
											"begin": 2024,
											"end": 2034,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1988,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1988,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 2044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 948,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "801"
										},
										{
											"begin": 948,
											"end": 984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 948,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 857,
											"end": 905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "803"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1680,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1825,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2451,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2702,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2632,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2811,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2847,
											"end": 2852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2820,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2853,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2820,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 2986,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2970,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2959,
											"end": 2982,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 2987,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 3071,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2952,
											"end": 3071,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2990,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 3071,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2952,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3191,
											"end": 3198,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3180,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3135,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3135,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3402,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3222,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3270,
											"end": 3347,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3267,
											"end": 3268,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3388,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3396,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3599,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3485,
											"end": 3486,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3467,
											"end": 3487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3519,
											"end": 3520,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3501,
											"end": 3521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3521,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3501,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3521,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 3542,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3546,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3569,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3592,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3556,
											"end": 3592,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3572,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3592,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3556,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3599,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3599,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3665,
											"end": 3685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3665,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3717,
											"end": 3718,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3699,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3719,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3745,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3765,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3792,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3755,
											"end": 3792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3772,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3755,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 4215,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3805,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3886,
											"end": 3887,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3868,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3902,
											"end": 3922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3922,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3959,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3997,
											"end": 4008,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3979,
											"end": 4009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4009,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3979,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4149,
											"end": 4156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4160,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4161,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4120,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4121,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4175,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4069,
											"end": 4208,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4188,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4188,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4206,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4188,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4208,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4069,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 4215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 4215,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 4215,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 4215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 4215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 4215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4401,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4221,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4346,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4347,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4363,
											"end": 4364,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4387,
											"end": 4388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4395,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4592,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4407,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4482,
											"end": 4483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4464,
											"end": 4484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4484,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4464,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4484,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4516,
											"end": 4517,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4498,
											"end": 4518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4518,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4498,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4518,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4527,
											"end": 4562,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4542,
											"end": 4560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4562,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4527,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4585,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4581,
											"end": 4582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4586,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4572,
											"end": 4586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4572,
											"end": 4586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4592,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4930,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4598,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 4759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4836,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4820,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4770,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4841,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4770,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4851,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4908,
											"end": 4917,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4901,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4851,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4851,
											"end": 4923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4851,
											"end": 4923,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4851,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4930,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4930,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 5026,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4936,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5019,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5020,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 5026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 5026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 5026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 5026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5148,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5032,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5117,
											"end": 5122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5102,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5095,
											"end": 5100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5082,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5082,
											"end": 5142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5082,
											"end": 5142,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5082,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5208,
											"end": 5213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5239,
											"end": 5245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 5246,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5224,
											"end": 5246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5224,
											"end": 5246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5279,
											"end": 5284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5255,
											"end": 5285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5285,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5255,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 5370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5401,
											"end": 5410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5399,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5411,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5384,
											"end": 5416,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5500,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5381,
											"end": 5500,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5419,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 5419,
											"end": 5498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5498,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5419,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5500,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5381,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5593,
											"end": 5615,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5564,
											"end": 5625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5625,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5564,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5554,
											"end": 5625,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5554,
											"end": 5625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/linerRelease.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"duration()": "0fb5a6b4",
							"erc20Released(address)": "bbc702c6",
							"release(address)": "19165587",
							"start()": "be9a6555",
							"vestedAmount(address,uint256)": "17cf5391"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiaryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"durationSeconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"erc20Released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"initialize the address of beneficiary, duration, and start timestamp*\"},\"release(address)\":{\"notice\":\"Beneficiary call this function to gain their token*\"},\"vestedAmount(address,uint256)\":{\"notice\":\"calculate the amount of token using the liner release algorithm*\"}},\"notice\":\"In financial field, some companies will give token to their employees. But there are some issues in it whitch is employees may chose to sell all of  their tokens. That will drop the price of the token. What is liner release? Liner release means tokens will be released slowly. project owner will make rule about the vesting. What rules? - the project owner stipulates the start time, durations and beneficiary of release. - the project owner transfers the locked ERC20 tokens to the TokenVesting contract. - beneficiary can call the release() function to gain their tokens.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/linerRelease.sol\":\"TokenVasting\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/linerRelease.sol\":{\"keccak256\":\"0x32c15eead395cdce529e01d627732558b6824ca55764e27ab34a660c018b2689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43b6ee2951c4c715643df368ec4ad06d13723d0d8a6ba208ff8caa902b1f3e3\",\"dweb:/ipfs/Qmerdx37ow8ao4z3aqVu87Y5pVBrSpxXteKtyWVTrGa1UC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 799,
								"contract": "contracts/linerRelease.sol:TokenVasting",
								"label": "erc20Released",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "initialize the address of beneficiary, duration, and start timestamp*"
							},
							"release(address)": {
								"notice": "Beneficiary call this function to gain their token*"
							},
							"vestedAmount(address,uint256)": {
								"notice": "calculate the amount of token using the liner release algorithm*"
							}
						},
						"notice": "In financial field, some companies will give token to their employees. But there are some issues in it whitch is employees may chose to sell all of  their tokens. That will drop the price of the token. What is liner release? Liner release means tokens will be released slowly. project owner will make rule about the vesting. What rules? - the project owner stipulates the start time, durations and beneficiary of release. - the project owner transfers the locked ERC20 tokens to the TokenVesting contract. - beneficiary can call the release() function to gain their tokens.*",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/linerRelease.sol": {
				"ast": {
					"absolutePath": "contracts/linerRelease.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"TokenVasting": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 934,
							"sourceUnit": 652,
							"src": "60:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenVasting",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 789,
								"nodeType": "StructuredDocumentation",
								"src": "121:625:5",
								"text": "In financial field, some companies will give token to their employees.\nBut there are some issues in it whitch is employees may chose to sell all of  their tokens.\nThat will drop the price of the token.\nWhat is liner release?\nLiner release means tokens will be released slowly.\nproject owner will make rule about the vesting.\nWhat rules?\n- the project owner stipulates the start time, durations and beneficiary of release.\n- the project owner transfers the locked ERC20 tokens to the TokenVesting contract.\n- beneficiary can call the release() function to gain their tokens.*"
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "TokenVasting",
							"nameLocation": "757:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b",
									"id": 795,
									"name": "ERC20Released",
									"nameLocation": "796:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "826:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "810:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "841:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "833:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:39:5"
									},
									"src": "790:59:5"
								},
								{
									"constant": false,
									"functionSelector": "bbc702c6",
									"id": 799,
									"mutability": "mutable",
									"name": "erc20Released",
									"nameLocation": "892:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "857:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 798,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 796,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "865:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "857:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 797,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "876:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38af3eed",
									"id": 801,
									"mutability": "immutable",
									"name": "beneficiary",
									"nameLocation": "973:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "948:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 800,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "948:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "be9a6555",
									"id": 803,
									"mutability": "immutable",
									"name": "start",
									"nameLocation": "1039:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "1014:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 802,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1014:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fb5a6b4",
									"id": 805,
									"mutability": "immutable",
									"name": "duration",
									"nameLocation": "1095:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "1070:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 804,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1070:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "1309:209:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "1328:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1351:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1343:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 815,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1343:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1343:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1328:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e6757616c6c65743a2062656e656669636961727920697320302061646472657373",
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c",
																"typeString": "literal_string \"VestingWallet: beneficiary is 0 address\""
															},
															"value": "VestingWallet: beneficiary is 0 address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9337729ca8ec208accd17341b192c997ae0cae021daf8ea973704c2d495133c",
																"typeString": "literal_string \"VestingWallet: beneficiary is 0 address\""
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1320:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1320:76:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "1320:76:5"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 823,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "1407:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 824,
														"name": "beneficiaryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "1421:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1407:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "1407:32:5"
											},
											{
												"expression": {
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 827,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "1450:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 828,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1458:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1464:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1458:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1450:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "1450:23:5"
											},
											{
												"expression": {
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 832,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "1484:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 833,
														"name": "durationSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1495:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1484:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "1484:26:5"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "1124:90:5",
										"text": "initialize the address of beneficiary, duration, and start timestamp*"
									},
									"id": 837,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "beneficiaryAddress",
												"nameLocation": "1250:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "1242:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "1287:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "1279:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:78:5"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1309:0:5"
									},
									"scope": 933,
									"src": "1220:298:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "1643:401:5",
										"statements": [
											{
												"assignments": [
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "releasable",
														"nameLocation": "1727:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 877,
														"src": "1719:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1719:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 857,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 846,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "1753:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 849,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1768:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1774:9:5",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1768:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1760:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 847,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1760:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1760:24:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 845,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "1740:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1740:45:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 853,
															"name": "erc20Released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "1788:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 855,
														"indexExpression": {
															"id": 854,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "1802:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1788:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1740:68:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1719:89:5"
											},
											{
												"expression": {
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 858,
															"name": "erc20Released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "1858:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 860,
														"indexExpression": {
															"id": 859,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "1872:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1858:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 861,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "1882:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1858:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "1858:34:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 865,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "1957:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "1964:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 864,
														"name": "ERC20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "1943:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "EmitStatement",
												"src": "1938:39:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 873,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "2011:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "2024:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 870,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "1995:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 869,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "1988:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1988:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2002:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "1988:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1988:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "1988:48:5"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "1526:72:5",
										"text": "Beneficiary call this function to gain their token*"
									},
									"functionSelector": "19165587",
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "1613:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1629:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1621:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:15:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1643:0:5"
									},
									"scope": 933,
									"src": "1604:440:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "2227:549:5",
										"statements": [
											{
												"assignments": [
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "totalAllocation",
														"nameLocation": "2334:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "2326:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 888,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2326:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 896,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2384:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TokenVasting_$933",
																			"typeString": "contract TokenVasting"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TokenVasting_$933",
																			"typeString": "contract TokenVasting"
																		}
																	],
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2376:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 894,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2376:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2376:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 891,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "2359:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 890,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "2352:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2352:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2366:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "2352:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2352:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 899,
															"name": "erc20Released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "2393:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 901,
														"indexExpression": {
															"id": 900,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "2407:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2393:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2352:61:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2326:87:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 904,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2508:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 905,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "2520:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2508:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 910,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "2570:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 911,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "2582:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 912,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "2590:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2582:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2570:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 928,
														"nodeType": "Block",
														"src": "2654:115:5",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 918,
																					"name": "totalAllocation",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 889,
																					"src": "2708:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 921,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 919,
																								"name": "timestamp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 883,
																								"src": "2727:9:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 920,
																								"name": "start",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 803,
																								"src": "2739:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2727:17:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 922,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2726:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2708:37:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 924,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2707:39:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 925,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "2749:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2707:50:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 887,
																"id": 927,
																"nodeType": "Return",
																"src": "2700:57:5"
															}
														]
													},
													"id": 929,
													"nodeType": "IfStatement",
													"src": "2566:203:5",
													"trueBody": {
														"id": 917,
														"nodeType": "Block",
														"src": "2599:49:5",
														"statements": [
															{
																"expression": {
																	"id": 915,
																	"name": "totalAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "2621:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 887,
																"id": 916,
																"nodeType": "Return",
																"src": "2614:22:5"
															}
														]
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "2505:264:5",
												"trueBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "2526:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2548:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 887,
															"id": 908,
															"nodeType": "Return",
															"src": "2541:8:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "2052:85:5",
										"text": "calculate the amount of token using the liner release algorithm*"
									},
									"functionSelector": "17cf5391",
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "2152:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2173:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "2165:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2188:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "2180:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:34:5"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "2219:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:9:5"
									},
									"scope": 933,
									"src": "2143:633:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 934,
							"src": "748:2033:5",
							"usedErrors": [],
							"usedEvents": [
								795
							]
						}
					],
					"src": "33:2748:5"
				},
				"id": 5
			}
		}
	}
}