{
	"id": "ed90b6747e02c4fd84e0d45b160d31d5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokenLock.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.21;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n\r\n\r\n/**\r\nWhat is Token Lock?\r\n    It is a contract base on time lock which can lock the tokens in the contract for a period of time.\r\n    Beneficiary can withdraw the tokens after the lock-up preiod time expires.\r\n    Token Lock generally is used to lock liquidity provider LP tokens.\r\nWhat is LP token?\r\n    In DEX exchanger, they use AMM mechanisms. So it need users or project owners to provide fund pool\r\n     which can let other users buy or sell instantly.\r\n     Simply speaking, user/project pledge their token pair (ETH/DAI) to the fund pool. \r\n     And DEX will give them LP tokens that means they have pledged equal shares.\r\n    \r\nWhy need to lock liquidity?\r\n    If project owner withdraw LP token from the pool, other invester's token will be zero  which is called rug-pull.\r\n    So we need to lock the LP token in the contract. And before the end of lock-up period,\r\n     project owner can not withdraw the LP token. This measure avoid from rug-pull attack.\r\n**/\r\ncontract TokenLocker {\r\n\r\n    event TokenLockStart(address indexed  beneficiary, address indexed token, uint256 startTime, uint256 lockTime);\r\n    event Release(address indexed beneficiary, address indexed token, uint256 releaseTime, uint256 amount);\r\n\r\n    // ERC20 token to be locked\r\n    IERC20 public immutable token;\r\n    // benificiary address\r\n    address public immutable beneficiary;\r\n    // lock time (seconds)\r\n    uint256 public immutable lockTime;\r\n    // start time timestamp\r\n    uint256 public immutable startTime;\r\n\r\n    // deployment the contract of time lock,\r\n    // initialize the address of the token/beneficiary/lock time\r\n    constructor(\r\n        IERC20 token_,\r\n        address beneficiary_,\r\n        uint256 lockTime_\r\n    ) {\r\n        require(lockTime_ >0 ,\"TokenLock: lock time should greater than 0\");\r\n        token = token_;\r\n        beneficiary = beneficiary_;\r\n        lockTime = lockTime_;\r\n        startTime = block.timestamp;\r\n        emit TokenLockStart(beneficiary_, address(token_), block.timestamp, lockTime_);\r\n    }\r\n    /**\r\n        Release token to beneficiary after the end period of lock-up time\r\n    **/\r\n    function release() public {\r\n        require(block.timestamp >= startTime + lockTime, \"TokenLock: current time is before release time.\");\r\n        uint256 amount = token.balanceOf(address(this));\r\n        require(amount > 0, \"TokenLock: no tokens to release\");\r\n        token.transfer(beneficiary, amount);\r\n        emit Release(msg.sender, address(this), block.timestamp, amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/tokenLock.sol": {
				"TokenLocker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "beneficiary_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "lockTime_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Release",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockTime",
									"type": "uint256"
								}
							],
							"name": "TokenLockStart",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokenLock.sol\":1097:2645  contract TokenLocker {... */\n  mstore(0x40, 0x0100)\n    /* \"contracts/tokenLock.sol\":1747:2155  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tokenLock.sol\":1879:1880  0 */\n  0x00\n    /* \"contracts/tokenLock.sol\":1868:1877  lockTime_ */\n  dup2\n    /* \"contracts/tokenLock.sol\":1868:1880  lockTime_ >0 */\n  gt\n    /* \"contracts/tokenLock.sol\":1860:1927  require(lockTime_ >0 ,\"TokenLock: lock time should greater than 0\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/tokenLock.sol\":1946:1952  token_ */\n  dup3\n    /* \"contracts/tokenLock.sol\":1938:1952  token = token_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/tokenLock.sol\":1977:1989  beneficiary_ */\n  dup2\n    /* \"contracts/tokenLock.sol\":1963:1989  beneficiary = beneficiary_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/tokenLock.sol\":2011:2020  lockTime_ */\n  dup1\n    /* \"contracts/tokenLock.sol\":2000:2020  lockTime = lockTime_ */\n  0xc0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/tokenLock.sol\":2043:2058  block.timestamp */\n  timestamp\n    /* \"contracts/tokenLock.sol\":2031:2058  startTime = block.timestamp */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/tokenLock.sol\":2111:2117  token_ */\n  dup3\n    /* \"contracts/tokenLock.sol\":2074:2147  TokenLockStart(beneficiary_, address(token_), block.timestamp, lockTime_) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/tokenLock.sol\":2089:2101  beneficiary_ */\n  dup3\n    /* \"contracts/tokenLock.sol\":2074:2147  TokenLockStart(beneficiary_, address(token_), block.timestamp, lockTime_) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xe5d7d4b5cb0219916a8be73968f7baf3c806fd018b0cc5598f5129436cf5c316\n    /* \"contracts/tokenLock.sol\":2120:2135  block.timestamp */\n  timestamp\n    /* \"contracts/tokenLock.sol\":2137:2146  lockTime_ */\n  dup5\n    /* \"contracts/tokenLock.sol\":2074:2147  TokenLockStart(beneficiary_, address(token_), block.timestamp, lockTime_) */\n  mload(0x40)\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/tokenLock.sol\":1747:2155  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/tokenLock.sol\":1097:2645  contract TokenLocker {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_17:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_37\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_18:\n    /* \"#utility.yul\":771:809   */\n  tag_39\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_17\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_40:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_19:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_42\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_18\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1139   */\ntag_20:\n    /* \"#utility.yul\":1090:1114   */\n  tag_44\n    /* \"#utility.yul\":1108:1113   */\n  dup2\n    /* \"#utility.yul\":1090:1114   */\n  tag_16\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1083:1088   */\n  dup2\n    /* \"#utility.yul\":1080:1115   */\n  eq\n    /* \"#utility.yul\":1070:1133   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1129:1130   */\n  0x00\n    /* \"#utility.yul\":1126:1127   */\n  dup1\n    /* \"#utility.yul\":1119:1131   */\n  revert\n    /* \"#utility.yul\":1070:1133   */\ntag_45:\n    /* \"#utility.yul\":1017:1139   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1145:1288   */\ntag_21:\n    /* \"#utility.yul\":1202:1207   */\n  0x00\n    /* \"#utility.yul\":1233:1239   */\n  dup2\n    /* \"#utility.yul\":1227:1240   */\n  mload\n    /* \"#utility.yul\":1218:1240   */\n  swap1\n  pop\n    /* \"#utility.yul\":1249:1282   */\n  tag_47\n    /* \"#utility.yul\":1276:1281   */\n  dup2\n    /* \"#utility.yul\":1249:1282   */\n  tag_20\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1145:1288   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1294:1371   */\ntag_22:\n    /* \"#utility.yul\":1331:1338   */\n  0x00\n    /* \"#utility.yul\":1360:1365   */\n  dup2\n    /* \"#utility.yul\":1349:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1294:1371   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1499   */\ntag_23:\n    /* \"#utility.yul\":1450:1474   */\n  tag_50\n    /* \"#utility.yul\":1468:1473   */\n  dup2\n    /* \"#utility.yul\":1450:1474   */\n  tag_22\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1443:1448   */\n  dup2\n    /* \"#utility.yul\":1440:1475   */\n  eq\n    /* \"#utility.yul\":1430:1493   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1489:1490   */\n  0x00\n    /* \"#utility.yul\":1486:1487   */\n  dup1\n    /* \"#utility.yul\":1479:1491   */\n  revert\n    /* \"#utility.yul\":1430:1493   */\ntag_51:\n    /* \"#utility.yul\":1377:1499   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1505:1648   */\ntag_24:\n    /* \"#utility.yul\":1562:1567   */\n  0x00\n    /* \"#utility.yul\":1593:1599   */\n  dup2\n    /* \"#utility.yul\":1587:1600   */\n  mload\n    /* \"#utility.yul\":1578:1600   */\n  swap1\n  pop\n    /* \"#utility.yul\":1609:1642   */\n  tag_53\n    /* \"#utility.yul\":1636:1641   */\n  dup2\n    /* \"#utility.yul\":1609:1642   */\n  tag_23\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1505:1648   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1654:2345   */\ntag_3:\n    /* \"#utility.yul\":1756:1762   */\n  0x00\n    /* \"#utility.yul\":1764:1770   */\n  dup1\n    /* \"#utility.yul\":1772:1778   */\n  0x00\n    /* \"#utility.yul\":1821:1823   */\n  0x60\n    /* \"#utility.yul\":1809:1818   */\n  dup5\n    /* \"#utility.yul\":1800:1807   */\n  dup7\n    /* \"#utility.yul\":1796:1819   */\n  sub\n    /* \"#utility.yul\":1792:1824   */\n  slt\n    /* \"#utility.yul\":1789:1908   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1827:1906   */\n  tag_56\n  tag_13\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1789:1908   */\ntag_55:\n    /* \"#utility.yul\":1947:1948   */\n  0x00\n    /* \"#utility.yul\":1972:2050   */\n  tag_57\n    /* \"#utility.yul\":2042:2049   */\n  dup7\n    /* \"#utility.yul\":2033:2039   */\n  dup3\n    /* \"#utility.yul\":2022:2031   */\n  dup8\n    /* \"#utility.yul\":2018:2040   */\n  add\n    /* \"#utility.yul\":1972:2050   */\n  tag_19\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1962:2050   */\n  swap4\n  pop\n    /* \"#utility.yul\":1918:2060   */\n  pop\n    /* \"#utility.yul\":2099:2101   */\n  0x20\n    /* \"#utility.yul\":2125:2189   */\n  tag_58\n    /* \"#utility.yul\":2181:2188   */\n  dup7\n    /* \"#utility.yul\":2172:2178   */\n  dup3\n    /* \"#utility.yul\":2161:2170   */\n  dup8\n    /* \"#utility.yul\":2157:2179   */\n  add\n    /* \"#utility.yul\":2125:2189   */\n  tag_21\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2115:2189   */\n  swap3\n  pop\n    /* \"#utility.yul\":2070:2199   */\n  pop\n    /* \"#utility.yul\":2238:2240   */\n  0x40\n    /* \"#utility.yul\":2264:2328   */\n  tag_59\n    /* \"#utility.yul\":2320:2327   */\n  dup7\n    /* \"#utility.yul\":2311:2317   */\n  dup3\n    /* \"#utility.yul\":2300:2309   */\n  dup8\n    /* \"#utility.yul\":2296:2318   */\n  add\n    /* \"#utility.yul\":2264:2328   */\n  tag_24\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2254:2328   */\n  swap2\n  pop\n    /* \"#utility.yul\":2209:2338   */\n  pop\n    /* \"#utility.yul\":1654:2345   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2351:2520   */\ntag_25:\n    /* \"#utility.yul\":2435:2446   */\n  0x00\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2464:2467   */\n  dup3\n    /* \"#utility.yul\":2457:2476   */\n  mstore\n    /* \"#utility.yul\":2509:2513   */\n  0x20\n    /* \"#utility.yul\":2504:2507   */\n  dup3\n    /* \"#utility.yul\":2500:2514   */\n  add\n    /* \"#utility.yul\":2485:2514   */\n  swap1\n  pop\n    /* \"#utility.yul\":2351:2520   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2526:2755   */\ntag_26:\n    /* \"#utility.yul\":2666:2700   */\n  0x546f6b656e4c6f636b3a206c6f636b2074696d652073686f756c642067726561\n    /* \"#utility.yul\":2662:2663   */\n  0x00\n    /* \"#utility.yul\":2654:2660   */\n  dup3\n    /* \"#utility.yul\":2650:2664   */\n  add\n    /* \"#utility.yul\":2643:2701   */\n  mstore\n    /* \"#utility.yul\":2735:2747   */\n  0x746572207468616e203000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2730:2732   */\n  0x20\n    /* \"#utility.yul\":2722:2728   */\n  dup3\n    /* \"#utility.yul\":2718:2733   */\n  add\n    /* \"#utility.yul\":2711:2748   */\n  mstore\n    /* \"#utility.yul\":2526:2755   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2761:3127   */\ntag_27:\n    /* \"#utility.yul\":2903:2906   */\n  0x00\n    /* \"#utility.yul\":2924:2991   */\n  tag_63\n    /* \"#utility.yul\":2988:2990   */\n  0x2a\n    /* \"#utility.yul\":2983:2986   */\n  dup4\n    /* \"#utility.yul\":2924:2991   */\n  tag_25\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2917:2991   */\n  swap2\n  pop\n    /* \"#utility.yul\":3000:3093   */\n  tag_64\n    /* \"#utility.yul\":3089:3092   */\n  dup3\n    /* \"#utility.yul\":3000:3093   */\n  tag_26\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":3118:3120   */\n  0x40\n    /* \"#utility.yul\":3113:3116   */\n  dup3\n    /* \"#utility.yul\":3109:3121   */\n  add\n    /* \"#utility.yul\":3102:3121   */\n  swap1\n  pop\n    /* \"#utility.yul\":2761:3127   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3133:3552   */\ntag_8:\n    /* \"#utility.yul\":3299:3303   */\n  0x00\n    /* \"#utility.yul\":3337:3339   */\n  0x20\n    /* \"#utility.yul\":3326:3335   */\n  dup3\n    /* \"#utility.yul\":3322:3340   */\n  add\n    /* \"#utility.yul\":3314:3340   */\n  swap1\n  pop\n    /* \"#utility.yul\":3386:3395   */\n  dup2\n    /* \"#utility.yul\":3380:3384   */\n  dup2\n    /* \"#utility.yul\":3376:3396   */\n  sub\n    /* \"#utility.yul\":3372:3373   */\n  0x00\n    /* \"#utility.yul\":3361:3370   */\n  dup4\n    /* \"#utility.yul\":3357:3374   */\n  add\n    /* \"#utility.yul\":3350:3397   */\n  mstore\n    /* \"#utility.yul\":3414:3545   */\n  tag_66\n    /* \"#utility.yul\":3540:3544   */\n  dup2\n    /* \"#utility.yul\":3414:3545   */\n  tag_27\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":3406:3545   */\n  swap1\n  pop\n    /* \"#utility.yul\":3133:3552   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3558:3676   */\ntag_28:\n    /* \"#utility.yul\":3645:3669   */\n  tag_68\n    /* \"#utility.yul\":3663:3668   */\n  dup2\n    /* \"#utility.yul\":3645:3669   */\n  tag_22\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3640:3643   */\n  dup3\n    /* \"#utility.yul\":3633:3670   */\n  mstore\n    /* \"#utility.yul\":3558:3676   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3682:4014   */\ntag_10:\n    /* \"#utility.yul\":3803:3807   */\n  0x00\n    /* \"#utility.yul\":3841:3843   */\n  0x40\n    /* \"#utility.yul\":3830:3839   */\n  dup3\n    /* \"#utility.yul\":3826:3844   */\n  add\n    /* \"#utility.yul\":3818:3844   */\n  swap1\n  pop\n    /* \"#utility.yul\":3854:3925   */\n  tag_70\n    /* \"#utility.yul\":3922:3923   */\n  0x00\n    /* \"#utility.yul\":3911:3920   */\n  dup4\n    /* \"#utility.yul\":3907:3924   */\n  add\n    /* \"#utility.yul\":3898:3904   */\n  dup6\n    /* \"#utility.yul\":3854:3925   */\n  tag_28\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3935:4007   */\n  tag_71\n    /* \"#utility.yul\":4003:4005   */\n  0x20\n    /* \"#utility.yul\":3992:4001   */\n  dup4\n    /* \"#utility.yul\":3988:4006   */\n  add\n    /* \"#utility.yul\":3979:3985   */\n  dup5\n    /* \"#utility.yul\":3935:4007   */\n  tag_28\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3682:4014   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/tokenLock.sol\":1097:2645  contract TokenLocker {... */\ntag_11:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x5192c7f75669ca0287240345ac757ca313b6b35719d108d92e530d5617eb4a60\")\n  0x00\n  assignImmutable(\"0x3ad1041c7fca4b981ec9df1cdec68238bc49ef0c518c8c6bf20002aeca8bde61\")\n  0x00\n  assignImmutable(\"0x91bb576fe1119b95673556c97f460f2730aaf5e50b5a2b3c73c380bf4786ebe1\")\n  0x00\n  assignImmutable(\"0x51432b6f6ffff9c0d91073ef7f23a4f639ef505c3fc71bae7794b27877f54eff\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokenLock.sol\":1097:2645  contract TokenLocker {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0d668087\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x86d1a69f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/tokenLock.sol\":1523:1556  uint256 public immutable lockTime */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenLock.sol\":1452:1488  address public immutable beneficiary */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenLock.sol\":1592:1626  uint256 public immutable startTime */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenLock.sol\":2254:2642  function release() public {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/tokenLock.sol\":1388:1417  IERC20 public immutable token */\n    tag_7:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenLock.sol\":1523:1556  uint256 public immutable lockTime */\n    tag_9:\n      immutable(\"0x3ad1041c7fca4b981ec9df1cdec68238bc49ef0c518c8c6bf20002aeca8bde61\")\n      dup2\n      jump\t// out\n        /* \"contracts/tokenLock.sol\":1452:1488  address public immutable beneficiary */\n    tag_13:\n      immutable(\"0x91bb576fe1119b95673556c97f460f2730aaf5e50b5a2b3c73c380bf4786ebe1\")\n      dup2\n      jump\t// out\n        /* \"contracts/tokenLock.sol\":1592:1626  uint256 public immutable startTime */\n    tag_17:\n      immutable(\"0x5192c7f75669ca0287240345ac757ca313b6b35719d108d92e530d5617eb4a60\")\n      dup2\n      jump\t// out\n        /* \"contracts/tokenLock.sol\":2254:2642  function release() public {... */\n    tag_20:\n        /* \"contracts/tokenLock.sol\":2330:2338  lockTime */\n      immutable(\"0x3ad1041c7fca4b981ec9df1cdec68238bc49ef0c518c8c6bf20002aeca8bde61\")\n        /* \"contracts/tokenLock.sol\":2318:2327  startTime */\n      immutable(\"0x5192c7f75669ca0287240345ac757ca313b6b35719d108d92e530d5617eb4a60\")\n        /* \"contracts/tokenLock.sol\":2318:2338  startTime + lockTime */\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"contracts/tokenLock.sol\":2299:2314  block.timestamp */\n      timestamp\n        /* \"contracts/tokenLock.sol\":2299:2338  block.timestamp >= startTime + lockTime */\n      lt\n      iszero\n        /* \"contracts/tokenLock.sol\":2291:2390  require(block.timestamp >= startTime + lockTime, \"TokenLock: current time is before release time.\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"contracts/tokenLock.sol\":2401:2415  uint256 amount */\n      0x00\n        /* \"contracts/tokenLock.sol\":2418:2423  token */\n      immutable(\"0x51432b6f6ffff9c0d91073ef7f23a4f639ef505c3fc71bae7794b27877f54eff\")\n        /* \"contracts/tokenLock.sol\":2418:2433  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/tokenLock.sol\":2442:2446  this */\n      address\n        /* \"contracts/tokenLock.sol\":2418:2448  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"contracts/tokenLock.sol\":2401:2448  uint256 amount = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/tokenLock.sol\":2476:2477  0 */\n      0x00\n        /* \"contracts/tokenLock.sol\":2467:2473  amount */\n      dup2\n        /* \"contracts/tokenLock.sol\":2467:2477  amount > 0 */\n      gt\n        /* \"contracts/tokenLock.sol\":2459:2513  require(amount > 0, \"TokenLock: no tokens to release\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"contracts/tokenLock.sol\":2524:2529  token */\n      immutable(\"0x51432b6f6ffff9c0d91073ef7f23a4f639ef505c3fc71bae7794b27877f54eff\")\n        /* \"contracts/tokenLock.sol\":2524:2538  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/tokenLock.sol\":2539:2550  beneficiary */\n      immutable(\"0x91bb576fe1119b95673556c97f460f2730aaf5e50b5a2b3c73c380bf4786ebe1\")\n        /* \"contracts/tokenLock.sol\":2552:2558  amount */\n      dup4\n        /* \"contracts/tokenLock.sol\":2524:2559  token.transfer(beneficiary, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap3\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_42:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      pop\n        /* \"contracts/tokenLock.sol\":2603:2607  this */\n      address\n        /* \"contracts/tokenLock.sol\":2575:2634  Release(msg.sender, address(this), block.timestamp, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenLock.sol\":2583:2593  msg.sender */\n      caller\n        /* \"contracts/tokenLock.sol\":2575:2634  Release(msg.sender, address(this), block.timestamp, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x10b55f01b1cfe0feeb7d144f66162661602d8e73256499b6d8342aac37ff0679\n        /* \"contracts/tokenLock.sol\":2610:2625  block.timestamp */\n      timestamp\n        /* \"contracts/tokenLock.sol\":2627:2633  amount */\n      dup5\n        /* \"contracts/tokenLock.sol\":2575:2634  Release(msg.sender, address(this), block.timestamp, amount) */\n      mload(0x40)\n      tag_45\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokenLock.sol\":2280:2642  {... */\n      pop\n        /* \"contracts/tokenLock.sol\":2254:2642  function release() public {... */\n      jump\t// out\n        /* \"contracts/tokenLock.sol\":1388:1417  IERC20 public immutable token */\n    tag_22:\n      immutable(\"0x51432b6f6ffff9c0d91073ef7f23a4f639ef505c3fc71bae7794b27877f54eff\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_47:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_48:\n        /* \"#utility.yul\":177:201   */\n      tag_74\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_47\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_11:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_76\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_48\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_49:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_50:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_79\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_49\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_51:\n        /* \"#utility.yul\":763:787   */\n      tag_81\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_50\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_15:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_83\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_51\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1088   */\n    tag_52:\n        /* \"#utility.yul\":1056:1059   */\n      0x00\n        /* \"#utility.yul\":1077:1082   */\n      dup2\n        /* \"#utility.yul\":1070:1082   */\n      swap1\n      pop\n        /* \"#utility.yul\":1028:1088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1094:1236   */\n    tag_53:\n        /* \"#utility.yul\":1144:1153   */\n      0x00\n        /* \"#utility.yul\":1177:1230   */\n      tag_86\n        /* \"#utility.yul\":1195:1229   */\n      tag_87\n        /* \"#utility.yul\":1204:1228   */\n      tag_88\n        /* \"#utility.yul\":1222:1227   */\n      dup5\n        /* \"#utility.yul\":1204:1228   */\n      tag_49\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1195:1229   */\n      tag_52\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1177:1230   */\n      tag_49\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1164:1230   */\n      swap1\n      pop\n        /* \"#utility.yul\":1094:1236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1368   */\n    tag_54:\n        /* \"#utility.yul\":1292:1301   */\n      0x00\n        /* \"#utility.yul\":1325:1362   */\n      tag_90\n        /* \"#utility.yul\":1356:1361   */\n      dup3\n        /* \"#utility.yul\":1325:1362   */\n      tag_53\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1312:1362   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1374:1514   */\n    tag_55:\n        /* \"#utility.yul\":1438:1447   */\n      0x00\n        /* \"#utility.yul\":1471:1508   */\n      tag_92\n        /* \"#utility.yul\":1502:1507   */\n      dup3\n        /* \"#utility.yul\":1471:1508   */\n      tag_54\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1458:1508   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1520:1679   */\n    tag_56:\n        /* \"#utility.yul\":1621:1672   */\n      tag_94\n        /* \"#utility.yul\":1666:1671   */\n      dup2\n        /* \"#utility.yul\":1621:1672   */\n      tag_55\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1616:1619   */\n      dup3\n        /* \"#utility.yul\":1609:1673   */\n      mstore\n        /* \"#utility.yul\":1520:1679   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1685:1935   */\n    tag_24:\n        /* \"#utility.yul\":1792:1796   */\n      0x00\n        /* \"#utility.yul\":1830:1832   */\n      0x20\n        /* \"#utility.yul\":1819:1828   */\n      dup3\n        /* \"#utility.yul\":1815:1833   */\n      add\n        /* \"#utility.yul\":1807:1833   */\n      swap1\n      pop\n        /* \"#utility.yul\":1843:1928   */\n      tag_96\n        /* \"#utility.yul\":1925:1926   */\n      0x00\n        /* \"#utility.yul\":1914:1923   */\n      dup4\n        /* \"#utility.yul\":1910:1927   */\n      add\n        /* \"#utility.yul\":1901:1907   */\n      dup5\n        /* \"#utility.yul\":1843:1928   */\n      tag_56\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1685:1935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1941:2121   */\n    tag_57:\n        /* \"#utility.yul\":1989:2066   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1986:1987   */\n      0x00\n        /* \"#utility.yul\":1979:2067   */\n      mstore\n        /* \"#utility.yul\":2086:2090   */\n      0x11\n        /* \"#utility.yul\":2083:2084   */\n      0x04\n        /* \"#utility.yul\":2076:2091   */\n      mstore\n        /* \"#utility.yul\":2110:2114   */\n      0x24\n        /* \"#utility.yul\":2107:2108   */\n      0x00\n        /* \"#utility.yul\":2100:2115   */\n      revert\n        /* \"#utility.yul\":2127:2318   */\n    tag_27:\n        /* \"#utility.yul\":2167:2170   */\n      0x00\n        /* \"#utility.yul\":2186:2206   */\n      tag_99\n        /* \"#utility.yul\":2204:2205   */\n      dup3\n        /* \"#utility.yul\":2186:2206   */\n      tag_47\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2181:2206   */\n      swap2\n      pop\n        /* \"#utility.yul\":2220:2240   */\n      tag_100\n        /* \"#utility.yul\":2238:2239   */\n      dup4\n        /* \"#utility.yul\":2220:2240   */\n      tag_47\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2215:2240   */\n      swap3\n      pop\n        /* \"#utility.yul\":2263:2264   */\n      dup3\n        /* \"#utility.yul\":2260:2261   */\n      dup3\n        /* \"#utility.yul\":2256:2265   */\n      add\n        /* \"#utility.yul\":2249:2265   */\n      swap1\n      pop\n        /* \"#utility.yul\":2284:2287   */\n      dup1\n        /* \"#utility.yul\":2281:2282   */\n      dup3\n        /* \"#utility.yul\":2278:2288   */\n      gt\n        /* \"#utility.yul\":2275:2311   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":2291:2309   */\n      tag_102\n      tag_57\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2275:2311   */\n    tag_101:\n        /* \"#utility.yul\":2127:2318   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2324:2493   */\n    tag_58:\n        /* \"#utility.yul\":2408:2419   */\n      0x00\n        /* \"#utility.yul\":2442:2448   */\n      dup3\n        /* \"#utility.yul\":2437:2440   */\n      dup3\n        /* \"#utility.yul\":2430:2449   */\n      mstore\n        /* \"#utility.yul\":2482:2486   */\n      0x20\n        /* \"#utility.yul\":2477:2480   */\n      dup3\n        /* \"#utility.yul\":2473:2487   */\n      add\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2324:2493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2499:2733   */\n    tag_59:\n        /* \"#utility.yul\":2639:2673   */\n      0x546f6b656e4c6f636b3a2063757272656e742074696d65206973206265666f72\n        /* \"#utility.yul\":2635:2636   */\n      0x00\n        /* \"#utility.yul\":2627:2633   */\n      dup3\n        /* \"#utility.yul\":2623:2637   */\n      add\n        /* \"#utility.yul\":2616:2674   */\n      mstore\n        /* \"#utility.yul\":2708:2725   */\n      0x652072656c656173652074696d652e0000000000000000000000000000000000\n        /* \"#utility.yul\":2703:2705   */\n      0x20\n        /* \"#utility.yul\":2695:2701   */\n      dup3\n        /* \"#utility.yul\":2691:2706   */\n      add\n        /* \"#utility.yul\":2684:2726   */\n      mstore\n        /* \"#utility.yul\":2499:2733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2739:3105   */\n    tag_60:\n        /* \"#utility.yul\":2881:2884   */\n      0x00\n        /* \"#utility.yul\":2902:2969   */\n      tag_106\n        /* \"#utility.yul\":2966:2968   */\n      0x2f\n        /* \"#utility.yul\":2961:2964   */\n      dup4\n        /* \"#utility.yul\":2902:2969   */\n      tag_58\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2895:2969   */\n      swap2\n      pop\n        /* \"#utility.yul\":2978:3071   */\n      tag_107\n        /* \"#utility.yul\":3067:3070   */\n      dup3\n        /* \"#utility.yul\":2978:3071   */\n      tag_59\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3096:3098   */\n      0x40\n        /* \"#utility.yul\":3091:3094   */\n      dup3\n        /* \"#utility.yul\":3087:3099   */\n      add\n        /* \"#utility.yul\":3080:3099   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:3105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3111:3530   */\n    tag_30:\n        /* \"#utility.yul\":3277:3281   */\n      0x00\n        /* \"#utility.yul\":3315:3317   */\n      0x20\n        /* \"#utility.yul\":3304:3313   */\n      dup3\n        /* \"#utility.yul\":3300:3318   */\n      add\n        /* \"#utility.yul\":3292:3318   */\n      swap1\n      pop\n        /* \"#utility.yul\":3364:3373   */\n      dup2\n        /* \"#utility.yul\":3358:3362   */\n      dup2\n        /* \"#utility.yul\":3354:3374   */\n      sub\n        /* \"#utility.yul\":3350:3351   */\n      0x00\n        /* \"#utility.yul\":3339:3348   */\n      dup4\n        /* \"#utility.yul\":3335:3352   */\n      add\n        /* \"#utility.yul\":3328:3375   */\n      mstore\n        /* \"#utility.yul\":3392:3523   */\n      tag_109\n        /* \"#utility.yul\":3518:3522   */\n      dup2\n        /* \"#utility.yul\":3392:3523   */\n      tag_60\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3384:3523   */\n      swap1\n      pop\n        /* \"#utility.yul\":3111:3530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3617:3734   */\n    tag_62:\n        /* \"#utility.yul\":3726:3727   */\n      0x00\n        /* \"#utility.yul\":3723:3724   */\n      dup1\n        /* \"#utility.yul\":3716:3728   */\n      revert\n        /* \"#utility.yul\":3863:3985   */\n    tag_64:\n        /* \"#utility.yul\":3936:3960   */\n      tag_114\n        /* \"#utility.yul\":3954:3959   */\n      dup2\n        /* \"#utility.yul\":3936:3960   */\n      tag_47\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3929:3934   */\n      dup2\n        /* \"#utility.yul\":3926:3961   */\n      eq\n        /* \"#utility.yul\":3916:3979   */\n      tag_115\n      jumpi\n        /* \"#utility.yul\":3975:3976   */\n      0x00\n        /* \"#utility.yul\":3972:3973   */\n      dup1\n        /* \"#utility.yul\":3965:3977   */\n      revert\n        /* \"#utility.yul\":3916:3979   */\n    tag_115:\n        /* \"#utility.yul\":3863:3985   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3991:4134   */\n    tag_65:\n        /* \"#utility.yul\":4048:4053   */\n      0x00\n        /* \"#utility.yul\":4079:4085   */\n      dup2\n        /* \"#utility.yul\":4073:4086   */\n      mload\n        /* \"#utility.yul\":4064:4086   */\n      swap1\n      pop\n        /* \"#utility.yul\":4095:4128   */\n      tag_117\n        /* \"#utility.yul\":4122:4127   */\n      dup2\n        /* \"#utility.yul\":4095:4128   */\n      tag_64\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":3991:4134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4140:4491   */\n    tag_35:\n        /* \"#utility.yul\":4210:4216   */\n      0x00\n        /* \"#utility.yul\":4259:4261   */\n      0x20\n        /* \"#utility.yul\":4247:4256   */\n      dup3\n        /* \"#utility.yul\":4238:4245   */\n      dup5\n        /* \"#utility.yul\":4234:4257   */\n      sub\n        /* \"#utility.yul\":4230:4262   */\n      slt\n        /* \"#utility.yul\":4227:4346   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":4265:4344   */\n      tag_120\n      tag_62\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":4227:4346   */\n    tag_119:\n        /* \"#utility.yul\":4385:4386   */\n      0x00\n        /* \"#utility.yul\":4410:4474   */\n      tag_121\n        /* \"#utility.yul\":4466:4473   */\n      dup5\n        /* \"#utility.yul\":4457:4463   */\n      dup3\n        /* \"#utility.yul\":4446:4455   */\n      dup6\n        /* \"#utility.yul\":4442:4464   */\n      add\n        /* \"#utility.yul\":4410:4474   */\n      tag_65\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4400:4474   */\n      swap2\n      pop\n        /* \"#utility.yul\":4356:4484   */\n      pop\n        /* \"#utility.yul\":4140:4491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4497:4678   */\n    tag_66:\n        /* \"#utility.yul\":4637:4670   */\n      0x546f6b656e4c6f636b3a206e6f20746f6b656e7320746f2072656c6561736500\n        /* \"#utility.yul\":4633:4634   */\n      0x00\n        /* \"#utility.yul\":4625:4631   */\n      dup3\n        /* \"#utility.yul\":4621:4635   */\n      add\n        /* \"#utility.yul\":4614:4671   */\n      mstore\n        /* \"#utility.yul\":4497:4678   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4684:5050   */\n    tag_67:\n        /* \"#utility.yul\":4826:4829   */\n      0x00\n        /* \"#utility.yul\":4847:4914   */\n      tag_124\n        /* \"#utility.yul\":4911:4913   */\n      0x1f\n        /* \"#utility.yul\":4906:4909   */\n      dup4\n        /* \"#utility.yul\":4847:4914   */\n      tag_58\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4840:4914   */\n      swap2\n      pop\n        /* \"#utility.yul\":4923:5016   */\n      tag_125\n        /* \"#utility.yul\":5012:5015   */\n      dup3\n        /* \"#utility.yul\":4923:5016   */\n      tag_66\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":5041:5043   */\n      0x20\n        /* \"#utility.yul\":5036:5039   */\n      dup3\n        /* \"#utility.yul\":5032:5044   */\n      add\n        /* \"#utility.yul\":5025:5044   */\n      swap1\n      pop\n        /* \"#utility.yul\":4684:5050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5056:5475   */\n    tag_38:\n        /* \"#utility.yul\":5222:5226   */\n      0x00\n        /* \"#utility.yul\":5260:5262   */\n      0x20\n        /* \"#utility.yul\":5249:5258   */\n      dup3\n        /* \"#utility.yul\":5245:5263   */\n      add\n        /* \"#utility.yul\":5237:5263   */\n      swap1\n      pop\n        /* \"#utility.yul\":5309:5318   */\n      dup2\n        /* \"#utility.yul\":5303:5307   */\n      dup2\n        /* \"#utility.yul\":5299:5319   */\n      sub\n        /* \"#utility.yul\":5295:5296   */\n      0x00\n        /* \"#utility.yul\":5284:5293   */\n      dup4\n        /* \"#utility.yul\":5280:5297   */\n      add\n        /* \"#utility.yul\":5273:5320   */\n      mstore\n        /* \"#utility.yul\":5337:5468   */\n      tag_127\n        /* \"#utility.yul\":5463:5467   */\n      dup2\n        /* \"#utility.yul\":5337:5468   */\n      tag_67\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5329:5468   */\n      swap1\n      pop\n        /* \"#utility.yul\":5056:5475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5481:5813   */\n    tag_40:\n        /* \"#utility.yul\":5602:5606   */\n      0x00\n        /* \"#utility.yul\":5640:5642   */\n      0x40\n        /* \"#utility.yul\":5629:5638   */\n      dup3\n        /* \"#utility.yul\":5625:5643   */\n      add\n        /* \"#utility.yul\":5617:5643   */\n      swap1\n      pop\n        /* \"#utility.yul\":5653:5724   */\n      tag_129\n        /* \"#utility.yul\":5721:5722   */\n      0x00\n        /* \"#utility.yul\":5710:5719   */\n      dup4\n        /* \"#utility.yul\":5706:5723   */\n      add\n        /* \"#utility.yul\":5697:5703   */\n      dup6\n        /* \"#utility.yul\":5653:5724   */\n      tag_51\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5734:5806   */\n      tag_130\n        /* \"#utility.yul\":5802:5804   */\n      0x20\n        /* \"#utility.yul\":5791:5800   */\n      dup4\n        /* \"#utility.yul\":5787:5805   */\n      add\n        /* \"#utility.yul\":5778:5784   */\n      dup5\n        /* \"#utility.yul\":5734:5806   */\n      tag_48\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5481:5813   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5819:5909   */\n    tag_68:\n        /* \"#utility.yul\":5853:5860   */\n      0x00\n        /* \"#utility.yul\":5896:5901   */\n      dup2\n        /* \"#utility.yul\":5889:5902   */\n      iszero\n        /* \"#utility.yul\":5882:5903   */\n      iszero\n        /* \"#utility.yul\":5871:5903   */\n      swap1\n      pop\n        /* \"#utility.yul\":5819:5909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5915:6031   */\n    tag_69:\n        /* \"#utility.yul\":5985:6006   */\n      tag_133\n        /* \"#utility.yul\":6000:6005   */\n      dup2\n        /* \"#utility.yul\":5985:6006   */\n      tag_68\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5978:5983   */\n      dup2\n        /* \"#utility.yul\":5975:6007   */\n      eq\n        /* \"#utility.yul\":5965:6025   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":6021:6022   */\n      0x00\n        /* \"#utility.yul\":6018:6019   */\n      dup1\n        /* \"#utility.yul\":6011:6023   */\n      revert\n        /* \"#utility.yul\":5965:6025   */\n    tag_134:\n        /* \"#utility.yul\":5915:6031   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6037:6174   */\n    tag_70:\n        /* \"#utility.yul\":6091:6096   */\n      0x00\n        /* \"#utility.yul\":6122:6128   */\n      dup2\n        /* \"#utility.yul\":6116:6129   */\n      mload\n        /* \"#utility.yul\":6107:6129   */\n      swap1\n      pop\n        /* \"#utility.yul\":6138:6168   */\n      tag_136\n        /* \"#utility.yul\":6162:6167   */\n      dup2\n        /* \"#utility.yul\":6138:6168   */\n      tag_69\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6037:6174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6525   */\n    tag_44:\n        /* \"#utility.yul\":6247:6253   */\n      0x00\n        /* \"#utility.yul\":6296:6298   */\n      0x20\n        /* \"#utility.yul\":6284:6293   */\n      dup3\n        /* \"#utility.yul\":6275:6282   */\n      dup5\n        /* \"#utility.yul\":6271:6294   */\n      sub\n        /* \"#utility.yul\":6267:6299   */\n      slt\n        /* \"#utility.yul\":6264:6383   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":6302:6381   */\n      tag_139\n      tag_62\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":6264:6383   */\n    tag_138:\n        /* \"#utility.yul\":6422:6423   */\n      0x00\n        /* \"#utility.yul\":6447:6508   */\n      tag_140\n        /* \"#utility.yul\":6500:6507   */\n      dup5\n        /* \"#utility.yul\":6491:6497   */\n      dup3\n        /* \"#utility.yul\":6480:6489   */\n      dup6\n        /* \"#utility.yul\":6476:6498   */\n      add\n        /* \"#utility.yul\":6447:6508   */\n      tag_70\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6437:6508   */\n      swap2\n      pop\n        /* \"#utility.yul\":6393:6518   */\n      pop\n        /* \"#utility.yul\":6180:6525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6531:6863   */\n    tag_46:\n        /* \"#utility.yul\":6652:6656   */\n      0x00\n        /* \"#utility.yul\":6690:6692   */\n      0x40\n        /* \"#utility.yul\":6679:6688   */\n      dup3\n        /* \"#utility.yul\":6675:6693   */\n      add\n        /* \"#utility.yul\":6667:6693   */\n      swap1\n      pop\n        /* \"#utility.yul\":6703:6774   */\n      tag_142\n        /* \"#utility.yul\":6771:6772   */\n      0x00\n        /* \"#utility.yul\":6760:6769   */\n      dup4\n        /* \"#utility.yul\":6756:6773   */\n      add\n        /* \"#utility.yul\":6747:6753   */\n      dup6\n        /* \"#utility.yul\":6703:6774   */\n      tag_48\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":6784:6856   */\n      tag_143\n        /* \"#utility.yul\":6852:6854   */\n      0x20\n        /* \"#utility.yul\":6841:6850   */\n      dup4\n        /* \"#utility.yul\":6837:6855   */\n      add\n        /* \"#utility.yul\":6828:6834   */\n      dup5\n        /* \"#utility.yul\":6784:6856   */\n      tag_48\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6531:6863   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207d9383e12836a0d90421b2109e14bca71cd635d8ccecbf2dcd1958825eb079d664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_864": {
									"entryPoint": null,
									"id": 864,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$729_fromMemory": {
									"entryPoint": 438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$729t_addresst_uint256_fromMemory": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$729": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$729": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4017:6",
										"nodeType": "YulBlock",
										"src": "0:4017:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "627:51:6",
													"nodeType": "YulBlock",
													"src": "627:51:6",
													"statements": [
														{
															"nativeSrc": "637:35:6",
															"nodeType": "YulAssignment",
															"src": "637:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:6"
																},
																"nativeSrc": "648:24:6",
																"nodeType": "YulFunctionCall",
																"src": "648:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$729",
												"nativeSrc": "568:110:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:6",
														"nodeType": "YulTypedName",
														"src": "609:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:6",
														"nodeType": "YulTypedName",
														"src": "619:7:6",
														"type": ""
													}
												],
												"src": "568:110:6"
											},
											{
												"body": {
													"nativeSrc": "741:93:6",
													"nodeType": "YulBlock",
													"src": "741:93:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:6",
																"nodeType": "YulBlock",
																"src": "812:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:6",
																					"nodeType": "YulLiteral",
																					"src": "821:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:6",
																					"nodeType": "YulLiteral",
																					"src": "824:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:6"
																			},
																			"nativeSrc": "814:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:6"
																		},
																		"nativeSrc": "814:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$729",
																					"nativeSrc": "771:31:6",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:6"
																				},
																				"nativeSrc": "771:38:6",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:6"
																		},
																		"nativeSrc": "761:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:6"
																},
																"nativeSrc": "754:57:6",
																"nodeType": "YulFunctionCall",
																"src": "754:57:6"
															},
															"nativeSrc": "751:77:6",
															"nodeType": "YulIf",
															"src": "751:77:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$729",
												"nativeSrc": "684:150:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:6",
														"nodeType": "YulTypedName",
														"src": "734:5:6",
														"type": ""
													}
												],
												"src": "684:150:6"
											},
											{
												"body": {
													"nativeSrc": "917:94:6",
													"nodeType": "YulBlock",
													"src": "917:94:6",
													"statements": [
														{
															"nativeSrc": "927:22:6",
															"nodeType": "YulAssignment",
															"src": "927:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:6"
																},
																"nativeSrc": "936:13:6",
																"nodeType": "YulFunctionCall",
																"src": "936:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$729",
																	"nativeSrc": "958:40:6",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:6"
																},
																"nativeSrc": "958:47:6",
																"nodeType": "YulFunctionCall",
																"src": "958:47:6"
															},
															"nativeSrc": "958:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
												"nativeSrc": "840:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:6",
														"nodeType": "YulTypedName",
														"src": "895:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:6",
														"nodeType": "YulTypedName",
														"src": "903:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:6",
														"nodeType": "YulTypedName",
														"src": "911:5:6",
														"type": ""
													}
												],
												"src": "840:171:6"
											},
											{
												"body": {
													"nativeSrc": "1060:79:6",
													"nodeType": "YulBlock",
													"src": "1060:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1117:16:6",
																"nodeType": "YulBlock",
																"src": "1117:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1126:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1129:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1129:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1119:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1119:6:6"
																			},
																			"nativeSrc": "1119:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1119:12:6"
																		},
																		"nativeSrc": "1119:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1119:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1083:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1083:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1108:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1108:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1090:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1090:17:6"
																				},
																				"nativeSrc": "1090:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1090:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1080:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1080:2:6"
																		},
																		"nativeSrc": "1080:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1080:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1073:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1073:6:6"
																},
																"nativeSrc": "1073:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1073:43:6"
															},
															"nativeSrc": "1070:63:6",
															"nodeType": "YulIf",
															"src": "1070:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1017:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1053:5:6",
														"nodeType": "YulTypedName",
														"src": "1053:5:6",
														"type": ""
													}
												],
												"src": "1017:122:6"
											},
											{
												"body": {
													"nativeSrc": "1208:80:6",
													"nodeType": "YulBlock",
													"src": "1208:80:6",
													"statements": [
														{
															"nativeSrc": "1218:22:6",
															"nodeType": "YulAssignment",
															"src": "1218:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1233:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1233:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1227:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1227:5:6"
																},
																"nativeSrc": "1227:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1227:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1218:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1218:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1276:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1276:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1249:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1249:26:6"
																},
																"nativeSrc": "1249:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1249:33:6"
															},
															"nativeSrc": "1249:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1249:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1145:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1186:6:6",
														"nodeType": "YulTypedName",
														"src": "1186:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1194:3:6",
														"nodeType": "YulTypedName",
														"src": "1194:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1202:5:6",
														"nodeType": "YulTypedName",
														"src": "1202:5:6",
														"type": ""
													}
												],
												"src": "1145:143:6"
											},
											{
												"body": {
													"nativeSrc": "1339:32:6",
													"nodeType": "YulBlock",
													"src": "1339:32:6",
													"statements": [
														{
															"nativeSrc": "1349:16:6",
															"nodeType": "YulAssignment",
															"src": "1349:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1360:5:6",
																"nodeType": "YulIdentifier",
																"src": "1360:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1349:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1349:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1294:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1321:5:6",
														"nodeType": "YulTypedName",
														"src": "1321:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1331:7:6",
														"nodeType": "YulTypedName",
														"src": "1331:7:6",
														"type": ""
													}
												],
												"src": "1294:77:6"
											},
											{
												"body": {
													"nativeSrc": "1420:79:6",
													"nodeType": "YulBlock",
													"src": "1420:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1477:16:6",
																"nodeType": "YulBlock",
																"src": "1477:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1486:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1486:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1489:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1489:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1479:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1479:6:6"
																			},
																			"nativeSrc": "1479:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1479:12:6"
																		},
																		"nativeSrc": "1479:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1479:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1443:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1443:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1468:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1468:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1450:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1450:17:6"
																				},
																				"nativeSrc": "1450:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1450:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1440:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1440:2:6"
																		},
																		"nativeSrc": "1440:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1440:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:6"
																},
																"nativeSrc": "1433:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1433:43:6"
															},
															"nativeSrc": "1430:63:6",
															"nodeType": "YulIf",
															"src": "1430:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1377:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1413:5:6",
														"nodeType": "YulTypedName",
														"src": "1413:5:6",
														"type": ""
													}
												],
												"src": "1377:122:6"
											},
											{
												"body": {
													"nativeSrc": "1568:80:6",
													"nodeType": "YulBlock",
													"src": "1568:80:6",
													"statements": [
														{
															"nativeSrc": "1578:22:6",
															"nodeType": "YulAssignment",
															"src": "1578:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1593:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1593:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1587:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1587:5:6"
																},
																"nativeSrc": "1587:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1587:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1578:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1636:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1636:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1609:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1609:26:6"
																},
																"nativeSrc": "1609:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1609:33:6"
															},
															"nativeSrc": "1609:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1609:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1505:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1546:6:6",
														"nodeType": "YulTypedName",
														"src": "1546:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1554:3:6",
														"nodeType": "YulTypedName",
														"src": "1554:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1562:5:6",
														"nodeType": "YulTypedName",
														"src": "1562:5:6",
														"type": ""
													}
												],
												"src": "1505:143:6"
											},
											{
												"body": {
													"nativeSrc": "1779:566:6",
													"nodeType": "YulBlock",
													"src": "1779:566:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1825:83:6",
																"nodeType": "YulBlock",
																"src": "1825:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1827:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1827:77:6"
																			},
																			"nativeSrc": "1827:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1827:79:6"
																		},
																		"nativeSrc": "1827:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1827:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1800:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1800:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1809:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1809:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1796:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1796:3:6"
																		},
																		"nativeSrc": "1796:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1796:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1821:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1821:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1792:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1792:3:6"
																},
																"nativeSrc": "1792:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1792:32:6"
															},
															"nativeSrc": "1789:119:6",
															"nodeType": "YulIf",
															"src": "1789:119:6"
														},
														{
															"nativeSrc": "1918:142:6",
															"nodeType": "YulBlock",
															"src": "1918:142:6",
															"statements": [
																{
																	"nativeSrc": "1933:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1933:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1947:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1947:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1937:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1937:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1962:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1962:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2022:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2022:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2033:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2033:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2018:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2018:3:6"
																				},
																				"nativeSrc": "2018:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2018:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2042:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2042:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
																			"nativeSrc": "1972:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1972:45:6"
																		},
																		"nativeSrc": "1972:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1972:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1962:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1962:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2070:129:6",
															"nodeType": "YulBlock",
															"src": "2070:129:6",
															"statements": [
																{
																	"nativeSrc": "2085:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2085:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2099:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2099:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2089:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2089:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2115:74:6",
																	"nodeType": "YulAssignment",
																	"src": "2115:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2161:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2161:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2172:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2172:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2157:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2157:3:6"
																				},
																				"nativeSrc": "2157:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2157:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2181:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2181:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2125:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "2125:31:6"
																		},
																		"nativeSrc": "2125:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2115:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2115:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2209:129:6",
															"nodeType": "YulBlock",
															"src": "2209:129:6",
															"statements": [
																{
																	"nativeSrc": "2224:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2224:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2238:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2238:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2228:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2228:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2254:74:6",
																	"nodeType": "YulAssignment",
																	"src": "2254:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2300:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2300:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2311:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2311:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2296:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2296:3:6"
																				},
																				"nativeSrc": "2296:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2296:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2320:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2320:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2264:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "2264:31:6"
																		},
																		"nativeSrc": "2264:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2264:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2254:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2254:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$729t_addresst_uint256_fromMemory",
												"nativeSrc": "1654:691:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1733:9:6",
														"nodeType": "YulTypedName",
														"src": "1733:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1744:7:6",
														"nodeType": "YulTypedName",
														"src": "1744:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1756:6:6",
														"nodeType": "YulTypedName",
														"src": "1756:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1764:6:6",
														"nodeType": "YulTypedName",
														"src": "1764:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1772:6:6",
														"nodeType": "YulTypedName",
														"src": "1772:6:6",
														"type": ""
													}
												],
												"src": "1654:691:6"
											},
											{
												"body": {
													"nativeSrc": "2447:73:6",
													"nodeType": "YulBlock",
													"src": "2447:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2464:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2464:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2469:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2457:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:6"
																},
																"nativeSrc": "2457:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2457:19:6"
															},
															"nativeSrc": "2457:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "2457:19:6"
														},
														{
															"nativeSrc": "2485:29:6",
															"nodeType": "YulAssignment",
															"src": "2485:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2504:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2504:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2509:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2509:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2500:3:6"
																},
																"nativeSrc": "2500:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2500:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2485:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "2485:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2351:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2419:3:6",
														"nodeType": "YulTypedName",
														"src": "2419:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2424:6:6",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2435:11:6",
														"nodeType": "YulTypedName",
														"src": "2435:11:6",
														"type": ""
													}
												],
												"src": "2351:169:6"
											},
											{
												"body": {
													"nativeSrc": "2632:123:6",
													"nodeType": "YulBlock",
													"src": "2632:123:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2654:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2654:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2662:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2662:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2650:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2650:3:6"
																		},
																		"nativeSrc": "2650:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2650:14:6"
																	},
																	{
																		"hexValue": "546f6b656e4c6f636b3a206c6f636b2074696d652073686f756c642067726561",
																		"kind": "string",
																		"nativeSrc": "2666:34:6",
																		"nodeType": "YulLiteral",
																		"src": "2666:34:6",
																		"type": "",
																		"value": "TokenLock: lock time should grea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2643:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2643:6:6"
																},
																"nativeSrc": "2643:58:6",
																"nodeType": "YulFunctionCall",
																"src": "2643:58:6"
															},
															"nativeSrc": "2643:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "2643:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2722:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2722:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2730:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2730:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2718:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2718:3:6"
																		},
																		"nativeSrc": "2718:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2718:15:6"
																	},
																	{
																		"hexValue": "746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "2735:12:6",
																		"nodeType": "YulLiteral",
																		"src": "2735:12:6",
																		"type": "",
																		"value": "ter than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2711:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:6"
																},
																"nativeSrc": "2711:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2711:37:6"
															},
															"nativeSrc": "2711:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2711:37:6"
														}
													]
												},
												"name": "store_literal_in_memory_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5",
												"nativeSrc": "2526:229:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2624:6:6",
														"nodeType": "YulTypedName",
														"src": "2624:6:6",
														"type": ""
													}
												],
												"src": "2526:229:6"
											},
											{
												"body": {
													"nativeSrc": "2907:220:6",
													"nodeType": "YulBlock",
													"src": "2907:220:6",
													"statements": [
														{
															"nativeSrc": "2917:74:6",
															"nodeType": "YulAssignment",
															"src": "2917:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2983:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2983:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2988:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2988:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2924:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2924:58:6"
																},
																"nativeSrc": "2924:67:6",
																"nodeType": "YulFunctionCall",
																"src": "2924:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2917:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2917:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3089:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3089:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5",
																	"nativeSrc": "3000:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "3000:88:6"
																},
																"nativeSrc": "3000:93:6",
																"nodeType": "YulFunctionCall",
																"src": "3000:93:6"
															},
															"nativeSrc": "3000:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "3000:93:6"
														},
														{
															"nativeSrc": "3102:19:6",
															"nodeType": "YulAssignment",
															"src": "3102:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3113:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3113:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3118:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3118:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3109:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3109:3:6"
																},
																"nativeSrc": "3109:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3109:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3102:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3102:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2761:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2895:3:6",
														"nodeType": "YulTypedName",
														"src": "2895:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2903:3:6",
														"nodeType": "YulTypedName",
														"src": "2903:3:6",
														"type": ""
													}
												],
												"src": "2761:366:6"
											},
											{
												"body": {
													"nativeSrc": "3304:248:6",
													"nodeType": "YulBlock",
													"src": "3304:248:6",
													"statements": [
														{
															"nativeSrc": "3314:26:6",
															"nodeType": "YulAssignment",
															"src": "3314:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3326:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3326:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3337:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3337:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3322:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:6"
																},
																"nativeSrc": "3322:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3322:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3314:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3314:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3361:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3361:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3372:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3372:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3357:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3357:3:6"
																		},
																		"nativeSrc": "3357:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3357:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3380:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3380:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3386:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3386:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3376:3:6"
																		},
																		"nativeSrc": "3376:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3376:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3350:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3350:6:6"
																},
																"nativeSrc": "3350:47:6",
																"nodeType": "YulFunctionCall",
																"src": "3350:47:6"
															},
															"nativeSrc": "3350:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "3350:47:6"
														},
														{
															"nativeSrc": "3406:139:6",
															"nodeType": "YulAssignment",
															"src": "3406:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3540:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3540:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3414:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:124:6"
																},
																"nativeSrc": "3414:131:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3406:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3406:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3133:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3284:9:6",
														"nodeType": "YulTypedName",
														"src": "3284:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3299:4:6",
														"nodeType": "YulTypedName",
														"src": "3299:4:6",
														"type": ""
													}
												],
												"src": "3133:419:6"
											},
											{
												"body": {
													"nativeSrc": "3623:53:6",
													"nodeType": "YulBlock",
													"src": "3623:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3640:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3640:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3663:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3663:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3645:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3645:17:6"
																		},
																		"nativeSrc": "3645:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3645:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3633:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3633:6:6"
																},
																"nativeSrc": "3633:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3633:37:6"
															},
															"nativeSrc": "3633:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3633:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3558:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3611:5:6",
														"nodeType": "YulTypedName",
														"src": "3611:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3618:3:6",
														"nodeType": "YulTypedName",
														"src": "3618:3:6",
														"type": ""
													}
												],
												"src": "3558:118:6"
											},
											{
												"body": {
													"nativeSrc": "3808:206:6",
													"nodeType": "YulBlock",
													"src": "3808:206:6",
													"statements": [
														{
															"nativeSrc": "3818:26:6",
															"nodeType": "YulAssignment",
															"src": "3818:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3830:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3830:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3841:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3841:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3826:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3826:3:6"
																},
																"nativeSrc": "3826:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3826:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3818:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3818:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3898:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3898:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3911:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3911:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3922:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3922:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3907:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:6"
																		},
																		"nativeSrc": "3907:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3907:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3854:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3854:43:6"
																},
																"nativeSrc": "3854:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3854:71:6"
															},
															"nativeSrc": "3854:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3854:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3979:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3979:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3992:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4003:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3988:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:6"
																		},
																		"nativeSrc": "3988:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3935:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3935:43:6"
																},
																"nativeSrc": "3935:72:6",
																"nodeType": "YulFunctionCall",
																"src": "3935:72:6"
															},
															"nativeSrc": "3935:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "3935:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3682:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3772:9:6",
														"nodeType": "YulTypedName",
														"src": "3772:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3792:6:6",
														"nodeType": "YulTypedName",
														"src": "3792:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3803:4:6",
														"nodeType": "YulTypedName",
														"src": "3803:4:6",
														"type": ""
													}
												],
												"src": "3682:332:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$729(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$729(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$729(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$729_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$729(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$729t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$729_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenLock: lock time should grea\")\n\n        mstore(add(memPtr, 32), \"ter than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "610100604052348015610010575f80fd5b50604051610b3c380380610b3c83398181016040528101906100329190610227565b5f8111610074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006b906102f7565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508060c081815250504260e081815250508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fe5d7d4b5cb0219916a8be73968f7baf3c806fd018b0cc5598f5129436cf5c316428460405161014b929190610324565b60405180910390a350505061034b565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101888261015f565b9050919050565b5f6101998261017e565b9050919050565b6101a98161018f565b81146101b3575f80fd5b50565b5f815190506101c4816101a0565b92915050565b6101d38161017e565b81146101dd575f80fd5b50565b5f815190506101ee816101ca565b92915050565b5f819050919050565b610206816101f4565b8114610210575f80fd5b50565b5f81519050610221816101fd565b92915050565b5f805f6060848603121561023e5761023d61015b565b5b5f61024b868287016101b6565b935050602061025c868287016101e0565b925050604061026d86828701610213565b9150509250925092565b5f82825260208201905092915050565b7f546f6b656e4c6f636b3a206c6f636b2074696d652073686f756c6420677265615f8201527f746572207468616e203000000000000000000000000000000000000000000000602082015250565b5f6102e1602a83610277565b91506102ec82610287565b604082019050919050565b5f6020820190508181035f83015261030e816102d5565b9050919050565b61031e816101f4565b82525050565b5f6040820190506103375f830185610315565b6103446020830184610315565b9392505050565b60805160a05160c05160e05161079c6103a05f395f8181610125015261016a01525f818160dd015261014901525f818161010101526102f001525f81816101d8015281816102b401526103da015261079c5ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80630d6680871461005957806338af3eed1461007757806378e979251461009557806386d1a69f146100b3578063fc0c546a146100bd575b5f80fd5b6100616100db565b60405161006e9190610414565b60405180910390f35b61007f6100ff565b60405161008c919061046c565b60405180910390f35b61009d610123565b6040516100aa9190610414565b60405180910390f35b6100bb610147565b005b6100c56103d8565b6040516100d291906104e0565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006101939190610526565b4210156101d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cc906105d9565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161022f919061046c565b602060405180830381865afa15801561024a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026e9190610625565b90505f81116102b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a99061069a565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b815260040161032d9291906106b8565b6020604051808303815f875af1158015610349573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061036d9190610714565b503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f10b55f01b1cfe0feeb7d144f66162661602d8e73256499b6d8342aac37ff067942846040516103cd92919061073f565b60405180910390a350565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f819050919050565b61040e816103fc565b82525050565b5f6020820190506104275f830184610405565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104568261042d565b9050919050565b6104668161044c565b82525050565b5f60208201905061047f5f83018461045d565b92915050565b5f819050919050565b5f6104a86104a361049e8461042d565b610485565b61042d565b9050919050565b5f6104b98261048e565b9050919050565b5f6104ca826104af565b9050919050565b6104da816104c0565b82525050565b5f6020820190506104f35f8301846104d1565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610530826103fc565b915061053b836103fc565b9250828201905080821115610553576105526104f9565b5b92915050565b5f82825260208201905092915050565b7f546f6b656e4c6f636b3a2063757272656e742074696d65206973206265666f725f8201527f652072656c656173652074696d652e0000000000000000000000000000000000602082015250565b5f6105c3602f83610559565b91506105ce82610569565b604082019050919050565b5f6020820190508181035f8301526105f0816105b7565b9050919050565b5f80fd5b610604816103fc565b811461060e575f80fd5b50565b5f8151905061061f816105fb565b92915050565b5f6020828403121561063a576106396105f7565b5b5f61064784828501610611565b91505092915050565b7f546f6b656e4c6f636b3a206e6f20746f6b656e7320746f2072656c65617365005f82015250565b5f610684601f83610559565b915061068f82610650565b602082019050919050565b5f6020820190508181035f8301526106b181610678565b9050919050565b5f6040820190506106cb5f83018561045d565b6106d86020830184610405565b9392505050565b5f8115159050919050565b6106f3816106df565b81146106fd575f80fd5b50565b5f8151905061070e816106ea565b92915050565b5f60208284031215610729576107286105f7565b5b5f61073684828501610700565b91505092915050565b5f6040820190506107525f830185610405565b61075f6020830184610405565b939250505056fea26469706673582212207d9383e12836a0d90421b2109e14bca71cd635d8ccecbf2dcd1958825eb079d664736f6c634300081a0033",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB3C CODESIZE SUB DUP1 PUSH2 0xB3C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B SWAP1 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP TIMESTAMP PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE5D7D4B5CB0219916A8BE73968F7BAF3C806FD018B0CC5598F5129436CF5C316 TIMESTAMP DUP5 PUSH1 0x40 MLOAD PUSH2 0x14B SWAP3 SWAP2 SWAP1 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x34B JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x188 DUP3 PUSH2 0x15F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x199 DUP3 PUSH2 0x17E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9 DUP2 PUSH2 0x18F JUMP JUMPDEST DUP2 EQ PUSH2 0x1B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C4 DUP2 PUSH2 0x1A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D3 DUP2 PUSH2 0x17E JUMP JUMPDEST DUP2 EQ PUSH2 0x1DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EE DUP2 PUSH2 0x1CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x206 DUP2 PUSH2 0x1F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x221 DUP2 PUSH2 0x1FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23E JUMPI PUSH2 0x23D PUSH2 0x15B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24B DUP7 DUP3 DUP8 ADD PUSH2 0x1B6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25C DUP7 DUP3 DUP8 ADD PUSH2 0x1E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x26D DUP7 DUP3 DUP8 ADD PUSH2 0x213 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E4C6F636B3A206C6F636B2074696D652073686F756C642067726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x746572207468616E203000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E1 PUSH1 0x2A DUP4 PUSH2 0x277 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC DUP3 PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30E DUP2 PUSH2 0x2D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31E DUP2 PUSH2 0x1F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x337 PUSH0 DUP4 ADD DUP6 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x344 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x315 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x79C PUSH2 0x3A0 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x125 ADD MSTORE PUSH2 0x16A ADD MSTORE PUSH0 DUP2 DUP2 PUSH1 0xDD ADD MSTORE PUSH2 0x149 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x101 ADD MSTORE PUSH2 0x2F0 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1D8 ADD MSTORE DUP2 DUP2 PUSH2 0x2B4 ADD MSTORE PUSH2 0x3DA ADD MSTORE PUSH2 0x79C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD668087 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xBD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x147 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC5 PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x625 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A9 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP3 SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x349 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x714 JUMP JUMPDEST POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x10B55F01B1CFE0FEEB7D144F66162661602D8E73256499B6D8342AAC37FF0679 TIMESTAMP DUP5 PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP3 SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40E DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x427 PUSH0 DUP4 ADD DUP5 PUSH2 0x405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x456 DUP3 PUSH2 0x42D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x466 DUP2 PUSH2 0x44C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47F PUSH0 DUP4 ADD DUP5 PUSH2 0x45D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4A8 PUSH2 0x4A3 PUSH2 0x49E DUP5 PUSH2 0x42D JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4B9 DUP3 PUSH2 0x48E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4CA DUP3 PUSH2 0x4AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DA DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x4D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x530 DUP3 PUSH2 0x3FC JUMP JUMPDEST SWAP2 POP PUSH2 0x53B DUP4 PUSH2 0x3FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x553 JUMPI PUSH2 0x552 PUSH2 0x4F9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E4C6F636B3A2063757272656E742074696D65206973206265666F72 PUSH0 DUP3 ADD MSTORE PUSH32 0x652072656C656173652074696D652E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5C3 PUSH1 0x2F DUP4 PUSH2 0x559 JUMP JUMPDEST SWAP2 POP PUSH2 0x5CE DUP3 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5F0 DUP2 PUSH2 0x5B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x604 DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP2 EQ PUSH2 0x60E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x61F DUP2 PUSH2 0x5FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x63A JUMPI PUSH2 0x639 PUSH2 0x5F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x647 DUP5 DUP3 DUP6 ADD PUSH2 0x611 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E4C6F636B3A206E6F20746F6B656E7320746F2072656C6561736500 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x684 PUSH1 0x1F DUP4 PUSH2 0x559 JUMP JUMPDEST SWAP2 POP PUSH2 0x68F DUP3 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6B1 DUP2 PUSH2 0x678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6CB PUSH0 DUP4 ADD DUP6 PUSH2 0x45D JUMP JUMPDEST PUSH2 0x6D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F3 DUP2 PUSH2 0x6DF JUMP JUMPDEST DUP2 EQ PUSH2 0x6FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x70E DUP2 PUSH2 0x6EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x5F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x736 DUP5 DUP3 DUP6 ADD PUSH2 0x700 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x752 PUSH0 DUP4 ADD DUP6 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x75F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x9383E12836A0D90421B2109E14BCA71CD635D8CCECBF2DCD1958825EB079 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1097:1548:5:-:0;;;1747:408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1879:1;1868:9;:12;1860:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1946:6;1938:14;;;;;;;;;;1977:12;1963:26;;;;;;;;;;2011:9;2000:20;;;;;;2043:15;2031:27;;;;;;2111:6;2074:73;;2089:12;2074:73;;;2120:15;2137:9;2074:73;;;;;;;:::i;:::-;;;;;;;;1747:408;;;1097:1548;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:122::-;1090:24;1108:5;1090:24;:::i;:::-;1083:5;1080:35;1070:63;;1129:1;1126;1119:12;1070:63;1017:122;:::o;1145:143::-;1202:5;1233:6;1227:13;1218:22;;1249:33;1276:5;1249:33;:::i;:::-;1145:143;;;;:::o;1294:77::-;1331:7;1360:5;1349:16;;1294:77;;;:::o;1377:122::-;1450:24;1468:5;1450:24;:::i;:::-;1443:5;1440:35;1430:63;;1489:1;1486;1479:12;1430:63;1377:122;:::o;1505:143::-;1562:5;1593:6;1587:13;1578:22;;1609:33;1636:5;1609:33;:::i;:::-;1505:143;;;;:::o;1654:691::-;1756:6;1764;1772;1821:2;1809:9;1800:7;1796:23;1792:32;1789:119;;;1827:79;;:::i;:::-;1789:119;1947:1;1972:78;2042:7;2033:6;2022:9;2018:22;1972:78;:::i;:::-;1962:88;;1918:142;2099:2;2125:64;2181:7;2172:6;2161:9;2157:22;2125:64;:::i;:::-;2115:74;;2070:129;2238:2;2264:64;2320:7;2311:6;2300:9;2296:22;2264:64;:::i;:::-;2254:74;;2209:129;1654:691;;;;;:::o;2351:169::-;2435:11;2469:6;2464:3;2457:19;2509:4;2504:3;2500:14;2485:29;;2351:169;;;;:::o;2526:229::-;2666:34;2662:1;2654:6;2650:14;2643:58;2735:12;2730:2;2722:6;2718:15;2711:37;2526:229;:::o;2761:366::-;2903:3;2924:67;2988:2;2983:3;2924:67;:::i;:::-;2917:74;;3000:93;3089:3;3000:93;:::i;:::-;3118:2;3113:3;3109:12;3102:19;;2761:366;;;:::o;3133:419::-;3299:4;3337:2;3326:9;3322:18;3314:26;;3386:9;3380:4;3376:20;3372:1;3361:9;3357:17;3350:47;3414:131;3540:4;3414:131;:::i;:::-;3406:139;;3133:419;;;:::o;3558:118::-;3645:24;3663:5;3645:24;:::i;:::-;3640:3;3633:37;3558:118;;:::o;3682:332::-;3803:4;3841:2;3830:9;3826:18;3818:26;;3854:71;3922:1;3911:9;3907:17;3898:6;3854:71;:::i;:::-;3935:72;4003:2;3992:9;3988:18;3979:6;3935:72;:::i;:::-;3682:332;;;;;:::o;1097:1548:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@beneficiary_814": {
									"entryPoint": 255,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockTime_816": {
									"entryPoint": 219,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@release_915": {
									"entryPoint": 327,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startTime_818": {
									"entryPoint": 291,
									"id": 818,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_812": {
									"entryPoint": 984,
									"id": 812,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1720,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6866:6",
										"nodeType": "YulBlock",
										"src": "0:6866:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:6",
													"nodeType": "YulBlock",
													"src": "52:32:6",
													"statements": [
														{
															"nativeSrc": "62:16:6",
															"nodeType": "YulAssignment",
															"src": "62:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:6",
																"nodeType": "YulIdentifier",
																"src": "73:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:77:6"
											},
											{
												"body": {
													"nativeSrc": "155:53:6",
													"nodeType": "YulBlock",
													"src": "155:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:6"
																		},
																		"nativeSrc": "177:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:6"
																},
																"nativeSrc": "165:37:6",
																"nodeType": "YulFunctionCall",
																"src": "165:37:6"
															},
															"nativeSrc": "165:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:6",
														"nodeType": "YulTypedName",
														"src": "143:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:6",
														"nodeType": "YulTypedName",
														"src": "150:3:6",
														"type": ""
													}
												],
												"src": "90:118:6"
											},
											{
												"body": {
													"nativeSrc": "312:124:6",
													"nodeType": "YulBlock",
													"src": "312:124:6",
													"statements": [
														{
															"nativeSrc": "322:26:6",
															"nodeType": "YulAssignment",
															"src": "322:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:6",
																		"nodeType": "YulLiteral",
																		"src": "345:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:6"
																},
																"nativeSrc": "330:18:6",
																"nodeType": "YulFunctionCall",
																"src": "330:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:6",
																				"nodeType": "YulLiteral",
																				"src": "426:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:6"
																		},
																		"nativeSrc": "411:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:6"
																},
																"nativeSrc": "358:71:6",
																"nodeType": "YulFunctionCall",
																"src": "358:71:6"
															},
															"nativeSrc": "358:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:6",
														"nodeType": "YulTypedName",
														"src": "284:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:6",
														"nodeType": "YulTypedName",
														"src": "296:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:6",
														"nodeType": "YulTypedName",
														"src": "307:4:6",
														"type": ""
													}
												],
												"src": "214:222:6"
											},
											{
												"body": {
													"nativeSrc": "487:81:6",
													"nodeType": "YulBlock",
													"src": "487:81:6",
													"statements": [
														{
															"nativeSrc": "497:65:6",
															"nodeType": "YulAssignment",
															"src": "497:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:6",
																		"nodeType": "YulLiteral",
																		"src": "519:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:6"
																},
																"nativeSrc": "508:54:6",
																"nodeType": "YulFunctionCall",
																"src": "508:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:6",
														"nodeType": "YulTypedName",
														"src": "469:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:6",
														"nodeType": "YulTypedName",
														"src": "479:7:6",
														"type": ""
													}
												],
												"src": "442:126:6"
											},
											{
												"body": {
													"nativeSrc": "619:51:6",
													"nodeType": "YulBlock",
													"src": "619:51:6",
													"statements": [
														{
															"nativeSrc": "629:35:6",
															"nodeType": "YulAssignment",
															"src": "629:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "658:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "640:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:6"
																},
																"nativeSrc": "640:24:6",
																"nodeType": "YulFunctionCall",
																"src": "640:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "629:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "574:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "601:5:6",
														"nodeType": "YulTypedName",
														"src": "601:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "611:7:6",
														"nodeType": "YulTypedName",
														"src": "611:7:6",
														"type": ""
													}
												],
												"src": "574:96:6"
											},
											{
												"body": {
													"nativeSrc": "741:53:6",
													"nodeType": "YulBlock",
													"src": "741:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "763:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:6"
																		},
																		"nativeSrc": "763:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:6"
																},
																"nativeSrc": "751:37:6",
																"nodeType": "YulFunctionCall",
																"src": "751:37:6"
															},
															"nativeSrc": "751:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "676:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:6",
														"nodeType": "YulTypedName",
														"src": "729:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:6",
														"nodeType": "YulTypedName",
														"src": "736:3:6",
														"type": ""
													}
												],
												"src": "676:118:6"
											},
											{
												"body": {
													"nativeSrc": "898:124:6",
													"nodeType": "YulBlock",
													"src": "898:124:6",
													"statements": [
														{
															"nativeSrc": "908:26:6",
															"nodeType": "YulAssignment",
															"src": "908:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:6",
																		"nodeType": "YulLiteral",
																		"src": "931:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:6"
																},
																"nativeSrc": "916:18:6",
																"nodeType": "YulFunctionCall",
																"src": "916:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:6"
																		},
																		"nativeSrc": "997:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "944:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:6"
																},
																"nativeSrc": "944:71:6",
																"nodeType": "YulFunctionCall",
																"src": "944:71:6"
															},
															"nativeSrc": "944:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "800:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:6",
														"nodeType": "YulTypedName",
														"src": "870:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:6",
														"nodeType": "YulTypedName",
														"src": "882:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:6",
														"nodeType": "YulTypedName",
														"src": "893:4:6",
														"type": ""
													}
												],
												"src": "800:222:6"
											},
											{
												"body": {
													"nativeSrc": "1060:28:6",
													"nodeType": "YulBlock",
													"src": "1060:28:6",
													"statements": [
														{
															"nativeSrc": "1070:12:6",
															"nodeType": "YulAssignment",
															"src": "1070:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1077:5:6",
																"nodeType": "YulIdentifier",
																"src": "1077:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1070:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1070:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1028:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1046:5:6",
														"nodeType": "YulTypedName",
														"src": "1046:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1056:3:6",
														"nodeType": "YulTypedName",
														"src": "1056:3:6",
														"type": ""
													}
												],
												"src": "1028:60:6"
											},
											{
												"body": {
													"nativeSrc": "1154:82:6",
													"nodeType": "YulBlock",
													"src": "1154:82:6",
													"statements": [
														{
															"nativeSrc": "1164:66:6",
															"nodeType": "YulAssignment",
															"src": "1164:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1222:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1222:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1204:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1204:17:6"
																				},
																				"nativeSrc": "1204:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1204:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1195:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "1195:8:6"
																		},
																		"nativeSrc": "1195:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1195:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1177:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1177:17:6"
																},
																"nativeSrc": "1177:53:6",
																"nodeType": "YulFunctionCall",
																"src": "1177:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1164:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1164:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1094:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1134:5:6",
														"nodeType": "YulTypedName",
														"src": "1134:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1144:9:6",
														"nodeType": "YulTypedName",
														"src": "1144:9:6",
														"type": ""
													}
												],
												"src": "1094:142:6"
											},
											{
												"body": {
													"nativeSrc": "1302:66:6",
													"nodeType": "YulBlock",
													"src": "1302:66:6",
													"statements": [
														{
															"nativeSrc": "1312:50:6",
															"nodeType": "YulAssignment",
															"src": "1312:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1356:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1356:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1325:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "1325:30:6"
																},
																"nativeSrc": "1325:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1325:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1312:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1312:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1242:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1282:5:6",
														"nodeType": "YulTypedName",
														"src": "1282:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1292:9:6",
														"nodeType": "YulTypedName",
														"src": "1292:9:6",
														"type": ""
													}
												],
												"src": "1242:126:6"
											},
											{
												"body": {
													"nativeSrc": "1448:66:6",
													"nodeType": "YulBlock",
													"src": "1448:66:6",
													"statements": [
														{
															"nativeSrc": "1458:50:6",
															"nodeType": "YulAssignment",
															"src": "1458:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1502:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1502:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1471:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "1471:30:6"
																},
																"nativeSrc": "1471:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1471:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1458:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1458:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "1374:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1428:5:6",
														"nodeType": "YulTypedName",
														"src": "1428:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1438:9:6",
														"nodeType": "YulTypedName",
														"src": "1438:9:6",
														"type": ""
													}
												],
												"src": "1374:140:6"
											},
											{
												"body": {
													"nativeSrc": "1599:80:6",
													"nodeType": "YulBlock",
													"src": "1599:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1616:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1616:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1666:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1666:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "1621:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "1621:44:6"
																		},
																		"nativeSrc": "1621:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1621:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1609:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1609:6:6"
																},
																"nativeSrc": "1609:64:6",
																"nodeType": "YulFunctionCall",
																"src": "1609:64:6"
															},
															"nativeSrc": "1609:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "1609:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "1520:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1587:5:6",
														"nodeType": "YulTypedName",
														"src": "1587:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1594:3:6",
														"nodeType": "YulTypedName",
														"src": "1594:3:6",
														"type": ""
													}
												],
												"src": "1520:159:6"
											},
											{
												"body": {
													"nativeSrc": "1797:138:6",
													"nodeType": "YulBlock",
													"src": "1797:138:6",
													"statements": [
														{
															"nativeSrc": "1807:26:6",
															"nodeType": "YulAssignment",
															"src": "1807:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1819:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1819:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1830:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1830:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1815:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1815:3:6"
																},
																"nativeSrc": "1815:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1815:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1807:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1807:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1901:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1901:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1914:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1914:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1925:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1925:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:6"
																		},
																		"nativeSrc": "1910:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "1843:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "1843:57:6"
																},
																"nativeSrc": "1843:85:6",
																"nodeType": "YulFunctionCall",
																"src": "1843:85:6"
															},
															"nativeSrc": "1843:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "1843:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "1685:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1769:9:6",
														"nodeType": "YulTypedName",
														"src": "1769:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1781:6:6",
														"nodeType": "YulTypedName",
														"src": "1781:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1792:4:6",
														"nodeType": "YulTypedName",
														"src": "1792:4:6",
														"type": ""
													}
												],
												"src": "1685:250:6"
											},
											{
												"body": {
													"nativeSrc": "1969:152:6",
													"nodeType": "YulBlock",
													"src": "1969:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1986:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1986:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1989:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1989:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1979:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1979:6:6"
																},
																"nativeSrc": "1979:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1979:88:6"
															},
															"nativeSrc": "1979:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1979:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2083:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2083:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2086:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2086:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2076:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2076:6:6"
																},
																"nativeSrc": "2076:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2076:15:6"
															},
															"nativeSrc": "2076:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2076:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2107:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2110:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2110:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2100:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2100:6:6"
																},
																"nativeSrc": "2100:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2100:15:6"
															},
															"nativeSrc": "2100:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2100:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1941:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1941:180:6"
											},
											{
												"body": {
													"nativeSrc": "2171:147:6",
													"nodeType": "YulBlock",
													"src": "2171:147:6",
													"statements": [
														{
															"nativeSrc": "2181:25:6",
															"nodeType": "YulAssignment",
															"src": "2181:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2204:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2204:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2186:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2186:17:6"
																},
																"nativeSrc": "2186:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2186:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2181:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "2181:1:6"
																}
															]
														},
														{
															"nativeSrc": "2215:25:6",
															"nodeType": "YulAssignment",
															"src": "2215:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2238:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2238:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2220:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2220:17:6"
																},
																"nativeSrc": "2220:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2220:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2215:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:1:6"
																}
															]
														},
														{
															"nativeSrc": "2249:16:6",
															"nodeType": "YulAssignment",
															"src": "2249:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2260:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2260:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2263:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2263:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2256:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2256:3:6"
																},
																"nativeSrc": "2256:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2256:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2249:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2249:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2289:22:6",
																"nodeType": "YulBlock",
																"src": "2289:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2291:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2291:16:6"
																			},
																			"nativeSrc": "2291:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2291:18:6"
																		},
																		"nativeSrc": "2291:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2291:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2281:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2281:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2284:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2284:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2278:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2278:2:6"
																},
																"nativeSrc": "2278:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2278:10:6"
															},
															"nativeSrc": "2275:36:6",
															"nodeType": "YulIf",
															"src": "2275:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2127:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2158:1:6",
														"nodeType": "YulTypedName",
														"src": "2158:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2161:1:6",
														"nodeType": "YulTypedName",
														"src": "2161:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2167:3:6",
														"nodeType": "YulTypedName",
														"src": "2167:3:6",
														"type": ""
													}
												],
												"src": "2127:191:6"
											},
											{
												"body": {
													"nativeSrc": "2420:73:6",
													"nodeType": "YulBlock",
													"src": "2420:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2437:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2437:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2442:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2442:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2430:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:6"
																},
																"nativeSrc": "2430:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2430:19:6"
															},
															"nativeSrc": "2430:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "2430:19:6"
														},
														{
															"nativeSrc": "2458:29:6",
															"nodeType": "YulAssignment",
															"src": "2458:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2477:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2477:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2482:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2482:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2473:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:6"
																},
																"nativeSrc": "2473:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2473:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2458:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "2458:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2324:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2392:3:6",
														"nodeType": "YulTypedName",
														"src": "2392:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2397:6:6",
														"nodeType": "YulTypedName",
														"src": "2397:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2408:11:6",
														"nodeType": "YulTypedName",
														"src": "2408:11:6",
														"type": ""
													}
												],
												"src": "2324:169:6"
											},
											{
												"body": {
													"nativeSrc": "2605:128:6",
													"nodeType": "YulBlock",
													"src": "2605:128:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2627:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2627:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2635:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2635:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2623:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2623:3:6"
																		},
																		"nativeSrc": "2623:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:14:6"
																	},
																	{
																		"hexValue": "546f6b656e4c6f636b3a2063757272656e742074696d65206973206265666f72",
																		"kind": "string",
																		"nativeSrc": "2639:34:6",
																		"nodeType": "YulLiteral",
																		"src": "2639:34:6",
																		"type": "",
																		"value": "TokenLock: current time is befor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2616:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2616:6:6"
																},
																"nativeSrc": "2616:58:6",
																"nodeType": "YulFunctionCall",
																"src": "2616:58:6"
															},
															"nativeSrc": "2616:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "2616:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2695:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2695:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2703:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2703:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2691:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2691:3:6"
																		},
																		"nativeSrc": "2691:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2691:15:6"
																	},
																	{
																		"hexValue": "652072656c656173652074696d652e",
																		"kind": "string",
																		"nativeSrc": "2708:17:6",
																		"nodeType": "YulLiteral",
																		"src": "2708:17:6",
																		"type": "",
																		"value": "e release time."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2684:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2684:6:6"
																},
																"nativeSrc": "2684:42:6",
																"nodeType": "YulFunctionCall",
																"src": "2684:42:6"
															},
															"nativeSrc": "2684:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "2684:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4",
												"nativeSrc": "2499:234:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2597:6:6",
														"nodeType": "YulTypedName",
														"src": "2597:6:6",
														"type": ""
													}
												],
												"src": "2499:234:6"
											},
											{
												"body": {
													"nativeSrc": "2885:220:6",
													"nodeType": "YulBlock",
													"src": "2885:220:6",
													"statements": [
														{
															"nativeSrc": "2895:74:6",
															"nodeType": "YulAssignment",
															"src": "2895:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2961:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2961:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2966:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2966:2:6",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2902:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2902:58:6"
																},
																"nativeSrc": "2902:67:6",
																"nodeType": "YulFunctionCall",
																"src": "2902:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2895:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2895:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3067:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3067:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4",
																	"nativeSrc": "2978:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "2978:88:6"
																},
																"nativeSrc": "2978:93:6",
																"nodeType": "YulFunctionCall",
																"src": "2978:93:6"
															},
															"nativeSrc": "2978:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "2978:93:6"
														},
														{
															"nativeSrc": "3080:19:6",
															"nodeType": "YulAssignment",
															"src": "3080:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3091:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3091:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3096:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3096:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3087:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3087:3:6"
																},
																"nativeSrc": "3087:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3087:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3080:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3080:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2739:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2873:3:6",
														"nodeType": "YulTypedName",
														"src": "2873:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2881:3:6",
														"nodeType": "YulTypedName",
														"src": "2881:3:6",
														"type": ""
													}
												],
												"src": "2739:366:6"
											},
											{
												"body": {
													"nativeSrc": "3282:248:6",
													"nodeType": "YulBlock",
													"src": "3282:248:6",
													"statements": [
														{
															"nativeSrc": "3292:26:6",
															"nodeType": "YulAssignment",
															"src": "3292:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3304:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3304:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3315:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3315:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3300:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3300:3:6"
																},
																"nativeSrc": "3300:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3300:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3292:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3292:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3339:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3339:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3350:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3350:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3335:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3335:3:6"
																		},
																		"nativeSrc": "3335:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3335:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3358:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3358:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3364:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3364:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3354:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3354:3:6"
																		},
																		"nativeSrc": "3354:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3354:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3328:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3328:6:6"
																},
																"nativeSrc": "3328:47:6",
																"nodeType": "YulFunctionCall",
																"src": "3328:47:6"
															},
															"nativeSrc": "3328:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "3328:47:6"
														},
														{
															"nativeSrc": "3384:139:6",
															"nodeType": "YulAssignment",
															"src": "3384:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3518:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3518:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3392:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "3392:124:6"
																},
																"nativeSrc": "3392:131:6",
																"nodeType": "YulFunctionCall",
																"src": "3392:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3384:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3384:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3111:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3262:9:6",
														"nodeType": "YulTypedName",
														"src": "3262:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3277:4:6",
														"nodeType": "YulTypedName",
														"src": "3277:4:6",
														"type": ""
													}
												],
												"src": "3111:419:6"
											},
											{
												"body": {
													"nativeSrc": "3576:35:6",
													"nodeType": "YulBlock",
													"src": "3576:35:6",
													"statements": [
														{
															"nativeSrc": "3586:19:6",
															"nodeType": "YulAssignment",
															"src": "3586:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3602:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3602:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3596:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3596:5:6"
																},
																"nativeSrc": "3596:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3596:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3586:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "3536:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3569:6:6",
														"nodeType": "YulTypedName",
														"src": "3569:6:6",
														"type": ""
													}
												],
												"src": "3536:75:6"
											},
											{
												"body": {
													"nativeSrc": "3706:28:6",
													"nodeType": "YulBlock",
													"src": "3706:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3723:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3723:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3726:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3716:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3716:6:6"
																},
																"nativeSrc": "3716:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3716:12:6"
															},
															"nativeSrc": "3716:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "3716:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "3617:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3617:117:6"
											},
											{
												"body": {
													"nativeSrc": "3829:28:6",
													"nodeType": "YulBlock",
													"src": "3829:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3846:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3846:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3849:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3849:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3839:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3839:6:6"
																},
																"nativeSrc": "3839:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3839:12:6"
															},
															"nativeSrc": "3839:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "3839:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "3740:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3740:117:6"
											},
											{
												"body": {
													"nativeSrc": "3906:79:6",
													"nodeType": "YulBlock",
													"src": "3906:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:16:6",
																"nodeType": "YulBlock",
																"src": "3963:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3972:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3972:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3975:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3975:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3965:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3965:6:6"
																			},
																			"nativeSrc": "3965:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3965:12:6"
																		},
																		"nativeSrc": "3965:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3965:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3929:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3929:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3954:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3954:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3936:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3936:17:6"
																				},
																				"nativeSrc": "3936:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3936:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3926:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3926:2:6"
																		},
																		"nativeSrc": "3926:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3926:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3919:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3919:6:6"
																},
																"nativeSrc": "3919:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3919:43:6"
															},
															"nativeSrc": "3916:63:6",
															"nodeType": "YulIf",
															"src": "3916:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3863:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3899:5:6",
														"nodeType": "YulTypedName",
														"src": "3899:5:6",
														"type": ""
													}
												],
												"src": "3863:122:6"
											},
											{
												"body": {
													"nativeSrc": "4054:80:6",
													"nodeType": "YulBlock",
													"src": "4054:80:6",
													"statements": [
														{
															"nativeSrc": "4064:22:6",
															"nodeType": "YulAssignment",
															"src": "4064:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4079:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4079:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4073:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4073:5:6"
																},
																"nativeSrc": "4073:13:6",
																"nodeType": "YulFunctionCall",
																"src": "4073:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4064:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4064:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4122:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4122:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4095:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "4095:26:6"
																},
																"nativeSrc": "4095:33:6",
																"nodeType": "YulFunctionCall",
																"src": "4095:33:6"
															},
															"nativeSrc": "4095:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "4095:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3991:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4032:6:6",
														"nodeType": "YulTypedName",
														"src": "4032:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4040:3:6",
														"nodeType": "YulTypedName",
														"src": "4040:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4048:5:6",
														"nodeType": "YulTypedName",
														"src": "4048:5:6",
														"type": ""
													}
												],
												"src": "3991:143:6"
											},
											{
												"body": {
													"nativeSrc": "4217:274:6",
													"nodeType": "YulBlock",
													"src": "4217:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4263:83:6",
																"nodeType": "YulBlock",
																"src": "4263:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4265:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4265:77:6"
																			},
																			"nativeSrc": "4265:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4265:79:6"
																		},
																		"nativeSrc": "4265:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4265:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4238:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4238:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4247:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4247:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4234:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4234:3:6"
																		},
																		"nativeSrc": "4234:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4234:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4259:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4259:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4230:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4230:3:6"
																},
																"nativeSrc": "4230:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4230:32:6"
															},
															"nativeSrc": "4227:119:6",
															"nodeType": "YulIf",
															"src": "4227:119:6"
														},
														{
															"nativeSrc": "4356:128:6",
															"nodeType": "YulBlock",
															"src": "4356:128:6",
															"statements": [
																{
																	"nativeSrc": "4371:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4371:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4385:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4385:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4375:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4375:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4400:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4400:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4446:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4446:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4457:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4457:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4442:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4442:3:6"
																				},
																				"nativeSrc": "4442:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4442:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4466:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4466:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4410:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4410:31:6"
																		},
																		"nativeSrc": "4410:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4410:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4400:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4400:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4140:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4187:9:6",
														"nodeType": "YulTypedName",
														"src": "4187:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4198:7:6",
														"nodeType": "YulTypedName",
														"src": "4198:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4210:6:6",
														"nodeType": "YulTypedName",
														"src": "4210:6:6",
														"type": ""
													}
												],
												"src": "4140:351:6"
											},
											{
												"body": {
													"nativeSrc": "4603:75:6",
													"nodeType": "YulBlock",
													"src": "4603:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4625:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4625:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4633:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4633:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4621:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4621:3:6"
																		},
																		"nativeSrc": "4621:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4621:14:6"
																	},
																	{
																		"hexValue": "546f6b656e4c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
																		"kind": "string",
																		"nativeSrc": "4637:33:6",
																		"nodeType": "YulLiteral",
																		"src": "4637:33:6",
																		"type": "",
																		"value": "TokenLock: no tokens to release"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4614:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4614:6:6"
																},
																"nativeSrc": "4614:57:6",
																"nodeType": "YulFunctionCall",
																"src": "4614:57:6"
															},
															"nativeSrc": "4614:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "4614:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba",
												"nativeSrc": "4497:181:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4595:6:6",
														"nodeType": "YulTypedName",
														"src": "4595:6:6",
														"type": ""
													}
												],
												"src": "4497:181:6"
											},
											{
												"body": {
													"nativeSrc": "4830:220:6",
													"nodeType": "YulBlock",
													"src": "4830:220:6",
													"statements": [
														{
															"nativeSrc": "4840:74:6",
															"nodeType": "YulAssignment",
															"src": "4840:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4906:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4906:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4911:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4911:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4847:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "4847:58:6"
																},
																"nativeSrc": "4847:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4847:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4840:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4840:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5012:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5012:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba",
																	"nativeSrc": "4923:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "4923:88:6"
																},
																"nativeSrc": "4923:93:6",
																"nodeType": "YulFunctionCall",
																"src": "4923:93:6"
															},
															"nativeSrc": "4923:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "4923:93:6"
														},
														{
															"nativeSrc": "5025:19:6",
															"nodeType": "YulAssignment",
															"src": "5025:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5036:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5036:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5041:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5041:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5032:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:6"
																},
																"nativeSrc": "5032:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5032:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5025:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5025:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4684:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4818:3:6",
														"nodeType": "YulTypedName",
														"src": "4818:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4826:3:6",
														"nodeType": "YulTypedName",
														"src": "4826:3:6",
														"type": ""
													}
												],
												"src": "4684:366:6"
											},
											{
												"body": {
													"nativeSrc": "5227:248:6",
													"nodeType": "YulBlock",
													"src": "5227:248:6",
													"statements": [
														{
															"nativeSrc": "5237:26:6",
															"nodeType": "YulAssignment",
															"src": "5237:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5249:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5249:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5260:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5260:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5245:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5245:3:6"
																},
																"nativeSrc": "5245:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5245:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5237:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5237:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5284:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5295:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5295:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5280:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5280:3:6"
																		},
																		"nativeSrc": "5280:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5280:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5303:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5303:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5309:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5309:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5299:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5299:3:6"
																		},
																		"nativeSrc": "5299:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5299:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5273:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5273:6:6"
																},
																"nativeSrc": "5273:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5273:47:6"
															},
															"nativeSrc": "5273:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5273:47:6"
														},
														{
															"nativeSrc": "5329:139:6",
															"nodeType": "YulAssignment",
															"src": "5329:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5463:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5463:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5337:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5337:124:6"
																},
																"nativeSrc": "5337:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5337:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5329:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5329:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5056:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5207:9:6",
														"nodeType": "YulTypedName",
														"src": "5207:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5222:4:6",
														"nodeType": "YulTypedName",
														"src": "5222:4:6",
														"type": ""
													}
												],
												"src": "5056:419:6"
											},
											{
												"body": {
													"nativeSrc": "5607:206:6",
													"nodeType": "YulBlock",
													"src": "5607:206:6",
													"statements": [
														{
															"nativeSrc": "5617:26:6",
															"nodeType": "YulAssignment",
															"src": "5617:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5629:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5629:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5640:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5640:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5625:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:6"
																},
																"nativeSrc": "5625:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5625:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5617:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5617:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5697:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5697:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5710:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5710:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5721:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5721:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5706:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5706:3:6"
																		},
																		"nativeSrc": "5706:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5706:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5653:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5653:43:6"
																},
																"nativeSrc": "5653:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5653:71:6"
															},
															"nativeSrc": "5653:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5653:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5778:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5778:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5791:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5791:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5802:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5802:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5787:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5787:3:6"
																		},
																		"nativeSrc": "5787:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5787:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5734:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5734:43:6"
																},
																"nativeSrc": "5734:72:6",
																"nodeType": "YulFunctionCall",
																"src": "5734:72:6"
															},
															"nativeSrc": "5734:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "5734:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5481:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5571:9:6",
														"nodeType": "YulTypedName",
														"src": "5571:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5583:6:6",
														"nodeType": "YulTypedName",
														"src": "5583:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5591:6:6",
														"nodeType": "YulTypedName",
														"src": "5591:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5602:4:6",
														"nodeType": "YulTypedName",
														"src": "5602:4:6",
														"type": ""
													}
												],
												"src": "5481:332:6"
											},
											{
												"body": {
													"nativeSrc": "5861:48:6",
													"nodeType": "YulBlock",
													"src": "5861:48:6",
													"statements": [
														{
															"nativeSrc": "5871:32:6",
															"nodeType": "YulAssignment",
															"src": "5871:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5896:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5896:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5889:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5889:6:6"
																		},
																		"nativeSrc": "5889:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5889:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5882:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:6"
																},
																"nativeSrc": "5882:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5882:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5871:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5871:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5819:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5843:5:6",
														"nodeType": "YulTypedName",
														"src": "5843:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5853:7:6",
														"nodeType": "YulTypedName",
														"src": "5853:7:6",
														"type": ""
													}
												],
												"src": "5819:90:6"
											},
											{
												"body": {
													"nativeSrc": "5955:76:6",
													"nodeType": "YulBlock",
													"src": "5955:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6009:16:6",
																"nodeType": "YulBlock",
																"src": "6009:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6018:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6018:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6021:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6021:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6011:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6011:6:6"
																			},
																			"nativeSrc": "6011:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6011:12:6"
																		},
																		"nativeSrc": "6011:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6011:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5978:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5978:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6000:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6000:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5985:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "5985:14:6"
																				},
																				"nativeSrc": "5985:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5985:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5975:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5975:2:6"
																		},
																		"nativeSrc": "5975:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5975:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5968:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5968:6:6"
																},
																"nativeSrc": "5968:40:6",
																"nodeType": "YulFunctionCall",
																"src": "5968:40:6"
															},
															"nativeSrc": "5965:60:6",
															"nodeType": "YulIf",
															"src": "5965:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5915:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5948:5:6",
														"nodeType": "YulTypedName",
														"src": "5948:5:6",
														"type": ""
													}
												],
												"src": "5915:116:6"
											},
											{
												"body": {
													"nativeSrc": "6097:77:6",
													"nodeType": "YulBlock",
													"src": "6097:77:6",
													"statements": [
														{
															"nativeSrc": "6107:22:6",
															"nodeType": "YulAssignment",
															"src": "6107:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6122:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6122:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6116:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6116:5:6"
																},
																"nativeSrc": "6116:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6116:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6107:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6107:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6162:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6162:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6138:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "6138:23:6"
																},
																"nativeSrc": "6138:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6138:30:6"
															},
															"nativeSrc": "6138:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6138:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6037:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6075:6:6",
														"nodeType": "YulTypedName",
														"src": "6075:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6083:3:6",
														"nodeType": "YulTypedName",
														"src": "6083:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6091:5:6",
														"nodeType": "YulTypedName",
														"src": "6091:5:6",
														"type": ""
													}
												],
												"src": "6037:137:6"
											},
											{
												"body": {
													"nativeSrc": "6254:271:6",
													"nodeType": "YulBlock",
													"src": "6254:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6300:83:6",
																"nodeType": "YulBlock",
																"src": "6300:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6302:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6302:77:6"
																			},
																			"nativeSrc": "6302:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6302:79:6"
																		},
																		"nativeSrc": "6302:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6302:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6275:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6275:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6284:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6284:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6271:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6271:3:6"
																		},
																		"nativeSrc": "6271:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6271:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6296:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6267:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6267:3:6"
																},
																"nativeSrc": "6267:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6267:32:6"
															},
															"nativeSrc": "6264:119:6",
															"nodeType": "YulIf",
															"src": "6264:119:6"
														},
														{
															"nativeSrc": "6393:125:6",
															"nodeType": "YulBlock",
															"src": "6393:125:6",
															"statements": [
																{
																	"nativeSrc": "6408:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6408:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6422:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6422:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6412:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6412:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6437:71:6",
																	"nodeType": "YulAssignment",
																	"src": "6437:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6480:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6480:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6491:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6491:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6476:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6476:3:6"
																				},
																				"nativeSrc": "6476:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6476:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6500:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6500:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6447:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "6447:28:6"
																		},
																		"nativeSrc": "6447:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6447:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6437:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6437:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6180:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6224:9:6",
														"nodeType": "YulTypedName",
														"src": "6224:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6235:7:6",
														"nodeType": "YulTypedName",
														"src": "6235:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6247:6:6",
														"nodeType": "YulTypedName",
														"src": "6247:6:6",
														"type": ""
													}
												],
												"src": "6180:345:6"
											},
											{
												"body": {
													"nativeSrc": "6657:206:6",
													"nodeType": "YulBlock",
													"src": "6657:206:6",
													"statements": [
														{
															"nativeSrc": "6667:26:6",
															"nodeType": "YulAssignment",
															"src": "6667:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6679:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6679:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6690:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6690:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6675:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6675:3:6"
																},
																"nativeSrc": "6675:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6675:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6667:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6667:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6747:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6747:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6760:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6760:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6771:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6771:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6756:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6756:3:6"
																		},
																		"nativeSrc": "6756:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6756:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6703:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6703:43:6"
																},
																"nativeSrc": "6703:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6703:71:6"
															},
															"nativeSrc": "6703:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6703:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6828:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6828:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6841:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6841:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6852:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6852:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6837:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6837:3:6"
																		},
																		"nativeSrc": "6837:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6837:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6784:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6784:43:6"
																},
																"nativeSrc": "6784:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6784:72:6"
															},
															"nativeSrc": "6784:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6784:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6531:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6621:9:6",
														"nodeType": "YulTypedName",
														"src": "6621:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6633:6:6",
														"nodeType": "YulTypedName",
														"src": "6633:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6641:6:6",
														"nodeType": "YulTypedName",
														"src": "6641:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6652:4:6",
														"nodeType": "YulTypedName",
														"src": "6652:4:6",
														"type": ""
													}
												],
												"src": "6531:332:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenLock: current time is befor\")\n\n        mstore(add(memPtr, 32), \"e release time.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenLock: no tokens to release\")\n\n    }\n\n    function abi_encode_t_stringliteral_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"812": [
									{
										"length": 32,
										"start": 472
									},
									{
										"length": 32,
										"start": 692
									},
									{
										"length": 32,
										"start": 986
									}
								],
								"814": [
									{
										"length": 32,
										"start": 257
									},
									{
										"length": 32,
										"start": 752
									}
								],
								"816": [
									{
										"length": 32,
										"start": 221
									},
									{
										"length": 32,
										"start": 329
									}
								],
								"818": [
									{
										"length": 32,
										"start": 293
									},
									{
										"length": 32,
										"start": 362
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80630d6680871461005957806338af3eed1461007757806378e979251461009557806386d1a69f146100b3578063fc0c546a146100bd575b5f80fd5b6100616100db565b60405161006e9190610414565b60405180910390f35b61007f6100ff565b60405161008c919061046c565b60405180910390f35b61009d610123565b6040516100aa9190610414565b60405180910390f35b6100bb610147565b005b6100c56103d8565b6040516100d291906104e0565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006101939190610526565b4210156101d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cc906105d9565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161022f919061046c565b602060405180830381865afa15801561024a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026e9190610625565b90505f81116102b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a99061069a565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b815260040161032d9291906106b8565b6020604051808303815f875af1158015610349573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061036d9190610714565b503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f10b55f01b1cfe0feeb7d144f66162661602d8e73256499b6d8342aac37ff067942846040516103cd92919061073f565b60405180910390a350565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f819050919050565b61040e816103fc565b82525050565b5f6020820190506104275f830184610405565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104568261042d565b9050919050565b6104668161044c565b82525050565b5f60208201905061047f5f83018461045d565b92915050565b5f819050919050565b5f6104a86104a361049e8461042d565b610485565b61042d565b9050919050565b5f6104b98261048e565b9050919050565b5f6104ca826104af565b9050919050565b6104da816104c0565b82525050565b5f6020820190506104f35f8301846104d1565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610530826103fc565b915061053b836103fc565b9250828201905080821115610553576105526104f9565b5b92915050565b5f82825260208201905092915050565b7f546f6b656e4c6f636b3a2063757272656e742074696d65206973206265666f725f8201527f652072656c656173652074696d652e0000000000000000000000000000000000602082015250565b5f6105c3602f83610559565b91506105ce82610569565b604082019050919050565b5f6020820190508181035f8301526105f0816105b7565b9050919050565b5f80fd5b610604816103fc565b811461060e575f80fd5b50565b5f8151905061061f816105fb565b92915050565b5f6020828403121561063a576106396105f7565b5b5f61064784828501610611565b91505092915050565b7f546f6b656e4c6f636b3a206e6f20746f6b656e7320746f2072656c65617365005f82015250565b5f610684601f83610559565b915061068f82610650565b602082019050919050565b5f6020820190508181035f8301526106b181610678565b9050919050565b5f6040820190506106cb5f83018561045d565b6106d86020830184610405565b9392505050565b5f8115159050919050565b6106f3816106df565b81146106fd575f80fd5b50565b5f8151905061070e816106ea565b92915050565b5f60208284031215610729576107286105f7565b5b5f61073684828501610700565b91505092915050565b5f6040820190506107525f830185610405565b61075f6020830184610405565b939250505056fea26469706673582212207d9383e12836a0d90421b2109e14bca71cd635d8ccecbf2dcd1958825eb079d664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD668087 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xBD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x147 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC5 PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x625 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A9 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP3 SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x349 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x714 JUMP JUMPDEST POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x10B55F01B1CFE0FEEB7D144F66162661602D8E73256499B6D8342AAC37FF0679 TIMESTAMP DUP5 PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP3 SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40E DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x427 PUSH0 DUP4 ADD DUP5 PUSH2 0x405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x456 DUP3 PUSH2 0x42D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x466 DUP2 PUSH2 0x44C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47F PUSH0 DUP4 ADD DUP5 PUSH2 0x45D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4A8 PUSH2 0x4A3 PUSH2 0x49E DUP5 PUSH2 0x42D JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4B9 DUP3 PUSH2 0x48E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4CA DUP3 PUSH2 0x4AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DA DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x4D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x530 DUP3 PUSH2 0x3FC JUMP JUMPDEST SWAP2 POP PUSH2 0x53B DUP4 PUSH2 0x3FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x553 JUMPI PUSH2 0x552 PUSH2 0x4F9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E4C6F636B3A2063757272656E742074696D65206973206265666F72 PUSH0 DUP3 ADD MSTORE PUSH32 0x652072656C656173652074696D652E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5C3 PUSH1 0x2F DUP4 PUSH2 0x559 JUMP JUMPDEST SWAP2 POP PUSH2 0x5CE DUP3 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5F0 DUP2 PUSH2 0x5B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x604 DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP2 EQ PUSH2 0x60E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x61F DUP2 PUSH2 0x5FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x63A JUMPI PUSH2 0x639 PUSH2 0x5F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x647 DUP5 DUP3 DUP6 ADD PUSH2 0x611 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E4C6F636B3A206E6F20746F6B656E7320746F2072656C6561736500 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x684 PUSH1 0x1F DUP4 PUSH2 0x559 JUMP JUMPDEST SWAP2 POP PUSH2 0x68F DUP3 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6B1 DUP2 PUSH2 0x678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6CB PUSH0 DUP4 ADD DUP6 PUSH2 0x45D JUMP JUMPDEST PUSH2 0x6D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F3 DUP2 PUSH2 0x6DF JUMP JUMPDEST DUP2 EQ PUSH2 0x6FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x70E DUP2 PUSH2 0x6EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x5F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x736 DUP5 DUP3 DUP6 ADD PUSH2 0x700 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x752 PUSH0 DUP4 ADD DUP6 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x75F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x9383E12836A0D90421B2109E14BCA71CD635D8CCECBF2DCD1958825EB079 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1097:1548:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1523:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1452:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1592:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2254:388;;;:::i;:::-;;1388:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1523:33;;;:::o;1452:36::-;;;:::o;1592:34::-;;;:::o;2254:388::-;2330:8;2318:9;:20;;;;:::i;:::-;2299:15;:39;;2291:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;2401:14;2418:5;:15;;;2442:4;2418:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2401:47;;2476:1;2467:6;:10;2459:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2524:5;:14;;;2539:11;2552:6;2524:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2603:4;2575:59;;2583:10;2575:59;;;2610:15;2627:6;2575:59;;;;;;;:::i;:::-;;;;;;;;2280:362;2254:388::o;1388:29::-;;;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1028:60::-;1056:3;1077:5;1070:12;;1028:60;;;:::o;1094:142::-;1144:9;1177:53;1195:34;1204:24;1222:5;1204:24;:::i;:::-;1195:34;:::i;:::-;1177:53;:::i;:::-;1164:66;;1094:142;;;:::o;1242:126::-;1292:9;1325:37;1356:5;1325:37;:::i;:::-;1312:50;;1242:126;;;:::o;1374:140::-;1438:9;1471:37;1502:5;1471:37;:::i;:::-;1458:50;;1374:140;;;:::o;1520:159::-;1621:51;1666:5;1621:51;:::i;:::-;1616:3;1609:64;1520:159;;:::o;1685:250::-;1792:4;1830:2;1819:9;1815:18;1807:26;;1843:85;1925:1;1914:9;1910:17;1901:6;1843:85;:::i;:::-;1685:250;;;;:::o;1941:180::-;1989:77;1986:1;1979:88;2086:4;2083:1;2076:15;2110:4;2107:1;2100:15;2127:191;2167:3;2186:20;2204:1;2186:20;:::i;:::-;2181:25;;2220:20;2238:1;2220:20;:::i;:::-;2215:25;;2263:1;2260;2256:9;2249:16;;2284:3;2281:1;2278:10;2275:36;;;2291:18;;:::i;:::-;2275:36;2127:191;;;;:::o;2324:169::-;2408:11;2442:6;2437:3;2430:19;2482:4;2477:3;2473:14;2458:29;;2324:169;;;;:::o;2499:234::-;2639:34;2635:1;2627:6;2623:14;2616:58;2708:17;2703:2;2695:6;2691:15;2684:42;2499:234;:::o;2739:366::-;2881:3;2902:67;2966:2;2961:3;2902:67;:::i;:::-;2895:74;;2978:93;3067:3;2978:93;:::i;:::-;3096:2;3091:3;3087:12;3080:19;;2739:366;;;:::o;3111:419::-;3277:4;3315:2;3304:9;3300:18;3292:26;;3364:9;3358:4;3354:20;3350:1;3339:9;3335:17;3328:47;3392:131;3518:4;3392:131;:::i;:::-;3384:139;;3111:419;;;:::o;3617:117::-;3726:1;3723;3716:12;3863:122;3936:24;3954:5;3936:24;:::i;:::-;3929:5;3926:35;3916:63;;3975:1;3972;3965:12;3916:63;3863:122;:::o;3991:143::-;4048:5;4079:6;4073:13;4064:22;;4095:33;4122:5;4095:33;:::i;:::-;3991:143;;;;:::o;4140:351::-;4210:6;4259:2;4247:9;4238:7;4234:23;4230:32;4227:119;;;4265:79;;:::i;:::-;4227:119;4385:1;4410:64;4466:7;4457:6;4446:9;4442:22;4410:64;:::i;:::-;4400:74;;4356:128;4140:351;;;;:::o;4497:181::-;4637:33;4633:1;4625:6;4621:14;4614:57;4497:181;:::o;4684:366::-;4826:3;4847:67;4911:2;4906:3;4847:67;:::i;:::-;4840:74;;4923:93;5012:3;4923:93;:::i;:::-;5041:2;5036:3;5032:12;5025:19;;4684:366;;;:::o;5056:419::-;5222:4;5260:2;5249:9;5245:18;5237:26;;5309:9;5303:4;5299:20;5295:1;5284:9;5280:17;5273:47;5337:131;5463:4;5337:131;:::i;:::-;5329:139;;5056:419;;;:::o;5481:332::-;5602:4;5640:2;5629:9;5625:18;5617:26;;5653:71;5721:1;5710:9;5706:17;5697:6;5653:71;:::i;:::-;5734:72;5802:2;5791:9;5787:18;5778:6;5734:72;:::i;:::-;5481:332;;;;;:::o;5819:90::-;5853:7;5896:5;5889:13;5882:21;5871:32;;5819:90;;;:::o;5915:116::-;5985:21;6000:5;5985:21;:::i;:::-;5978:5;5975:32;5965:60;;6021:1;6018;6011:12;5965:60;5915:116;:::o;6037:137::-;6091:5;6122:6;6116:13;6107:22;;6138:30;6162:5;6138:30;:::i;:::-;6037:137;;;;:::o;6180:345::-;6247:6;6296:2;6284:9;6275:7;6271:23;6267:32;6264:119;;;6302:79;;:::i;:::-;6264:119;6422:1;6447:61;6500:7;6491:6;6480:9;6476:22;6447:61;:::i;:::-;6437:71;;6393:125;6180:345;;;;:::o;6531:332::-;6652:4;6690:2;6679:9;6675:18;6667:26;;6703:71;6771:1;6760:9;6756:17;6747:6;6703:71;:::i;:::-;6784:72;6852:2;6841:9;6837:18;6828:6;6784:72;:::i;:::-;6531:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "389600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "infinite",
								"lockTime()": "infinite",
								"release()": "infinite",
								"startTime()": "infinite",
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1747,
									"end": 2155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1880,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1868,
									"end": 1877,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1868,
									"end": 1880,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "PUSH",
									"source": 5,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1860,
									"end": 1927,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1860,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 1952,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1977,
									"end": 1989,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1963,
									"end": 1989,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1963,
									"end": 1989,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1963,
									"end": 1989,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 1963,
									"end": 1989,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1963,
									"end": 1989,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1963,
									"end": 1989,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1963,
									"end": 1989,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1963,
									"end": 1989,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1963,
									"end": 1989,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1963,
									"end": 1989,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2011,
									"end": 2020,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2000,
									"end": 2020,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 2000,
									"end": 2020,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2000,
									"end": 2020,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2000,
									"end": 2020,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2000,
									"end": 2020,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2000,
									"end": 2020,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2043,
									"end": 2058,
									"name": "TIMESTAMP",
									"source": 5
								},
								{
									"begin": 2031,
									"end": 2058,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2031,
									"end": 2058,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2031,
									"end": 2058,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2031,
									"end": 2058,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2031,
									"end": 2058,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2031,
									"end": 2058,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2111,
									"end": 2117,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2089,
									"end": 2101,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "PUSH",
									"source": 5,
									"value": "E5D7D4B5CB0219916A8BE73968F7BAF3C806FD018B0CC5598F5129436CF5C316"
								},
								{
									"begin": 2120,
									"end": 2135,
									"name": "TIMESTAMP",
									"source": 5
								},
								{
									"begin": 2137,
									"end": 2146,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 2074,
									"end": 2147,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2147,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 2155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1139,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1017,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1108,
									"end": 1113,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1090,
									"end": 1114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1083,
									"end": 1088,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1080,
									"end": 1115,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1130,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1126,
									"end": 1127,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1131,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1139,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1139,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1207,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1239,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1240,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1218,
									"end": 1240,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1218,
									"end": 1240,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1276,
									"end": 1281,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1249,
									"end": 1282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1294,
									"end": 1371,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1294,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1331,
									"end": 1338,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1360,
									"end": 1365,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1349,
									"end": 1365,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1349,
									"end": 1365,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1294,
									"end": 1371,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1294,
									"end": 1371,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1294,
									"end": 1371,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1294,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1499,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1377,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1450,
									"end": 1474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1443,
									"end": 1448,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1440,
									"end": 1475,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1489,
									"end": 1490,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1486,
									"end": 1487,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1479,
									"end": 1491,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1499,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1593,
									"end": 1599,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1587,
									"end": 1600,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1578,
									"end": 1600,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1578,
									"end": 1600,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1636,
									"end": 1641,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1609,
									"end": 1642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1505,
									"end": 1648,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1654,
									"end": 2345,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1654,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1756,
									"end": 1762,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1764,
									"end": 1770,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1772,
									"end": 1778,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1823,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1809,
									"end": 1818,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1807,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1796,
									"end": 1819,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1792,
									"end": 1824,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1789,
									"end": 1908,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1789,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1789,
									"end": 1908,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1827,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1827,
									"end": 1906,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1906,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1827,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1789,
									"end": 1908,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1789,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1947,
									"end": 1948,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1972,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 2042,
									"end": 2049,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2033,
									"end": 2039,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2031,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2018,
									"end": 2040,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1972,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1972,
									"end": 2050,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1972,
									"end": 2050,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1972,
									"end": 2050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 2050,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 2050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 2060,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2099,
									"end": 2101,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2125,
									"end": 2189,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2181,
									"end": 2188,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2172,
									"end": 2178,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2161,
									"end": 2170,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2157,
									"end": 2179,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2189,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2125,
									"end": 2189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2125,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2115,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2115,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2070,
									"end": 2199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2240,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2264,
									"end": 2328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2320,
									"end": 2327,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2311,
									"end": 2317,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2309,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2296,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2264,
									"end": 2328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2264,
									"end": 2328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2264,
									"end": 2328,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2264,
									"end": 2328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2328,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2328,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2338,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1654,
									"end": 2345,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1654,
									"end": 2345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1654,
									"end": 2345,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1654,
									"end": 2345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1654,
									"end": 2345,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1654,
									"end": 2345,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2351,
									"end": 2520,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2351,
									"end": 2520,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2435,
									"end": 2446,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2464,
									"end": 2467,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2457,
									"end": 2476,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2509,
									"end": 2513,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2504,
									"end": 2507,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2500,
									"end": 2514,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2485,
									"end": 2514,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2485,
									"end": 2514,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2351,
									"end": 2520,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2351,
									"end": 2520,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2351,
									"end": 2520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2351,
									"end": 2520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2351,
									"end": 2520,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2526,
									"end": 2755,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2526,
									"end": 2755,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2666,
									"end": 2700,
									"name": "PUSH",
									"source": 6,
									"value": "546F6B656E4C6F636B3A206C6F636B2074696D652073686F756C642067726561"
								},
								{
									"begin": 2662,
									"end": 2663,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2654,
									"end": 2660,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2650,
									"end": 2664,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2643,
									"end": 2701,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2735,
									"end": 2747,
									"name": "PUSH",
									"source": 6,
									"value": "746572207468616E203000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2730,
									"end": 2732,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2722,
									"end": 2728,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2718,
									"end": 2733,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2711,
									"end": 2748,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2526,
									"end": 2755,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2526,
									"end": 2755,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 3127,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2761,
									"end": 3127,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2903,
									"end": 2906,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2924,
									"end": 2991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2988,
									"end": 2990,
									"name": "PUSH",
									"source": 6,
									"value": "2A"
								},
								{
									"begin": 2983,
									"end": 2986,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2924,
									"end": 2991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2924,
									"end": 2991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2924,
									"end": 2991,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2924,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2917,
									"end": 2991,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2917,
									"end": 2991,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3000,
									"end": 3093,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 3089,
									"end": 3092,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3000,
									"end": 3093,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3000,
									"end": 3093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3000,
									"end": 3093,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 3000,
									"end": 3093,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3118,
									"end": 3120,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3113,
									"end": 3116,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3109,
									"end": 3121,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3102,
									"end": 3121,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3102,
									"end": 3121,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 3127,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 3127,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 3127,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 3127,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3552,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3133,
									"end": 3552,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3299,
									"end": 3303,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3337,
									"end": 3339,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3326,
									"end": 3335,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3322,
									"end": 3340,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3340,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3340,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3386,
									"end": 3395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3380,
									"end": 3384,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3372,
									"end": 3373,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3361,
									"end": 3370,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3357,
									"end": 3374,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3350,
									"end": 3397,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3414,
									"end": 3545,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 3540,
									"end": 3544,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3414,
									"end": 3545,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3414,
									"end": 3545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3414,
									"end": 3545,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 3414,
									"end": 3545,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3406,
									"end": 3545,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3406,
									"end": 3545,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3552,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3552,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3552,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3552,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3558,
									"end": 3676,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3558,
									"end": 3676,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3645,
									"end": 3669,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3663,
									"end": 3668,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3645,
									"end": 3669,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3645,
									"end": 3669,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3645,
									"end": 3669,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3645,
									"end": 3669,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3640,
									"end": 3643,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3633,
									"end": 3670,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3558,
									"end": 3676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3558,
									"end": 3676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3558,
									"end": 3676,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3682,
									"end": 4014,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 3682,
									"end": 4014,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3803,
									"end": 3807,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3841,
									"end": 3843,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3830,
									"end": 3839,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3826,
									"end": 3844,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3818,
									"end": 3844,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3818,
									"end": 3844,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3854,
									"end": 3925,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 3922,
									"end": 3923,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3911,
									"end": 3920,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3907,
									"end": 3924,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3898,
									"end": 3904,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3854,
									"end": 3925,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3854,
									"end": 3925,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3854,
									"end": 3925,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 3854,
									"end": 3925,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3935,
									"end": 4007,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 4003,
									"end": 4005,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3992,
									"end": 4001,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3988,
									"end": 4006,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3935,
									"end": 4007,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3935,
									"end": 4007,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3935,
									"end": 4007,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3935,
									"end": 4007,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3682,
									"end": 4014,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3682,
									"end": 4014,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3682,
									"end": 4014,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3682,
									"end": 4014,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3682,
									"end": 4014,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3682,
									"end": 4014,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "818"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "816"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "814"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "812"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 2645,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d9383e12836a0d90421b2109e14bca71cd635d8ccecbf2dcd1958825eb079d664736f6c634300081a0033",
									".code": [
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "D668087"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "38AF3EED"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "78E97925"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "86D1A69F"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 2645,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1523,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1523,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1452,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1452,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1592,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1592,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2642,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2254,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2254,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2254,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2642,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2254,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2642,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1388,
											"end": 1417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1388,
											"end": 1417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "816"
										},
										{
											"begin": 1523,
											"end": 1556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "814"
										},
										{
											"begin": 1452,
											"end": 1488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "818"
										},
										{
											"begin": 1592,
											"end": 1626,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2642,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2254,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2338,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "816"
										},
										{
											"begin": 2318,
											"end": 2327,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "818"
										},
										{
											"begin": 2318,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2318,
											"end": 2338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2318,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2338,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2318,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2314,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2338,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2338,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2291,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2291,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2423,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "812"
										},
										{
											"begin": 2418,
											"end": 2433,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2418,
											"end": 2433,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2433,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2418,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2418,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2477,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2459,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2459,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2529,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "812"
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "814"
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2524,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2607,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2593,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "PUSH",
											"source": 5,
											"value": "10B55F01B1CFE0FEEB7D144F66162661602D8E73256499B6D8342AAC37FF0679"
										},
										{
											"begin": 2610,
											"end": 2625,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2633,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2575,
											"end": 2634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2634,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "812"
										},
										{
											"begin": 1388,
											"end": 1417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1070,
											"end": 1082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1070,
											"end": 1082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1204,
											"end": 1228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1195,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1177,
											"end": 1230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1325,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1471,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1666,
											"end": 1671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1621,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1619,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1673,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1828,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1923,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1907,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1843,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2121,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1941,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2066,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 2067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2090,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2083,
											"end": 2084,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2076,
											"end": 2091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2110,
											"end": 2114,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2107,
											"end": 2108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2115,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2318,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2127,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2186,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2206,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2186,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2206,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2239,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2220,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2240,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2287,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2281,
											"end": 2282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2275,
											"end": 2311,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2275,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2275,
											"end": 2311,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2291,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2291,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2309,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2291,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2275,
											"end": 2311,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2275,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2318,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2318,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2493,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2324,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2419,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2437,
											"end": 2440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2486,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2493,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2733,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2499,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E4C6F636B3A2063757272656E742074696D65206973206265666F72"
										},
										{
											"begin": 2635,
											"end": 2636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2725,
											"name": "PUSH",
											"source": 6,
											"value": "652072656C656173652074696D652E0000000000000000000000000000000000"
										},
										{
											"begin": 2703,
											"end": 2705,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2706,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2726,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 3105,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2739,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2966,
											"end": 2968,
											"name": "PUSH",
											"source": 6,
											"value": "2F"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2902,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 2969,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2902,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3067,
											"end": 3070,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2978,
											"end": 3071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 3105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 3105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 3105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 3105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3530,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3111,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3317,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3304,
											"end": 3313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3318,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3374,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3375,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3518,
											"end": 3522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3392,
											"end": 3523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3523,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3392,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3734,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3617,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3726,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3724,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3728,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3985,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3863,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3936,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3954,
											"end": 3959,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3936,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3936,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3936,
											"end": 3960,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3936,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3961,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3916,
											"end": 3979,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3976,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 3977,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 3979,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3916,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4134,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3991,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4048,
											"end": 4053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4122,
											"end": 4127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4095,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4128,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4095,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4134,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4491,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4140,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4245,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4257,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4262,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4227,
											"end": 4346,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4227,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4227,
											"end": 4346,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4265,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4265,
											"end": 4344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4344,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4265,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4227,
											"end": 4346,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4227,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4463,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4455,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4410,
											"end": 4474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4474,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4410,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4400,
											"end": 4474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4400,
											"end": 4474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4491,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4491,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4678,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4497,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4670,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E4C6F636B3A206E6F20746F6B656E7320746F2072656C6561736500"
										},
										{
											"begin": 4633,
											"end": 4634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4631,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 5050,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4684,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 4829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4911,
											"end": 4913,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4906,
											"end": 4909,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4847,
											"end": 4914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4914,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4847,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 4914,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 4914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5012,
											"end": 5015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4923,
											"end": 5016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5016,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4923,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5043,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5036,
											"end": 5039,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 5050,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 5050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 5050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 5050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5475,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 5056,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5222,
											"end": 5226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5249,
											"end": 5258,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5319,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5280,
											"end": 5297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5320,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5463,
											"end": 5467,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 5337,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5468,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5337,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5475,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5475,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5813,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5481,
											"end": 5813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5721,
											"end": 5722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5710,
											"end": 5719,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5703,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 5653,
											"end": 5724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 5724,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5653,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5802,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5791,
											"end": 5800,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5787,
											"end": 5805,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 5734,
											"end": 5806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5806,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5734,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5813,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5813,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5909,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5819,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 5902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5903,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5909,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 6031,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5915,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 6000,
											"end": 6005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5985,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6006,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5985,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5975,
											"end": 6007,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5965,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5965,
											"end": 6025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6021,
											"end": 6022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5965,
											"end": 6025,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5965,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 6031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 6031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6037,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6122,
											"end": 6128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6116,
											"end": 6129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6107,
											"end": 6129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6107,
											"end": 6129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6162,
											"end": 6167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6138,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6174,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6525,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6180,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6296,
											"end": 6298,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6284,
											"end": 6293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6282,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 6294,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6299,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6383,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6264,
											"end": 6383,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6302,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6302,
											"end": 6381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6381,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6302,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6383,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6264,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 6500,
											"end": 6507,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6491,
											"end": 6497,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6480,
											"end": 6489,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6476,
											"end": 6498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6447,
											"end": 6508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6508,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 6447,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6508,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6525,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6863,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 6531,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6652,
											"end": 6656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6690,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6679,
											"end": 6688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6675,
											"end": 6693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6771,
											"end": 6772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6769,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6747,
											"end": 6753,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 6703,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6774,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6703,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 6852,
											"end": 6854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6841,
											"end": 6850,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 6855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6828,
											"end": 6834,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 6784,
											"end": 6856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6856,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 6784,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6863,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6863,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/tokenLock.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"lockTime()": "0d668087",
							"release()": "86d1a69f",
							"startTime()": "78e97925",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockTime_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Release\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"name\":\"TokenLockStart\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"release()\":{\"notice\":\"Release token to beneficiary after the end period of lock-up time*\"}},\"notice\":\"What is Token Lock? It is a contract base on time lock which can lock the tokens in the contract for a period of time. Beneficiary can withdraw the tokens after the lock-up preiod time expires. Token Lock generally is used to lock liquidity provider LP tokens. What is LP token? In DEX exchanger, they use AMM mechanisms. So it need users or project owners to provide fund pool which can let other users buy or sell instantly. Simply speaking, user/project pledge their token pair (ETH/DAI) to the fund pool.  And DEX will give them LP tokens that means they have pledged equal shares. Why need to lock liquidity? If project owner withdraw LP token from the pool, other invester's token will be zero  which is called rug-pull. So we need to lock the LP token in the contract. And before the end of lock-up period, project owner can not withdraw the LP token. This measure avoid from rug-pull attack.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokenLock.sol\":\"TokenLocker\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/tokenLock.sol\":{\"keccak256\":\"0xac0bda25d27b291c845bef26c594ba3746b6612acf1560466db8ac82b2b2c4b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c7fd27a4ce8061d54db16c2ec396914d66485af67d4d8c5a6366a359db4ee0e\",\"dweb:/ipfs/QmbWRrU9r1KXSr55SucEnBrfw3jN5PF3ueLcreAMsoMncw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"release()": {
								"notice": "Release token to beneficiary after the end period of lock-up time*"
							}
						},
						"notice": "What is Token Lock? It is a contract base on time lock which can lock the tokens in the contract for a period of time. Beneficiary can withdraw the tokens after the lock-up preiod time expires. Token Lock generally is used to lock liquidity provider LP tokens. What is LP token? In DEX exchanger, they use AMM mechanisms. So it need users or project owners to provide fund pool which can let other users buy or sell instantly. Simply speaking, user/project pledge their token pair (ETH/DAI) to the fund pool.  And DEX will give them LP tokens that means they have pledged equal shares. Why need to lock liquidity? If project owner withdraw LP token from the pool, other invester's token will be zero  which is called rug-pull. So we need to lock the LP token in the contract. And before the end of lock-up period, project owner can not withdraw the LP token. This measure avoid from rug-pull attack.*",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/tokenLock.sol": {
				"ast": {
					"absolutePath": "contracts/tokenLock.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"TokenLocker": [
							916
						]
					},
					"id": 917,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 917,
							"sourceUnit": 652,
							"src": "61:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenLocker",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 789,
								"nodeType": "StructuredDocumentation",
								"src": "124:971:5",
								"text": "What is Token Lock?\nIt is a contract base on time lock which can lock the tokens in the contract for a period of time.\nBeneficiary can withdraw the tokens after the lock-up preiod time expires.\nToken Lock generally is used to lock liquidity provider LP tokens.\nWhat is LP token?\nIn DEX exchanger, they use AMM mechanisms. So it need users or project owners to provide fund pool\nwhich can let other users buy or sell instantly.\nSimply speaking, user/project pledge their token pair (ETH/DAI) to the fund pool. \nAnd DEX will give them LP tokens that means they have pledged equal shares.\nWhy need to lock liquidity?\nIf project owner withdraw LP token from the pool, other invester's token will be zero  which is called rug-pull.\nSo we need to lock the LP token in the contract. And before the end of lock-up period,\nproject owner can not withdraw the LP token. This measure avoid from rug-pull attack.*"
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916
							],
							"name": "TokenLocker",
							"nameLocation": "1106:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e5d7d4b5cb0219916a8be73968f7baf3c806fd018b0cc5598f5129436cf5c316",
									"id": 799,
									"name": "TokenLockStart",
									"nameLocation": "1133:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1165:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "1148:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1194:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "1178:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "1209:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "1201:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockTime",
												"nameLocation": "1228:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "1220:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:90:5"
									},
									"src": "1127:111:5"
								},
								{
									"anonymous": false,
									"eventSelector": "10b55f01b1cfe0feeb7d144f66162661602d8e73256499b6d8342aac37ff0679",
									"id": 809,
									"name": "Release",
									"nameLocation": "1250:7:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1274:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1258:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1303:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1287:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "1318:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1310:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1339:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1331:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:89:5"
									},
									"src": "1244:103:5"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 812,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "1412:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "1388:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 811,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 810,
											"name": "IERC20",
											"nameLocations": [
												"1388:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "1388:6:5"
										},
										"referencedDeclaration": 729,
										"src": "1388:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38af3eed",
									"id": 814,
									"mutability": "immutable",
									"name": "beneficiary",
									"nameLocation": "1477:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "1452:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 813,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1452:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d668087",
									"id": 816,
									"mutability": "immutable",
									"name": "lockTime",
									"nameLocation": "1548:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "1523:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 815,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1523:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 818,
									"mutability": "immutable",
									"name": "startTime",
									"nameLocation": "1617:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "1592:34:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 817,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1592:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "1849:306:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 829,
																"name": "lockTime_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "1868:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1879:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1868:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e4c6f636b3a206c6f636b2074696d652073686f756c642067726561746572207468616e2030",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1882:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5",
																"typeString": "literal_string \"TokenLock: lock time should greater than 0\""
															},
															"value": "TokenLock: lock time should greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebfbb08ffa1cf67670d6c34508a1f8cd540207eb0507bfe5241c565a146240a5",
																"typeString": "literal_string \"TokenLock: lock time should greater than 0\""
															}
														],
														"id": 828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1860:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1860:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "1860:67:5"
											},
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1938:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 836,
														"name": "token_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "1946:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1938:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "1938:14:5"
											},
											{
												"expression": {
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 839,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "1963:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 840,
														"name": "beneficiary_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "1977:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1963:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "1963:26:5"
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "2000:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "lockTime_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "2011:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2000:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "2000:20:5"
											},
											{
												"expression": {
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 847,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2031:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 848,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2043:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2049:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2043:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2031:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "2031:27:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 853,
															"name": "beneficiary_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "2089:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 856,
																	"name": "token_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "2111:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2103:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 854,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2103:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2103:15:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 858,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2120:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2126:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2120:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 860,
															"name": "lockTime_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "2137:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "TokenLockStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "2074:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "EmitStatement",
												"src": "2069:78:5"
											}
										]
									},
									"id": 864,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "token_",
												"nameLocation": "1776:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "1769:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 820,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 819,
														"name": "IERC20",
														"nameLocations": [
															"1769:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "1769:6:5"
													},
													"referencedDeclaration": 729,
													"src": "1769:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "beneficiary_",
												"nameLocation": "1801:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "1793:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1793:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "lockTime_",
												"nameLocation": "1832:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "1824:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1758:90:5"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1849:0:5"
									},
									"scope": 916,
									"src": "1747:408:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2280:362:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 869,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2299:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2305:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2299:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 871,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "2318:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 872,
																	"name": "lockTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "2330:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2318:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2299:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e4c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d652e",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2340:49:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4",
																"typeString": "literal_string \"TokenLock: current time is before release time.\""
															},
															"value": "TokenLock: current time is before release time."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c7cf61970e7ed8b3731cb0eaa70436aeed221b9e9fa72f4bf45fbcb438cbba4",
																"typeString": "literal_string \"TokenLock: current time is before release time.\""
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2291:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:99:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "2291:99:5"
											},
											{
												"assignments": [
													879
												],
												"declarations": [
													{
														"constant": false,
														"id": 879,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2409:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "2401:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 878,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2401:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 887,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 884,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2442:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenLocker_$916",
																		"typeString": "contract TokenLocker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenLocker_$916",
																		"typeString": "contract TokenLocker"
																	}
																],
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2434:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 882,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2434:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 880,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "2418:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2424:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "2418:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2418:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2401:47:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "2467:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2476:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2467:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e4c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2479:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba",
																"typeString": "literal_string \"TokenLock: no tokens to release\""
															},
															"value": "TokenLock: no tokens to release"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e6d413b293f629f3d626f38a333672261080936ce7f6bbf26d44a24ec4b25ba",
																"typeString": "literal_string \"TokenLock: no tokens to release\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2459:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2459:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "2459:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 898,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "2539:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "2552:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 895,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "2524:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2530:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "2524:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2524:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "2524:35:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 903,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2583:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2587:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2583:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 907,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2603:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenLocker_$916",
																		"typeString": "contract TokenLocker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenLocker_$916",
																		"typeString": "contract TokenLocker"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2595:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2595:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2595:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 909,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2610:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2616:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2610:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 911,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "2627:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 902,
														"name": "Release",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "2575:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2575:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "2570:64:5"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2161:87:5",
										"text": "Release token to beneficiary after the end period of lock-up time*"
									},
									"functionSelector": "86d1a69f",
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "2263:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2270:2:5"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2280:0:5"
									},
									"scope": 916,
									"src": "2254:388:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 917,
							"src": "1097:1548:5",
							"usedErrors": [],
							"usedEvents": [
								799,
								809
							]
						}
					],
					"src": "33:2612:5"
				},
				"id": 5
			}
		}
	}
}